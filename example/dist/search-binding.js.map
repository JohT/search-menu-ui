{"mappings":"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","sources":["./src/js/search-binding.js","../src/js/ponyfills/xmlHttpRequestPonyfill.js","../src/js/search-service-client.js","../src/js/ponyfills/eventCurrentTargetPonyfill.js","../src/js/ponyfills/selectionRangePonyfill.js","../src/js/ponyfills/addEventListenerPonyfill.js","../src/js/search-menu-ui.js","./node_modules/data-restructor/devdist/templateResolver.js","./node_modules/data-restructor/devdist/datarestructor.js","./src/js/restruct-data-client.js"],"sourcesContent":["/**\n * @file Configures the search service client, assembles all parts and attaches it to the ui (start()).\n * @version {@link https://github.com/JohT/search-menu-ui/releases/latest latest version}\n * @author JohT\n */\n\nvar httpSearchClient;\n// The modules \"search-menu-ui\" and \"search-service-client\" are included directly, \n// because this example is also used during development.\n// When used as a starting point, change these imports to use the node package manager e.g. like the \"template_resolver\".\nvar searchMenuServiceClient = searchMenuServiceClient || require(\"../../../src/js/search-service-client\"); // supports vanilla js & npm\nvar searchmenu = searchmenu || require(\"../../../src/js/search-menu-ui\"); // supports vanilla js & npm\nvar template_resolver = template_resolver || require(\"data-restructor/devdist/templateResolver\"); // supports vanilla js & npm\nvar restruct = restruct || require(\"./restruct-data-client\"); // supports vanilla js & npm\n\n// Search using elasticsearch \"Multi search API\"\n// Reference: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html\nhttpSearchClient = new searchMenuServiceClient.HttpSearchConfig()\n  .searchMethod(\"POST\")\n  .searchContentType(\"application/x-ndjson\")\n  .searchUrlTemplate(\n    \"http://localhost:9200/_msearch/template?filter_path=responses.hits.total.value,responses.hits.hits._source,hits.responses.hits.highlight,responses.aggregations.*.buckets\"\n  )\n  .searchBodyTemplate(\n    '{\"index\": \"accounts\"}\\n' +\n      '{\"id\": \"account_search_as_you_type_v1\", \"params\":{{jsonSearchParameters}}}\\n' +\n      '{\"index\": \"accounts\"}\\n' +\n      '{\"id\": \"account_tags_v1\", \"params\":{\"account_aggregations_prefix\": \"\", \"account_aggregations_size\": 10}}\\n' +\n      '{\"index\": \"sites\"}\\n' +\n      '{\"id\": \"sites_default_v1\", \"params\":{\"tenantnumber\":{{tenantnumber}}}}\\n' +\n      '{\"index\": \"sites\"}\\n' +\n      '{\"id\": \"sites_search_as_you_type_v1\", \"params\":{{jsonSearchParameters}}}\\n'\n  )\n  .debugMode(true)\n  .build();\n\n// Locally mocked search with a few pre-queried search results (for local debugging and testing)\n// Uncomment this section to try search without elasticsearch with some prerecorded data responses.\n// httpSearchClient = new searchMenuServiceClient.HttpSearchConfig()\n//   .searchMethod(\"GET\")\n//   .searchUrlTemplate(\"/example/data/AccountSearchResult-{{searchtext}}.json\")\n//   .debugMode(true)\n//   .build();\n\n// Locally mocked ALREADY CONVERTED AND OPTIMIZED search menu data with a few pre-queried search results (for local debugging and testing)\n// Uncomment this section and the dataConverter-Assignment to try search without elasticsearch with some prerecorded data responses.\n// httpSearchClient = new searchMenuServiceClient.HttpSearchConfig()\n//   .searchMethod(\"GET\")\n//   .searchUrlTemplate(\"/example/data/AccountConvertedSearchOptimizedData-{{searchtext}}.json\")\n//   .debugMode(true)\n//   .build();\n\n//TODO could add an example on how to configure a view (e.g. results view)\n//TODO could add an example on how to use HTML inside a view's \"listEntryTextTemplate\" to further style the entries\n\n// Configure and start the search bar functionality.\nnew searchmenu.SearchMenuAPI()\n  .searchService(httpSearchClient.search)\n  .dataConverter(new restruct.DataConverter().createDataConverter(true))\n  .templateResolver(function (template, sourceObject) {\n    return new template_resolver.Resolver(sourceObject).resolveTemplate(template);\n  })\n  .addPredefinedParametersTo(function (searchParameters) {\n    searchParameters.tenantnumber = 999;\n  })\n  .addFocusStyleClassOnEveryCreatedElement(\"searchresultfocus\")\n  .start();\n","\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @namespace xmlHttpRequest\n */\nvar xmlHttpRequest = module.exports={}; // Fallback for vanilla js without modules\n\n/**\n * Provide the XMLHttpRequest constructor for Internet Explorer 5.x-6.x:\n * Other browsers (including Internet Explorer 7.x-9.x) do not redefine\n * XMLHttpRequest if it already exists.\n *\n * This example is based on findings at:\n * http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n * @returns {XMLHttpRequest}\n * @memberof xmlHttpRequest\n */\n xmlHttpRequest.getXMLHttpRequest = function () {\n  if (typeof XMLHttpRequest !== \"undefined\") {\n    try {\n      var request = new XMLHttpRequest();\n      request.status; //try, if status is accessible. Fails in IE5.\n      return request;\n    } catch (e) {\n      console.log(\"XMLHttpRequest not available: \" + e);\n    }\n  }\n  try {\n    return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n  } catch (e) {\n    console.log(\"XMLHttpRequest Msxml2.XMLHTTP.6.0 not available: \" + e);\n  }\n  try {\n    return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n  } catch (e) {\n    console.log(\"XMLHttpRequest Msxml2.XMLHTTP.3.0 not available: \" + e);\n  }\n  try {\n    return new ActiveXObject(\"Microsoft.XMLHTTP\");\n  } catch (e) {\n    console.log(\"XMLHttpRequest Microsoft.XMLHTTP not available: \" + e);\n  }\n  // Microsoft.XMLHTTP points to Msxml2.XMLHTTP and is redundant\n  throw new Error(\"This browser does not support XMLHttpRequest.\");\n};\n","/**\n * @file Provides the (http) client/connection to the search backend service.\n * @version {@link https://github.com/JohT/search-menu-ui/releases/latest latest version}\n * @author JohT\n * @version ${project.version}\n */\n\n\"use strict\";\n\nvar module = datarestructorInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction datarestructorInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n\n/**\n * Search-Menu Service-Client.\n * It provides the (http) client/connection to the search backend service.\n * @module searchMenuServiceClient\n */\nvar searchMenuServiceClient = (module.exports = {}); // Export module for npm...\nsearchMenuServiceClient.internalCreateIfNotExists = datarestructorInternalCreateIfNotExists;\n\nvar xmlHttpRequest = xmlHttpRequest || require(\"../../src/js/ponyfills/xmlHttpRequestPonyfill\"); // supports vanilla js & npm\n\n searchMenuServiceClient.HttpSearchConfig = (function () {\n  /**\n   * Configures and builds the {@link module:searchMenuServiceClient.HttpClient}.\n   * DescribedDataField is the main element of the restructured data and therefore considered \"public\".\n   * @constructs HttpSearchConfig\n   * @alias module:searchMenuServiceClient.HttpSearchConfig\n   */\n  function HttpSearchConfig() {\n    /**\n     * HTTP Search Configuration.\n     * @property {string} searchUrlTemplate URL that is called for every search request. It may include variables in double curly brackets like `{{searchtext}}`.\n     * @property {string} [searchMethod=\"POST\"] HTTP Method, that is used for every search request.\n     * @property {string} [searchContentType=\"application/json\"] HTTP MIME-Type of the body, that is used for every search request.\n     * @property {string} searchBodyTemplate HTTP body template, that is used for every search request. It may include variables in double curly brackets like `{{jsonSearchParameters}}`.\n     * @property {XMLHttpRequest} [httpRequest=new XMLHttpRequest()] Contains the XMLHttpRequest that is used to handle HTTP requests and responses. Defaults to XMLHttpRequest.\n     * @property {boolean} [debugMode=false] Adds detailed logging for development and debugging.\n     */\n    this.config = {\n      searchUrlTemplate: \"\",\n      searchMethod: \"POST\",\n      searchContentType: \"application/json\",\n      searchBodyTemplate: null,\n      /**\n       * Resolves variables in the search url template based on the given search parameters object.\n       * The variable {{jsonSearchParameters}} will be replaced by the JSON of all search parameters.\n       * @param {Object} searchParameters object properties will be used to replace the variables of the searchUrlTemplate\n       */\n      resolveSearchUrl: function (searchParameters) {\n        return resolveTemplate(this.searchUrlTemplate, searchParameters, this.debugMode);\n      },\n      /**\n       * Resolves variables in the search body template based on the given search parameters object.\n       * The variable {{jsonSearchParameters}} will be replaced by the JSON of all search parameters.\n       * @param {Object} searchParameters object properties will be used to replace the variables of the searchBodyTemplate\n       */\n      resolveSearchBody: function (searchParameters) {\n        return resolveTemplate(this.searchBodyTemplate, searchParameters, this.debugMode);\n      },\n      httpRequest: null,\n      debugMode: false\n    };\n    /**\n     * Sets the url for the HTTP request for the search.\n     * It may include variables in double curly brackets like {{searchtext}}.\n     * @param {String} value\n     * @return {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.searchUrlTemplate = function (value) {\n      this.config.searchUrlTemplate = value;\n      return this;\n    };\n    /**\n     * Sets the HTTP method for the search. Defaults to \"POST\".\n     * @param {String} value\n     * @return {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.searchMethod = function (value) {\n      this.config.searchMethod = value;\n      return this;\n    };\n    /**\n     * Sets the HTTP content type of the request body. Defaults to \"application/json\".\n     * @param {String} value\n     * @return {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.searchContentType = function (value) {\n      this.config.searchContentType = value;\n      return this;\n    };\n    /**\n     * Sets the HTTP request body template that may contain variables (e.g. {{searchParameters}}) in double curly brackets, or null if there is none.\n     * @param {String} value\n     * @return {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.searchBodyTemplate = function (value) {\n      this.config.searchBodyTemplate = value;\n      return this;\n    };\n    /**\n     * Sets the HTTP-Request-Object. Defaults to XMLHttpRequest if not set.\n     * @param {String} value\n     * @return {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.httpRequest = function (value) {\n      this.config.httpRequest = value;\n      return this;\n    };\n    /**\n     * Sets the debug mode, that prints some more info to the console.\n     * @param {boolean} value\n     * @return {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.debugMode = function (value) {\n      this.config.debugMode = value === true;\n      return this;\n    };\n    /**\n     * Uses the configuration to build the http client that provides the function \"search\" (parameters: searchParameters, onSuccess callback).\n     * @returns {module:searchMenuServiceClient.HttpClient}\n     */\n    this.build = function () {\n      if (!this.config.httpRequest) {\n        this.config.httpRequest = xmlHttpRequest.getXMLHttpRequest();\n      }\n      return new searchMenuServiceClient.HttpClient(this.config);\n    };\n  }\n\n  /**\n   * Resolves variables in the template based on the given search parameters object.\n   * The variable {{jsonSearchParameters}} will be replaced by the JSON of all search parameters.\n   * @param {String} template contains variables in double curly brackets that should be replaced by the values of the parameterSourceObject.\n   * @param {Object} parameterSourceObject object properties will be used to replace the variables of the template\n   * @param {boolean} debugMode enables/disables extended logging for debugging\n   * @memberof module:searchMenuServiceClient.HttpSearchConfig\n   * @protected\n   */\n  function resolveTemplate(template, parameterSourceObject, debugMode) {\n    if (template == null) {\n      return null;\n    }\n    var jsonSearchParameters = JSON.stringify(parameterSourceObject);\n    var resolvedBody = template;\n    resolvedBody = resolveVariableInTemplate(resolvedBody, \"jsonSearchParameters\", jsonSearchParameters);\n    resolvedBody = resolveVariablesInTemplate(resolvedBody, parameterSourceObject);\n    if (debugMode) {\n      console.log(\"template=\" + template);\n      console.log(\"{{jsonSearchParameters}}=\" + jsonSearchParameters);\n      console.log(\"resolved template=\" + resolvedBody);\n    }\n    return resolvedBody;\n  }\n\n  function resolveVariablesInTemplate(templateString, sourceDataObject) {\n    var resolvedString = templateString;\n    forEachFieldsIn(sourceDataObject, function (fieldName, fieldValue) {\n      resolvedString = resolveVariableInTemplate(resolvedString, fieldName, fieldValue);\n    });\n    return resolvedString;\n  }\n\n  function resolveVariableInTemplate(templateString, fieldName, fieldValue) {\n    //TODO could there be a better compatible solution to replace ALL occurrences instead of creating regular expressions?\n    var variableReplaceRegExp = new RegExp(\"\\\\{\\\\{\" + escapeCharsForRegEx(fieldName) + \"\\\\}\\\\}\", \"gm\");\n    return templateString.replace(variableReplaceRegExp, fieldValue);\n  }\n\n  function escapeCharsForRegEx(characters) {\n    var nonWordCharactersRegEx = new RegExp(\"([^-\\\\w])\", \"gi\");\n    return characters.replace(nonWordCharactersRegEx, \"\\\\$1\");\n  }\n\n  function forEachFieldsIn(object, fieldNameAndValueConsumer) {\n    var fieldNames = Object.keys(object);\n    var index, fieldName, fieldValue;\n    for (index = 0; index < fieldNames.length; index += 1) {\n      fieldName = fieldNames[index];\n      fieldValue = object[fieldName];\n      fieldNameAndValueConsumer(fieldName, fieldValue);\n    }\n  }\n\n  return HttpSearchConfig;\n}());\n\n/**\n * This function will be called, when search results are available.\n * @callback module:searchMenuServiceClient.HttpClient.SearchServiceResultAvailable\n * @param {Object} searchResultData already parsed data object containing the result of the search\n */\n\nsearchMenuServiceClient.HttpClient = (function () {\n  /**\n   * HttpClient.\n   *\n   * Contains the \"backend-connection\" of the search bar. It submits the search query,\n   * parses the results and informs the callback as soon as these results are available.\n   * @example new searchMenuServiceClient.HttpSearchConfig()....build();\n   * @param {module:searchMenuServiceClient.HttpSearchConfig} config \n   * @constructs HttpClient\n   * @alias module:searchMenuServiceClient.HttpClient\n   */\n  var instance = function (config) {\n    /**\n     * Configuration for the search HTTP requests.\n     * @type {module:searchMenuServiceClient.HttpSearchConfig}\n     */\n    this.config = config;\n    /**\n     * This function will be called to trigger search (calling the search backend).\n     * @function\n     * @param {Object} searchParameters object that contains all parameters as properties. It will be converted to JSON.\n     * @param {module:searchMenuServiceClient.HttpClient.SearchServiceResultAvailable} onSearchResultsAvailable will be called when search results are available.\n     */\n    this.search = createSearchFunction(this.config, this.config.httpRequest);\n  };\n\n  /**\n   * Creates the search service function that can be bound to the search menu.\n   * @param {module:searchMenuServiceClient.HttpSearchConfig} config Configuration for the search HTTP requests.\n   * @param {XMLHttpRequest} httpRequest Takes the HTTP-Request-Object.\n   * @returns {module:searchMenuServiceClient.SearchService}\n   * @memberof module:searchMenuServiceClient.HttpClient\n   * @private\n   */\n  function createSearchFunction(config, httpRequest) {\n    return function (searchParameters, onJsonResultReceived) {\n      var onFailure = function (resultText, httpStatus) {\n        console.error(\"search failed with status code \" + httpStatus + \": \" + resultText);\n      };\n      var searchUrl = config.resolveSearchUrl(searchParameters);\n      var searchBody = config.resolveSearchBody(searchParameters);\n      var request = { url: searchUrl, method: config.searchMethod, contentType: config.searchContentType, body: searchBody };\n      if (config.debugMode) {\n        onJsonResultReceived = loggedSuccess(onJsonResultReceived);\n      }\n      httpRequestJson(request, httpRequest, onJsonResultReceived, onFailure);\n    };\n  }\n\n  function loggedSuccess(onSuccess) {\n    return function (jsonResult, status) {\n      console.log(\"successful search response with code \" + status + \": \" + JSON.stringify(jsonResult, null, 2));\n      onSuccess(jsonResult, status);\n    };\n  }\n\n  /**\n   * This function will be called when a already parsed response of the HTTP request is available.\n   * @callback module:searchMenuServiceClient.HttpClient.ParsedHttpResponseAvailable\n   * @param {Object} resultData already parsed data object containing the results of the HTTP request\n   * @param {number} httpStatus HTTP response status\n   */\n  /**\n   * This function will be called when a response of the HTTP request is available as text.\n   * @callback module:searchMenuServiceClient.HttpClient.TextHttpResponseAvailable\n   * @param {Object} resultText response body as text\n   * @param {number} httpStatus HTTP response status\n   */\n  /**\n   * Executes an HTTP \"AJAX\" request.\n   *\n   * @param {Object} request - flattened json from search query result\n   * @param {string} request.url - name of the property in hierarchical order separated by points\n   * @param {string} request.method - value of the property as string\n   * @param {string} request.contentType - value of the property as string\n   * @param {string} request.body - value of the property as string\n   * @param {Object} httpRequest - Browser provided object to use for the HTTP request.\n   * @param {module:searchMenuServiceClient.HttpClient.ParsedHttpResponseAvailable} onSuccess - will be called when the request was successful.\n   * @param {module:searchMenuServiceClient.HttpClient.TextHttpResponseAvailable} onFailure - will be called with the error message as text\n   * @memberof module:searchMenuServiceClient.HttpClient\n   * @private\n   */\n  function httpRequestJson(request, httpRequest, onSuccess, onFailure) {\n    httpRequest.onreadystatechange = function () {\n      if (httpRequest.readyState === 4) {\n        if (httpRequest.status >= 200 && httpRequest.status <= 299) {\n          var jsonResult = JSON.parse(httpRequest.responseText);\n          onSuccess(jsonResult, httpRequest.status);\n        } else {\n          onFailure(httpRequest.responseText, httpRequest.status);\n        }\n      }\n    };\n    httpRequest.open(request.method, request.url, true);\n    httpRequest.setRequestHeader(\"Content-Type\", request.contentType);\n    httpRequest.send(request.body);\n  }\n\n  return instance;\n}());\n","\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @@namespace eventtarget\n */\nvar eventtarget = (module.exports = {}); // Fallback for vanilla js without modules\n\n/**\n * @returns {Element} target of the event\n * @memberof eventtarget\n */\neventtarget.getEventTarget = function (event) {\n  if (typeof event.currentTarget !== \"undefined\" && event.currentTarget != null) {\n    return event.currentTarget;\n  }\n  if (typeof event.srcElement !== \"undefined\" && event.srcElement != null) {\n    return event.srcElement;\n  } else {\n    throw new Error(\"Event doesn't contain bounded element: \" + event);\n  }\n};","\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @namespace selectionrange\n */\nvar selectionrange = (module.exports = {}); // Fallback for vanilla js without modules\n\nselectionrange.moveCursorToEndOf = function (element) {\n  if (typeof element.setSelectionRange === \"function\") {\n    element.setSelectionRange(element.value.length, element.value.length);\n  } else if (typeof element.selectionStart === \"number\" && typeof element.selectionEnd === \"number\") {\n    element.selectionStart = element.selectionEnd = element.value.length;\n  } else if (typeof element.createTextRange === \"function\") {\n    var range = element.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", element.value.length);\n    range.moveStart(\"character\", element.value.length);\n    range.select();\n  }\n};","\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @@namespace eventlistener\n */\nvar eventlistener = (module.exports = {}); // Fallback for vanilla js without modules\n\n/**\n * Adds an event listener/hander using \"addEventListener\" or whatever method the browser supports.\n * @param {String} eventName\n * @param {Element} element\n * @param {*} eventHandler\n * @memberof addeventlistener\n */\n eventlistener.addEventListener = function (eventName, element, eventHandler) {\n  if (element.addEventListener) {\n    element.addEventListener(eventName, eventHandler, false);\n  } else if (element.attachEvent) {\n    element.attachEvent(\"on\" + eventName, eventHandler);\n  } else {\n    element[\"on\" + eventName] = eventHandler;\n  }\n};\n","/**\n * @file Search UI written in vanilla JavaScript. Menu structure for results. Filters are integrated as search results.\n * @version {@link https://github.com/JohT/search-menu-ui/releases/latest latest version}\n * @author JohT\n */\n\nvar module = datarestructorInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction datarestructorInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n\n/**\n * Contains the main ui component of the search menu ui.\n * @module searchmenu\n */\n var searchmenu = module.exports={}; // Export module for npm...\n searchmenu.internalCreateIfNotExists = datarestructorInternalCreateIfNotExists;\n\nvar eventtarget = eventtarget || require(\"./ponyfills/eventCurrentTargetPonyfill\"); // supports vanilla js & npm\nvar selectionrange = selectionrange || require(\"./ponyfills/selectionRangePonyfill\"); // supports vanilla js & npm\nvar eventlistener = eventlistener || require(\"./ponyfills/addEventListenerPonyfill\"); // supports vanilla js & npm\n\n/**\n * @typedef {Object} module:searchmenu.SearchViewDescription Describes a part of the search view (e.g. search result details).\n * @property {string} viewElementId id of the element (e.g. \"div\"), that contains the view with all list elements and their parent.\n * @property {string} listParentElementId id of the element (e.g. \"ul\"), that contains all list entries and is located inside the view.\n * @property {string} listEntryElementIdPrefix id prefix (followed by \"--\" and the index number) for every list entry\n * @property {string} [listEntryElementTag=\"li\"] element tag for list entries. defaults to \"li\".\n * @property {string} [listEntryTextTemplate=\"{{displayName}}: {{value}}\"] template for the text of each list entry\n * @property {string} [listEntrySummaryTemplate=\"{{summaries[0].displayName}}: {{summaries[0].value}}\"] template for the text of each list entry, if the data group \"summary\" exists.\n * @property {string} [listEntryStyleClassTemplate=\"{{view.listEntryElementIdPrefix}} {{category}}\"] template for the style class of each list entry.\n * @property {boolean} [isSelectableFilterOption=false] Specifies, if the list entry can be selected as filter option\n */\n\nsearchmenu.SearchViewDescriptionBuilder = (function () {\n  \"use strict\";\n\n  /**\n   * Builds a {@link module:searchmenu.SearchViewDescription}, which describes a part of the search menu called \"view\".  \n   * Examples for views are: results, details, filters, filter options. There might be more in future.\n   * \n   * The description contains the id's of the html elements, that will be used as \"binding\", to\n   * add elements like results. The \"viewElementId\" is the main parent (may be a \"div\" tag) of all view elements,\n   * that contains the \"listParentElementId\", which is the parent of the list entries (may be a \"ul\" tag).\n   * \n   * The text content of each entry is described by the text templates. \n   * \n   * Furthermore, the css style class can be given as a template, \n   * so search result field values can be used as a part of the style class.\n   * \n   * @param {module:searchmenu.SearchViewDescription} template optional parameter that contains a template to clone\n   * @constructs SearchViewDescriptionBuilder\n   * @alias module:searchmenu.SearchViewDescriptionBuilder\n   */\n  function SearchViewDescription(template) {\n    var defaultTemplate = \"{{displayName}}: {{value}}\";\n    var defaultSummaryTemplate = \"{{summaries[0].displayName}}: {{summaries[0].value}}\";\n    var defaultStyleClassTemplate = \"{{view.listEntryElementIdPrefix}} {{category}}\";\n    var defaultTag = \"li\";\n    /**\n     * @type {module:searchmenu.SearchViewDescription}\n     * @protected\n     */\n    this.description = {\n      viewElementId: template ? template.viewElementId : \"\",\n      listParentElementId: template ? template.listParentElementId : \"\",\n      listEntryElementIdPrefix: template ? template.listEntryElementIdPrefix : \"\",\n      listEntryElementTag: template ? template.listEntryElementTag : defaultTag,\n      listEntryTextTemplate: template ? template.listEntryTextTemplate : defaultTemplate,\n      listEntrySummaryTemplate: template ? template.listEntrySummaryTemplate : defaultSummaryTemplate,\n      listEntryStyleClassTemplate: template ? template.listEntryStyleClassTemplate : defaultStyleClassTemplate,\n      isSelectableFilterOption: template ? template.isSelectableFilterOption : false\n    };\n    /**\n     * ID of the element (e.g. \"div\"), that contains the view with all list elements and their parent.\n     *\n     * @param {string} value view element ID.\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.viewElementId = function (value) {\n      this.description.viewElementId = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * ID of the element (e.g. \"ul\"), that contains all list entries and is located inside the view.\n     * @param {string} value parent element ID\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listParentElementId = function (value) {\n      this.description.listParentElementId = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * ID prefix (followed by \"--\" and the index number) for every list entry.\n     * @param {string} value ID prefix for every list entry element\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntryElementIdPrefix = function (value) {\n      //TODO could be checked to not contain the index separation chars \"--\"\n      this.description.listEntryElementIdPrefix = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Element tag for list entries.\n     * @param {string} [value=\"li\"] tag for every list entry element\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntryElementTag = function (value) {\n      this.description.listEntryElementTag = withDefault(value, defaultTag);\n      return this;\n    };\n    /**\n     * Template for the text of each list entry.\n     * May contain variables in double curly brackets.\n     *\n     * @param {string} [value=\"{{displayName}}: {{value}}\"] list entry text template when there is no summary data group\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntryTextTemplate = function (value) {\n      this.description.listEntryTextTemplate = withDefault(value, defaultTemplate);\n      return this;\n    };\n    /**\n     * Template for the text of each list entry, if the data group \"summary\" exists.\n     * May contain variables in double curly brackets.\n     *\n     * @param {string} [value=\"{{summaries[0].displayName}}: {{summaries[0].value}}\"] list entry text template when there is a summary data group\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntrySummaryTemplate = function (value) {\n      this.description.listEntrySummaryTemplate = withDefault(value, defaultSummaryTemplate);\n      return this;\n    };\n    /**\n     * Template for the style classes of each list entry.\n     * May contain variables in double curly brackets.\n     * To use the property values of this view, prefix them with \"view\", e.g.: \"{{view.listEntryElementIdPrefix}}\".\n     *\n     * @param {string} [value=\"{{view.listEntryElementIdPrefix}} {{category}}\"] list entry style classes template\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n     this.listEntryStyleClassTemplate = function (value) {\n      this.description.listEntryStyleClassTemplate = withDefault(value, defaultStyleClassTemplate);\n      return this;\n    };\n    /**\n     * Specifies, if the list entry can be selected as filter option.\n     * @param {boolean} [value=false] if a list entry is selectable as filter option\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.isSelectableFilterOption = function (value) {\n      this.description.isSelectableFilterOption = value === true;\n      return this;\n    };\n    /**\n     * Finishes the build of the description and returns its final (meant to be immutable) object.\n     * @returns {module:searchmenu.SearchViewDescription}\n     */\n    this.build = function () {\n      return this.description;\n    };\n  }\n\n  function withDefault(value, defaultValue) {\n    return isSpecifiedString(value) ? value : defaultValue;\n  }\n\n  function isSpecifiedString(value) {\n    return typeof value === \"string\" && value != null && value != \"\";\n  }\n\n  return SearchViewDescription;\n})();\n\n//TODO could provide the currently only described SearchUiData as own data structure in its own module.\n/**\n * @typedef {Object} module:searchmenu.SearchUiData \n * @property {String} [category=\"\"] name of the category. Default = \"\". Could contain a short domain name. (e.g. \"city\")\n * @property {String} fieldName field name that will be used e.g. as a search parameter name for filter options.\n * @property {String} [displayName=\"\"] readable display name for e.g. the list of results.\n * @property {String} [abbreviation=\"\"] one optional character, a symbol character or a short abbreviation of the category\n * @property {String} value value of the field\n * @property {module:searchmenu.SearchUiData[]} details if there are further details that will be displayed e.g. on mouse over\n * @property {module:searchmenu.SearchUiData[]} options contains filter options that can be selected as search parameters \n * @property {module:searchmenu.SearchUiData[]} default array with one element representing the default filter option (selected automatically)\n * @property {module:searchmenu.SearchUiData[]} summaries fields that are used to display the main search entry/result\n * @property {module:searchmenu.SearchUiData[]} urltemplate contains a single field with the value of the url template. Marks the entry as navigation target.\n */\n\n/**\n * @callback module:searchmenu.ResolveTemplateFunction replaces variables with object properties.\n * @param {String} template may contain variables in double curly brackets. T\n * Typically supported variables would be: {{category}} {{fieldName}}, {{displayName}}, {{abbreviation}}, {{value}}\n * @return {String} string with resolved/replaced variables\n */\n\n/**\n * @callback module:searchmenu.FieldsJson returns the fields as JSON\n * @return {String} JSON of all contained fields\n */\n\n/**\n * This function will be called, when search results are available.\n * @callback SearchServiceResultAvailable\n * @param {Object} searchResultData already parsed data object containing the result of the search\n */\n\n/**\n * This function will be called to trigger search (calling the search backend).\n * @callback module:searchmenu.SearchService\n * @param {Object} searchParameters object that contains all parameters as properties. It will be converted to JSON.\n * @param {module:searchmenu.SearchServiceResultAvailable} onSearchResultsAvailable will be called when search results are available.\n */\n\n/**\n * This function converts the data from search backend to the structure needed by the search UI.\n * @callback module:searchmenu.DataConverter\n * @param {Object} searchData\n * @returns {module:searchmenu.SearchUiData} converted and structured data for search UI\n */\n\n/**\n * This function replaces variables in double curly brackets with the property values of the given object.\n * @callback module:searchmenu.TemplateResolver\n * @param {String} templateToResolve may contain variables in double curly brackets e.g. like `\"{{searchtext}}\"`.\n * @param {Object} sourceObject the fields of this object are used to replace the variables in the template\n * @returns {module:searchmenu.SearchUiData} converted and structured data for search UI\n */\n\n/**\n * This function adds predefined search parameters before search is triggered, e.g. constants, environment parameters, ...\n * @callback module:searchmenu.SearchParameterAdder\n * @param {Object} searchParametersObject\n */\n\n/**\n * This function will be called when a new HTML is created.\n * @callback module:searchmenu.ElementCreatedListener\n * @param {Element} newlyCreatedElement\n * @param {boolean} isParent true, if it is the created parent. false, if it is a child within the created parent. \n */\n\n/**\n * This function will be called to navigate to a selected search result url.\n * @callback module:searchmenu.NavigateToFunction\n * @param {String} destinationUrl\n */\n\n/**\n * @typedef {Object} module:searchmenu.SearchMenuConfig\n * @property {module:searchmenu.SearchService} triggerSearch triggers search (backend)\n * @property {module:searchmenu.DataConverter} convertData converts search result data to search ui data. Lets data through unchanged by default.\n * @property {module:searchmenu.searchParameterAdder} addPredefinedParametersTo adds custom search parameters \n * @property {module:searchmenu.ElementCreatedListener} onCreatedElement this function will be called when a new HTML is created.\n * @property {module:searchmenu.NavigateToFunction} navigateTo this function will be called to navigate to a selected search result url.\n * @property {string} searchAreaElementId id of the whole search area (default=\"searcharea\")\n * @property {string} inputElementId id of the search input field (default=\"searchinputtext\")\n * @property {module:searchmenu.SearchViewDescription} resultsView describes the main view containing the search results\n * @property {module:searchmenu.SearchViewDescription} detailView describes the details view\n * @property {module:searchmenu.SearchViewDescription} filterOptionsView describes the filter options view\n * @property {module:searchmenu.SearchViewDescription} filtersView describes the filters view\n * @property {string} [waitBeforeClose=700] timeout in milliseconds when search is closed after blur (loss of focus) (default=700)\n * @property {string} [waitBeforeSearch=500] time in milliseconds to wait until typing is finished and search starts (default=500)\n * @property {string} [waitBeforeMouseOver=700] time in milliseconds to wait until mouse over opens details (default=700)\n */\n\nsearchmenu.SearchMenuAPI = (function () {\n  \"use strict\";\n  /**\n   * Search Menu UI API\n   * @constructs SearchMenuAPI\n   * @alias module:searchmenu.SearchMenuAPI\n   */\n  function SearchMenuApiBuilder() {\n    this.config = {\n      triggerSearch: function (/* searchParameters, onSearchResultsAvailable */) {\n        throw new Error(\"search service needs to be defined.\");\n      },\n      convertData: function (sourceData) {\n        return sourceData;\n      },\n      resolveTemplate: function (/* sourceData */) {\n        throw new Error(\"template resolver needs to be defined.\");\n      },\n      addPredefinedParametersTo: function (/* object */) {\n        //does nothing if not specified otherwise\n      },\n      onCreatedElement: function (/* element, isParent */) {\n        //does nothing if not specified otherwise\n      },\n      navigateTo: function (destinationUrl) {\n        window.location.href = destinationUrl;\n      },\n      createdElementListeners: [],\n      searchAreaElementId: \"searcharea\",\n      inputElementId: \"searchinputtext\",\n      searchTextParameterName: \"searchtext\",\n      resultsView: defaultResultsView(),\n      detailView: defaultDetailView(),\n      filterOptionsView: defaultFilterOptionsView(),\n      filtersView: defaultFiltersView(),\n      waitBeforeClose: 700,\n      waitBeforeSearch: 500,\n      waitBeforeMouseOver: 700\n    };\n    /**\n     * Defines the search service function, that will be called whenever search is triggered.\n     * @param {module:searchmenu.SearchService} service function that will be called to trigger search (backend).\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.searchService = function (service) {\n      this.config.triggerSearch = service;\n      return this;\n    };\n    /**\n     * Defines the converter, that converts search result data to search ui data.\n     * Without setting a data converter, data is taken directly from the backend service,\n     * that needs to provide the results in the search menu data structure.\n     * @param {module:searchmenu.DataConverter} converter function that will be called to create the search menu data structure\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.dataConverter = function (converter) {\n      this.config.convertData = converter;\n      return this;\n    };\n    /**\n     * Defines the template resolver, that replaces variables in double curly brackets with the property values of the given object.\n     * @param {module:searchmenu.TemplateResolver} resolver function that will be called to resolve strings with variables.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n     this.templateResolver = function (resolver) {\n      this.config.resolveTemplate = resolver;\n      return this;\n    };\n    /**\n     * Defines the function, that adds predefined (fixed, constant, environmental) search parameters\n     * to the first parameter object.\n     * @param {module:searchmenu.SearchParameterAdder} adder function that will be called to before search is triggered.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.addPredefinedParametersTo = function (adder) {\n      this.config.addPredefinedParametersTo = adder;\n      return this;\n    };\n    /**\n     * Sets the listener, that will be called, when a new HTML element was created.\n     * @param {module:searchmenu.ElementCreatedListener} listener\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.setElementCreatedHandler = function (listener) {\n      this.config.onCreatedElement = listener;\n      return this;\n    };\n    /**\n     * Adds another listener, that will be called, when a new HTML element was created.\n     * @param {module:searchmenu.ElementCreatedListener} listener\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.addElementCreatedHandler = function (listener) {\n      this.config.createdElementListeners.push(listener);\n      return this;\n    };\n\n    /**\n     * Adds the given style class when an element receives focus.\n     * This is done for every element that is created dynamically (e.g. search results and filters).\n     * It is only meant to be used for browsers like old IE5 ones that doesn't support focus pseudo style class.\n     *\n     * @param {String} [focusStyleClassName=\"focus\"]\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.addFocusStyleClassOnEveryCreatedElement = function (focusStyleClassName) {\n      var className = withDefault(focusStyleClassName, \"focus\");\n      this.addElementCreatedHandler(function (element, isParent) {\n        if (!isParent) {\n          return;\n        }\n        addEvent(\"focus\", element, function (event) {\n          addClass(className, getEventTarget(event));\n        });\n        addEvent(\"blur\", element, function (event) {\n          removeClass(className, getEventTarget(event));\n        });\n      });\n      return this;\n    };\n    /**\n     * Sets the element ID of the parent, that represents the whole search menu component.\n     * @param {String} [id=\"searcharea\"] id of the parent element, that represents the whole search menu component.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.searchAreaElementId = function (id) {\n      this.config.searchAreaElementId = withDefault(id, \"searcharea\");\n      return this;\n    };\n    /**\n     * Sets the input search text element ID,.\n     * @param {String} [id=\"searchinputtext\"] id of the input element, that contains the search text.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.inputElementId = function (id) {\n      this.config.inputElementId = withDefault(id, \"searchinputtext\");\n      return this;\n    };\n    /**\n     * Sets the name of the backend search service parameter, that contains the input search text.\n     * @param {String} [value=\"searchtext\"] name of the parameter, that contains the input search text and that can be used as a variable inside the url or body template for the backend service\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.searchTextParameterName = function (value) {\n      this.config.searchTextParameterName = withDefault(value, \"searchtext\");\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display all search results.  \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultResultsView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays all search results\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultResultsView}\n     */\n    this.resultsView = function (view) {\n      this.config.resultsView = view;\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display details of a selected search result.  \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultDetailView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays details of a selected search result\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultDetailView}\n     */\n    this.detailView = function (view) {\n      this.config.detailView = view;\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display currently selected filter options.   \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultFilterOptionsView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays currently selected filter options\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultFilterOptionsView}\n     */\n    this.filterOptionsView = function (view) {\n      this.config.filterOptionsView = view;\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display search results, that represent filter options.   \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultFiltersView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays search results, that represent filter options\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultFiltersView}\n     */\n    this.filtersView = function (view) {\n      this.config.filtersView = view;\n      return this;\n    };\n    /**\n     * Sets the time the search menu will remain open, when it has lost focus.\n     * Prevents the menu to disappear while using it.\n     * @param {number} [ms=700] time in milliseconds the search menu will remain open until it is closed after loosing focus.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.waitBeforeClose = function (ms) {\n      this.config.waitBeforeClose = ms;\n      return this;\n    };\n    /**\n     * Sets the time to wait before the search service is called.\n     * Prevents calls to the search backend while changing the search input.\n     * @param {number} [ms=500] time in milliseconds to wait before the search service is called\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.waitBeforeSearch = function (ms) {\n      this.config.waitBeforeSearch = ms;\n      return this;\n    };\n    /**\n     * Sets the time to  wait before search result details are opened on mouse over.\n     * Doesn't affect keyboard selection, which will immediately open the search details.\n     * Prevents details to open on search results, that are only touched by the mouse pointer for a short period of time.\n     * @param {number} [ms=700] time in milliseconds to wait before search result details are opened on mouse over.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.waitBeforeMouseOver = function (ms) {\n      this.config.waitBeforeMouseOver = ms;\n      return this;\n    };\n    /**\n     * Finishes the configuration and creates the {@link module:searchmenu.SearchMenuUI}.\n     * @returns module:searchmenu.SearchMenuUI\n     */\n    this.start = function () {\n      var config = this.config;\n      if (config.createdElementListeners.length > 0) {\n        this.setElementCreatedHandler(function (element, isParent) {\n          var index = 0;\n          for (index = 0; index < config.createdElementListeners.length; index += 1) {\n            config.createdElementListeners[index](element, isParent);\n          }\n        });\n      }\n      return new searchmenu.SearchMenuUI(config);\n    };\n  }\n\n  /**\n   * Contains the default settings for the results view.\n   * - viewElementId = \"`searchresults`\"\n   * - listParentElementId = \"`searchmatches`\"\n   * - listEntryElementIdPrefix = \"`result`\"\n   * - listEntryTextTemplate = \"`{{abbreviation}} {{displayName}}`\"\n   * - listEntrySummaryTemplate = \"`{{summaries[0].abbreviation}} <b>{{summaries[1].value}}</b><br>{{summaries[2].value}}: {{summaries[0].value}}`\"\n   *\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the results view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultResultsView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchresults\")\n      .listParentElementId(\"searchmatches\")\n      .listEntryElementIdPrefix(\"result\")\n      .listEntryTextTemplate(\"{{abbreviation}} {{displayName}}\") \n      .listEntrySummaryTemplate(\n        \"{{summaries[0].abbreviation}} <b>{{summaries[1].value}}</b><br>{{summaries[2].value}}: {{summaries[0].value}}\"\n      )\n      .build();\n  }\n\n  /**\n   * Contains the default settings for the details view.\n   * - viewElementId = \"`searchdetails`\"\n   * - listParentElementId = \"`searchdetailentries`\"\n   * - listEntryElementIdPrefix = \"`detail`\"\n   * - listEntryTextTemplate = \"`<b>{{displayName}}:</b> {{value}}`\"\n   *\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the details view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultDetailView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchdetails\")\n      .listParentElementId(\"searchdetailentries\")\n      .listEntryElementIdPrefix(\"detail\")\n      .listEntryTextTemplate(\"<b>{{displayName}}:</b> {{value}}\")\n      .build();\n  }\n\n  /**\n   * Contains the default settings for the filter options view.\n   * - viewElementId = \"`searchfilteroptions`\"\n   * - listParentElementId = \"`searchfilteroptionentries`\"\n   * - listEntryElementIdPrefix = \"`filter`\"\n   * - listEntryTextTemplate = \"`{{value}}`\"\n   * - listEntrySummaryTemplate = \"`{{summaries[0].value}}`\"\n   * - isSelectableFilterOption = `true`\n   *\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the filter options view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultFilterOptionsView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchfilteroptions\")\n      .listParentElementId(\"searchfilteroptionentries\")\n      .listEntryElementIdPrefix(\"filter\")\n      .listEntryTextTemplate(\"{{value}}\")\n      .listEntrySummaryTemplate(\"{{summaries[0].value}}\")\n      .isSelectableFilterOption(true)\n      .build();\n  }\n\n  /**\n   * Contains the default settings for the filters view.\n   * - viewElementId = \"`searchresults`\"\n   * - listParentElementId = \"`searchfilters`\"\n   * - listEntryElementIdPrefix = \"`filter`\"\n   * - isSelectableFilterOption = `true`\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the filters view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultFiltersView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchresults\")\n      .listParentElementId(\"searchfilters\")\n      .listEntryElementIdPrefix(\"filter\")\n      .isSelectableFilterOption(true)\n      .build();\n  }\n\n  function addEvent(eventName, element, eventHandler) {\n    eventlistener.addEventListener(eventName, element, eventHandler);\n  }\n\n  function getEventTarget(event) {\n    return eventtarget.getEventTarget(event);\n  }\n\n  function addClass(classToAdd, element) {\n    removeClass(classToAdd, element);\n    var separator = element.className.length > 0 ? \" \" : \"\";\n    element.className += separator + classToAdd;\n  }\n\n  function removeClass(classToRemove, element) {\n    var regex = new RegExp(\"\\\\s?\\\\b\" + classToRemove + \"\\\\b\", \"gi\");\n    element.className = element.className.replace(regex, \"\");\n  }\n\n  function withDefault(value, defaultValue) {\n    return isSpecifiedString(value) ? value : defaultValue;\n  }\n\n  function isSpecifiedString(value) {\n    return typeof value === \"string\" && value != null && value != \"\";\n  }\n\n  return SearchMenuApiBuilder;\n}());\n\nsearchmenu.SearchMenuUI = (function () {\n  \"use strict\";\n\n  /**\n   * Search Menu UI.\n   *\n   * Contains the \"behavior\" of the search bar. It submits the search query,\n   * parses the results, displays matches and filters and responds to\n   * clicks and key presses.\n   * Further resources:\n   * - [API]{@link module:searchmenu.SearchMenuAPI}\n   * - [Configuration]{@link module:searchmenu.SearchMenuConfig}\n   * \n   * @constructs SearchMenuUI\n   * @alias module:searchmenu.SearchMenuUI\n   * @see {@link module:searchmenu.SearchMenuAPI}\n   * @see {@link module:searchmenu.SearchMenuConfig}\n   */\n  var instance = function (config) {\n    /**\n     * Configuration.\n     * @type {module:searchmenu.SearchMenuConfig}\n     * @protected \n     */\n    this.config = config;\n    /**\n     * Search text that correspondents to the currently shown results.\n     * @type {String}\n     * @protected \n     */\n    this.currentSearchText = \"\";\n    /**\n     * Timer that is used to wait before the menu is closed.\n     * @type {Timer}\n     * @protected \n     */\n    this.focusOutTimer = null;\n    /**\n     * Timer that is used to wait before the search service is called.\n     * @type {Timer}\n     * @protected \n     */\n    this.waitBeforeSearchTimer = null;\n\n    var search = document.getElementById(config.inputElementId);\n    onEscapeKey(search, function (event) {\n      getEventTarget(event).value = \"\";\n      hideMenu(config);\n    });\n    onArrowDownKey(search, handleEventWithConfig(config, focusFirstResult));\n    addEvent(\"keyup\", search, function (event) {\n      if (this.waitBeforeSearchTimer !== null) {\n        clearTimeout(this.waitBeforeSearchTimer);\n      }\n      var newSearchText = getEventTarget(event).value;\n      this.waitBeforeSearchTimer = window.setTimeout(function () {\n        if (newSearchText !== this.currentSearchText || this.currentSearchText === \"\") {\n          updateSearch(newSearchText, config);\n          this.currentSearchText = newSearchText;\n        }\n      }, config.waitBeforeSearch);\n    });\n\n    var searchareaElement = document.getElementById(config.searchAreaElementId);\n    addEvent(\"focusin\", searchareaElement, function () {\n      var searchInputElement = document.getElementById(config.inputElementId);\n      if (searchInputElement.value !== \"\") {\n        if (this.focusOutTimer != null) {\n          clearTimeout(this.focusOutTimer);\n        }\n        //TODO should only show results if there are some\n        //TODO could add a \"spinner\" when search is running\n        show(config.resultsView.viewElementId);\n      }\n    });\n    addEvent(\"focusout\", searchareaElement, function () {\n      this.focusOutTimer = window.setTimeout(function () {\n        hideMenu(config);\n      }, config.waitBeforeClose);\n    });\n  };\n\n  function updateSearch(searchText, config) {\n    var matchList = document.getElementById(config.resultsView.listParentElementId);\n    matchList.innerHTML = \"\";\n    if (searchText.length === 0) {\n      hideMenu(config);\n      return;\n    }\n    show(config.resultsView.viewElementId);\n    getSearchResults(searchText, config);\n  }\n\n  function getSearchResults(searchText, config) {\n    //TODO should \"retrigger\" search when new filter options are selected (after each?)\n    var searchParameters = getSelectedOptions(config.filtersView.listParentElementId);\n    searchParameters[config.searchTextParameterName] = searchText;\n    config.addPredefinedParametersTo(searchParameters);\n    //TODO could provide optional build in search text highlighting\n    config.triggerSearch(searchParameters, function (jsonResult) {\n      displayResults(config.convertData(jsonResult), config);\n    });\n    //TODO should provide some info if search fails (service temporary unavailable, ...)\n  }\n\n  function displayResults(jsonResults, config) {\n    var index = 0;\n    for (index = 0; index < jsonResults.length; index += 1) {\n      addResult(jsonResults[index], index + 1, config);\n    }\n  }\n\n  function addResult(entry, i, config) {\n    var listElementId = config.resultsView.listEntryElementIdPrefix + \"--\" + i;\n    var resultElementText = createListEntryInnerHtmlText(entry, config.resultsView, listElementId, config.resolveTemplate);\n    var resultElement = createListEntryElement(entry, config.resultsView, listElementId, resultElementText);\n    addClass(resolveStyleClasses(entry, config.resultsView, config.resolveTemplate), resultElement);\n    forEachIdElementIncludingChildren(resultElement, config.onCreatedElement);\n\n    if (isMenuEntryWithFurtherDetails(entry)) {\n      onMenuEntrySelected(resultElement, handleEventWithEntriesAndConfig(entry.details, config, selectSearchResultToDisplayDetails));\n      onMouseOverDelayed(\n        resultElement,\n        config.waitBeforeMouseOver,\n        handleEventWithEntriesAndConfig(entry.details, config, selectSearchResultToDisplayDetails)\n      );\n      onMenuEntryChosen(resultElement, function () {\n        var selectedUrlTemplate = getSelectedUrlTemplate(config.filtersView.listParentElementId, getPropertyValueWithUndefinedDefault(entry, \"category\", \"\"));\n        if (selectedUrlTemplate) {\n          //TODO should add domain, baseurl, ... as data sources for variables to use inside the template\n          var targetURL = config.resolveTemplate(selectedUrlTemplate, entry);\n          config.navigateTo(targetURL);\n        }\n      });\n    }\n    if (isMenuEntryWithOptions(entry)) {\n      var options = entry.options;\n      //TODO should support details for filter options.\n      //TODO could skip sub menu, if there is only one option (with/without being default).\n      //TODO could be used for constants (pre selected single filter options) like \"tenant-number\", \"current-account\"\n      //TODO could remove the original search result filter when the default option is pre selected (and its options are copied).\n      if (isMenuEntryWithDefault(entry)) {\n        options = insertAtBeginningIfMissing(entry.options, entry[\"default\"][0], equalProperties([\"value\"]));\n        var filterOptionsElement = createFilterOption(entry[\"default\"][0], options, config.filtersView, config);\n        addDefaultFilterOptionModificationHandler(filterOptionsElement, options, config);\n      }\n      onMenuEntrySelected(resultElement, handleEventWithEntriesAndConfig(entry.options, config, selectSearchResultToDisplayFilterOptions));\n      onMenuEntryChosen(resultElement, handleEventWithEntriesAndConfig(entry.options, config, selectSearchResultToDisplayFilterOptions));\n    }\n    addMainMenuNavigationHandlers(resultElement, config);\n  }\n\n  function equalProperties(propertyNames) {\n    return function (existingObject, newObject) {\n      var index;\n      for (index = 0; index < propertyNames.length; index += 1) {\n        if (existingObject[propertyNames[index]] != newObject[propertyNames[index]]) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * Adds the given entry at be beginning of the given array of entries if it's missing.\n   * The equalFunction determines, if the new value is missing (returns false) or not (returns true).\n   * If the entry to add is null, the entries are returned directly.\n   *\n   * @param {Object[]} entries\n   * @param {Object} entryToAdd\n   * @param {boolean} equalMatcher takes the existing and the new entry as parameters and returns true if they are considered \"equal\".\n   * @returns {Object[]}\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function insertAtBeginningIfMissing(entries, entryToAdd, equalMatcher) {\n    if (!entryToAdd) {\n      return entries;\n    }\n    var index;\n    var alreadyContainsEntryToAdd = false;\n    for (index = 0; index < entries.length; index += 1) {\n      if (equalMatcher(entries[index], entryToAdd)) {\n        alreadyContainsEntryToAdd = true;\n        break;\n      }\n    }\n    if (alreadyContainsEntryToAdd) {\n      return entries;\n    }\n    var result = [];\n    result.push(entryToAdd);\n    for (index = 0; index < entries.length; index += 1) {\n      result.push(entries[index]);\n    }\n    return result;\n  }\n\n  function isMenuEntryWithFurtherDetails(entry) {\n    return typeof entry.details !== \"undefined\";\n  }\n\n  function isMenuEntryWithOptions(entry) {\n    return typeof entry.options !== \"undefined\";\n  }\n\n  function isMenuEntryWithDefault(entry) {\n    return typeof entry[\"default\"] !== \"undefined\";\n  }\n\n  /**\n   * Reacts to input events (keys, ...) to navigate through main menu entries.\n   *\n   * @param {Element} element to add event handlers\n   * @param {SearchMenuConfig} config search configuration\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function addMainMenuNavigationHandlers(element, config) {\n    onArrowDownKey(element, handleEventWithConfig(config, focusNextSearchResult));\n    onArrowUpKey(element, handleEventWithConfig(config, focusPreviousSearchResult));\n    onEscapeKey(element, handleEventWithConfig(config, focusSearchInput));\n    onArrowLeftKey(element, handleEventWithConfig(config, closeAssociatedSubMenus));\n  }\n\n  /**\n   * Reacts to input events (keys, ...) to navigate through sub menu entries.\n   *\n   * @param {Element} element to add event handlers\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function addSubMenuNavigationHandlers(element) {\n    onArrowDownKey(element, focusNextMenuEntry);\n    onArrowUpKey(element, focusPreviousMenuEntry);\n    onArrowLeftKey(element, returnToMainMenu);\n    onEscapeKey(element, returnToMainMenu);\n  }\n\n  function onMenuEntrySelected(element, eventHandler) {\n    onSpaceKey(element, eventHandler);\n    onArrowRightKey(element, eventHandler);\n  }\n\n  function onMenuEntryChosen(element, eventHandler) {\n    addEvent(\"mousedown\", element, eventHandler);\n    onEnterKey(element, eventHandler);\n  }\n\n  function onSubMenuEntrySelected(element, eventHandler) {\n    addEvent(\"mousedown\", element, eventHandler);\n    onEnterKey(element, eventHandler);\n    onSpaceKey(element, eventHandler);\n  }\n\n  function onFilterMenuEntrySelected(element, eventHandler) {\n    addEvent(\"mousedown\", element, eventHandler);\n    onEnterKey(element, eventHandler);\n    onArrowRightKey(element, eventHandler);\n  }\n\n  function onFilterMenuEntryRemoved(element, eventHandler) {\n    onDeleteKey(element, eventHandler);\n    onBackspaceKey(element, eventHandler);\n    //TODO should also be possible with mouse (without using keys)\n  }\n\n  /**\n   * @param {SearchMenuConfig} config search configuration\n   * @param {EventListener} eventHandler event handler\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function handleEventWithConfig(config, eventHandler) {\n    return function (event) {\n      eventHandler(event, config);\n    };\n  }\n\n  /**\n   * @param {Object[]} entries raw data of the entry\n   * @param {module:searchmenu.SearchMenuConfig} config search configuration\n   * @param {EventListener} eventHandler event handler\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function handleEventWithEntriesAndConfig(entries, config, eventHandler) {\n    return function (event) {\n      eventHandler(event, entries, config);\n    };\n  }\n\n  /**\n   * This callback will be called, if there is not next or previous menu entry to navigate to.\n   * The implementation can decide, what to do using the given id properties.\n   *\n   * @callback module:searchmenu.MenuEntryNotFoundHandler\n   * @param {module:searchmenu.ListElementIdProperties} properties of the element id\n   */\n  /**\n   * This function returns the ID for the first sub menu entry using the given type name (= name of the sub menu).\n   *\n   * @callback module:searchmenu.SubMenuId\n   * @param {string} type name of the sub menu entries\n   */\n  /**\n   * @typedef {Object} module:searchmenu.ListElementIdProperties\n   * @property {id} id Original ID\n   * @property {string} type Type of the list element\n   * @property {number} index Index of the list element\n   * @property {string} previousId ID of the previous list element\n   * @property {string} nextId ID of the next list element\n   * @property {string} firstId ID of the first list element\n   * @property {string} lastId ID of the last list element\n   * @property {module:searchmenu.SubMenuId} subMenuId  Returns the ID of the first sub menu entry (with the given type name as parameter)\n   * @property {string} mainMenuId ID of the main menu entry e.g. to leave the sub menu. Equals to the id, if it already is a main menu entry\n   * @property {boolean} hiddenFieldsId ID of the embedded hidden field, that contains all public information of the described entry as JSON.\n   * @property {boolean} hiddenFields Parses the JSON inside the \"hiddenFieldsId\"-Element and returns the object with the described entry.\n   * @property {boolean} isFirstElement true, if it is the first element in the list\n   * @property {boolean} isSubMenu true, if it is the ID of an sub menu entry\n   */\n  /**\n   * Extracts properties like type and index\n   * from the given list element id string.\n   *\n   * @param {string} id\n   * @return {module:searchmenu.ListElementIdProperties} list element id properties\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function extractListElementIdProperties(id) {\n    var separator = \"--\";\n    var splittedId = id.split(separator);\n    if (splittedId.length < 2) {\n      console.log(\"expected at least one '\" + separator + \"' separator inside the id \" + id);\n    }\n    var extractedMainMenuType = splittedId[0];\n    var extractedMainMenuIndex = parseInt(splittedId[1]);\n    var extractedType = splittedId[splittedId.length - 2];\n    var extractedIndex = parseInt(splittedId[splittedId.length - 1]);\n    var idWithoutIndex = id.substring(0, id.lastIndexOf(extractedIndex) - separator.length);\n    return {\n      id: id,\n      type: extractedType,\n      index: extractedIndex,\n      previousId: idWithoutIndex + separator + (extractedIndex - 1),\n      nextId: idWithoutIndex + separator + (extractedIndex + 1),\n      firstId: idWithoutIndex + separator + \"1\",\n      lastId: idWithoutIndex + separator + document.getElementById(id).parentElement.childNodes.length,\n      mainMenuId: extractedMainMenuType + separator + extractedMainMenuIndex,\n      mainMenuIndex: extractedMainMenuIndex,\n      hiddenFieldsId: id + separator + \"fields\",\n      isFirstElement: extractedIndex <= 1,\n      isSubMenu: splittedId.length > 3,\n      subMenuId: function (typeName) {\n        return id + separator + typeName + separator + \"1\";\n      },\n      replaceMainMenuIndex: function (newIndex) {\n        var newMainMenuIndex = extractedMainMenuType + separator + newIndex;\n        return newMainMenuIndex + id.substring(this.mainMenuId.length);\n      },\n      getNewIndexAfterRemovedMainMenuIndex: function (removedIndex) {\n        if (extractedMainMenuIndex < removedIndex) {\n          return id;\n        }\n        if (extractedMainMenuIndex == removedIndex) {\n          throw new Error(\"index \" + removedIndex + \" should had been removed.\");\n        }\n        return this.replaceMainMenuIndex(extractedMainMenuIndex - 1);\n      },\n      hiddenFields: function () {\n        var hiddenFieldsElement = document.getElementById(id + separator + \"fields\");\n        var hiddenFieldsJson = getPropertyValueWithUndefinedDefault(hiddenFieldsElement, \"textContent\", hiddenFieldsElement.innerText);\n        return JSON.parse(hiddenFieldsJson);\n      }\n    };\n  }\n\n  function focusSearchInput(event, config) {\n    var resultEntry = getEventTarget(event);\n    var inputElement = document.getElementById(config.inputElementId);\n    resultEntry.blur();\n    inputElement.focus();\n    selectionrange.moveCursorToEndOf(inputElement);\n    preventDefaultEventHandling(event); //skips cursor position change on key up once\n    hideSubMenus(config);\n    return inputElement;\n  }\n\n  function focusFirstResult(event, config) {\n    var selectedElement = getEventTarget(event);\n    var firstResult = document.getElementById(config.resultsView.listEntryElementIdPrefix + \"--1\");\n    if (firstResult) {\n      selectedElement.blur();\n      firstResult.focus();\n    }\n  }\n\n  function focusNextSearchResult(event, config) {\n    focusNextMenuEntry(event, function (menuEntryIdProperties) {\n      var next = null;\n      if (menuEntryIdProperties.type === config.resultsView.listEntryElementIdPrefix) {\n        //select first filter entry after last result/match entry\n        //TODO could find a better way (without config?) to navigate from last search result to first options/filter entry\n        next = document.getElementById(config.filterOptionsView.listEntryElementIdPrefix + \"--1\");\n      }\n      if (next === null) {\n        //select first result/match entry after last filter entry (or whenever nothing is found)\n        next = document.getElementById(config.resultsView.listEntryElementIdPrefix + \"--1\");\n      }\n      return next;\n    });\n    hideSubMenus(config);\n  }\n\n  function focusPreviousSearchResult(event, config) {\n    focusPreviousMenuEntry(event, function (menuEntryIdProperties) {\n      var previous = null;\n      if (menuEntryIdProperties.type === config.filterOptionsView.listEntryElementIdPrefix) {\n        //select last result entry when arrow up is pressed on first filter entry\n        //TODO could find a better way (without config?) to navigate from first options/filter entry to last search result?\n        var resultElementsCount = getListElementCountOfType(config.resultsView.listEntryElementIdPrefix);\n        previous = document.getElementById(config.resultsView.listEntryElementIdPrefix + \"--\" + resultElementsCount);\n      }\n      if (previous === null) {\n        //select input, if there is no previous entry.\n        return focusSearchInput(event, config);\n      }\n      return previous;\n    });\n    hideSubMenus(config);\n  }\n\n  /**\n   * Selects and focusses the next menu entry.\n   *\n   * @param {Event} event\n   * @param {module:searchmenu.MenuEntryNotFoundHandler} onMissingNext is called, if no \"next\" entry could be found.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function focusNextMenuEntry(event, onMissingNext) {\n    var menuEntry = getEventTarget(event);\n    var menuEntryIdProperties = extractListElementIdProperties(menuEntry.id);\n    if (menuEntryIdProperties.isSubMenu) {\n      preventDefaultEventHandling(event); //skips e.g. scrolling whole screen down when focus is inside sub menu\n    }\n    var next = document.getElementById(menuEntryIdProperties.nextId);\n    if (next == null && typeof onMissingNext === \"function\") {\n      next = onMissingNext(menuEntryIdProperties);\n    }\n    if (next == null) {\n      next = document.getElementById(menuEntryIdProperties.firstId);\n    }\n    if (next != null) {\n      menuEntry.blur();\n      next.focus();\n    }\n  }\n\n  /**\n   * Selects and focusses the previous menu entry.\n   *\n   * @param {Event} event\n   * @param {module:searchmenu.MenuEntryNotFoundHandler} onMissingPrevious is called, if no \"previous\" entry could be found.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function focusPreviousMenuEntry(event, onMissingPrevious) {\n    var menuEntry = getEventTarget(event);\n    var menuEntryIdProperties = extractListElementIdProperties(menuEntry.id);\n    if (menuEntryIdProperties.isSubMenu) {\n      preventDefaultEventHandling(event); //skips e.g. scrolling whole screen up when focus is inside sub menu\n    }\n    var previous = document.getElementById(menuEntryIdProperties.previousId);\n    if (previous == null && typeof onMissingPrevious === \"function\") {\n      previous = onMissingPrevious(menuEntryIdProperties);\n    }\n    if (previous == null) {\n      previous = document.getElementById(menuEntryIdProperties.lastId);\n    }\n    if (previous != null) {\n      menuEntry.blur();\n      previous.focus();\n    }\n  }\n\n  /**\n   * Gets called when a filter option is selected and copies it into the filter view, where all selected filters are collected.\n   * @param {Event} event \n   * @param {DescribedEntry} entries \n   * @param {module:searchmenu.SearchMenuConfig} config \n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function selectFilterOption(event, entries, config) {\n    var selectedEntry = getEventTarget(event);\n    var selectedEntryData = findSelectedEntry(selectedEntry.id, entries, equalProperties([\"fieldName\", \"value\"]));\n    var filterOptionsElement = createFilterOption(selectedEntryData, entries, config.filtersView, config);\n    //TODO could detect default entry if necessary and call \"addDefaultFilterOptionModificationHandler\" instead\n    addFilterOptionModificationHandler(filterOptionsElement, entries, config);\n    preventDefaultEventHandling(event);\n    returnToMainMenu(event);\n  }\n\n  function createFilterOption(selectedEntryData, entries, view, config) {\n    var filterElements = getListElementCountOfType(view.listEntryElementIdPrefix);\n    var filterElementId = view.listEntryElementIdPrefix + \"--\" + (filterElements + 1);\n    var filterCategory = getPropertyValueWithUndefinedDefault(selectedEntryData, \"category\", \"\");\n    var filterElement = getListEntryByFieldName(filterCategory, selectedEntryData.fieldName, view.listParentElementId);\n    var isAlreadyExistingFilter = filterElement != null;\n    if (isAlreadyExistingFilter) {\n      var updatedText = createListEntryInnerHtmlText(selectedEntryData, view, filterElement.id, config.resolveTemplate);\n      filterElement = updateListEntryElement(filterElement, updatedText);\n      return filterElement;\n    }\n    var filterElementText = createListEntryInnerHtmlText(selectedEntryData, view, filterElementId, config.resolveTemplate);\n    filterElement = createListEntryElement(selectedEntryData, view, filterElementId, filterElementText);\n    addClass(resolveStyleClasses(selectedEntryData, view, config.resolveTemplate), filterElement);\n    forEachIdElementIncludingChildren(filterElement, config.onCreatedElement);\n\n    onFilterMenuEntrySelected(filterElement, handleEventWithEntriesAndConfig(entries, config, selectSearchResultToDisplayFilterOptions));\n    addMainMenuNavigationHandlers(filterElement, config);\n\n    return filterElement;\n  }\n\n  function addFilterOptionModificationHandler(filterElement, entries, config) {\n    onSpaceKey(filterElement, toggleFilterEntry);\n    onFilterMenuEntryRemoved(filterElement, handleEventWithConfig(config, removeFilterElement));\n  }\n\n  function addDefaultFilterOptionModificationHandler(filterElement, entries, config) {\n    onSpaceKey(filterElement, handleEventWithEntriesAndConfig(entries, config, selectSearchResultToDisplayFilterOptions));\n    //TODO could reset elements to their default value upon deletion.\n  }\n\n  /**\n   * Searches all child elements of the given parent element\n   * for an entry with the given fieldName contained in the hidden fields structure.\n   *\n   * @param {String} category of the element to search for\n   * @param {String} fieldName of the element to search for\n   * @param {String} listParentElementId id of the parent element that child nodes will be searched\n   * @returns {HTMLElement} returns the element that matches the given fieldName or null, if it hadn't been found.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getListEntryByFieldName(category, fieldName, listParentElementId) {\n    var globalCategoryResult = null;\n    var result = forEachListEntryElement(listParentElementId, function (element) {\n      var listElementHiddenFields = extractListElementIdProperties(element.id).hiddenFields();\n      if (listElementHiddenFields.fieldName === fieldName) {\n        var elementCategory = getPropertyValueWithUndefinedDefault(listElementHiddenFields, \"category\", \"\");\n        if (elementCategory === \"\") {\n          globalCategoryResult = element;\n        } else if (elementCategory === category) {\n          return element;\n        }\n      }\n    });\n    return (result != null)? result : globalCategoryResult;\n  }\n\n  /**\n   * Returns the property value of the object or - if undefined - the default value.\n   * @param {Object} object \n   * @param {String} propertyName \n   * @param {Object} defaultValue \n   * @returns the property value of the object or - if not set - the default value.\n   */\n  function getPropertyValueWithUndefinedDefault(object, propertyName, defaultValue) {\n    if (typeof object[propertyName] === \"undefined\") {\n      return defaultValue;\n    } \n    return object[propertyName];\n  }\n\n  /**\n   * Gets the currently selected url template for navigation.\n   *\n   * @param {String} listParentElementId id of the parent element that child nodes will be searched\n   * @param {String} category the url template needs to belong to the same category\n   * @returns {String} returns the url template or null, if nothing could be found\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getSelectedUrlTemplate(listParentElementId, category) {\n    return forEachListEntryElement(listParentElementId, function (element) {\n      var listElementHiddenFields = extractListElementIdProperties(element.id).hiddenFields();\n      var urlTemplate = getPropertyValueWithUndefinedDefault(listElementHiddenFields, \"urltemplate\", [\"\"])[0];\n      if (urlTemplate === \"\") {\n        return null; // entry has no url template\n      }\n      var elementCategory = getPropertyValueWithUndefinedDefault(listElementHiddenFields, category, \"\");\n      if ((elementCategory != category) && (elementCategory !== \"\")) {\n        return null; // entry belongs to another category\n      }\n      if (hasClass(\"inactive\", element)) {\n        return null; // entry is inactive\n      }\n      return urlTemplate.value;\n    });\n  }\n\n  function getSelectedOptions(listParentElementId) {\n    var result = {};\n    forEachListEntryElement(listParentElementId, function (element) {\n      var hiddenFields = extractListElementIdProperties(element.id).hiddenFields();\n      if (typeof hiddenFields.fieldName === \"undefined\" || typeof hiddenFields.value === \"undefined\") {\n        return null;\n      }\n      if (hasClass(\"inactive\", element)) {\n        return null; // entry is inactive\n      }\n      result[hiddenFields.fieldName] = hiddenFields.value;\n    });\n    return result;\n  }\n\n  /**\n   * This function is called for every html element of a given parent.\n   *\n   * @callback module:searchmenu.ListElementFunction\n   * @param {Element} listElement name of the sub menu entries\n   * @return {Object} optional result to exit the loop or null otherwise.\n   */\n\n  /**\n   * Iterates through all child nodes of the given parent and calls the given function.\n   * If the function returns a value, it will be returned directly.\n   * If the function returns nothing, the iteration continues.\n   * @param {String} listParentElementId \n   * @param {module:searchmenu.ListElementFunction} listEntryElementFunction \n   * @returns {Object} result of the first entry element function, that had returned one, or null.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function forEachListEntryElement(listParentElementId, listEntryElementFunction) {\n    var listParentElement = document.getElementById(listParentElementId);\n    var i, listElement, result;\n    for (i = 0; i < listParentElement.childNodes.length; i += 1) {\n      listElement = listParentElement.childNodes[i];\n      result = listEntryElementFunction(listElement);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Extracts the entry data that it referred by the element given by its ID out of the list of data entries.\n   * @param {string} element id\n   * @param {DescribedEntry[]} array of described entries\n   * @param {boolean} equalMatcher takes the existing and the new entry as parameters and returns true if they are considered \"equal\".\n   * @returns {DescribedEntry} described entry out of the given entries, that suits the element given by its id.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function findSelectedEntry(id, entries, equalsMatcher) {\n    var selectedEntryIdProperties = extractListElementIdProperties(id);\n    var selectedEntryHiddenFields = selectedEntryIdProperties.hiddenFields();\n    var entryIndex;\n    var currentlySelected;\n    for (entryIndex = 0; entryIndex < entries.length; entryIndex += 1) {\n      currentlySelected = entries[entryIndex];\n      if (equalsMatcher(currentlySelected, selectedEntryHiddenFields)) {\n        return currentlySelected;\n      }\n    }\n    console.log(\"error: no selected entry found for id \" + id + \" in \" + entries);\n    return null;\n  }\n\n  function selectSearchResultToDisplayDetails(event, entries, config) {\n    hideSubMenus(config);\n    selectSearchResultToDisplaySubMenu(event, entries, config.detailView, config);\n    preventDefaultEventHandling(event);\n  }\n\n  function selectSearchResultToDisplayFilterOptions(event, entries, config) {\n    hideSubMenus(config);\n    selectSearchResultToDisplaySubMenu(event, entries, config.filterOptionsView, config);\n  }\n\n  function selectSearchResultToDisplaySubMenu(event, entries, subMenuView, config) {\n    clearAllEntriesOfElementWithId(subMenuView.listParentElementId);\n    var selectedElement = getEventTarget(event);\n\n    var subMenuEntry = null;\n    var subMenuElement = null;\n    var subMenuIndex = 0;\n    var subMenuEntryId = selectedElement.id + \"--\" + subMenuView.listEntryElementIdPrefix;\n    var subMenuFirstEntry = null;\n    var subMenuElementText;\n    for (subMenuIndex = 0; subMenuIndex < entries.length; subMenuIndex += 1) {\n      subMenuEntry = entries[subMenuIndex];\n      subMenuEntryId = selectedElement.id + \"--\" + subMenuView.listEntryElementIdPrefix + \"--\" + (subMenuIndex + 1);\n      subMenuElementText = createListEntryInnerHtmlText(subMenuEntry, subMenuView, subMenuEntryId, config.resolveTemplate);\n      subMenuElement = createListEntryElement(subMenuEntry, subMenuView, subMenuEntryId, subMenuElementText);\n      addClass(resolveStyleClasses(subMenuEntry, subMenuView, config.resolveTemplate), subMenuElement);\n      forEachIdElementIncludingChildren(subMenuElement, config.onCreatedElement);\n\n      if (subMenuView.isSelectableFilterOption) {\n        addSubMenuNavigationHandlers(subMenuElement);\n        onSubMenuEntrySelected(subMenuElement, handleEventWithEntriesAndConfig(entries, config, selectFilterOption));\n      }\n      if (subMenuIndex === 0) {\n        subMenuFirstEntry = subMenuElement;\n      }\n    }\n    var divParentOfSelectedElement = parentThatMatches(selectedElement, function (element) {\n      return element.tagName == \"DIV\";\n    });\n    var subMenuViewElement = document.getElementById(subMenuView.viewElementId);\n    var alignedSubMenuXPosition = divParentOfSelectedElement.offsetWidth + 15;\n    var alignedSubMenuYPosition = getYPositionOfElement(selectedElement) + getScrollY();\n    subMenuViewElement.style.left = alignedSubMenuXPosition + \"px\";\n    subMenuViewElement.style.top = alignedSubMenuYPosition + \"px\";\n\n    showElement(subMenuViewElement);\n\n    if (subMenuView.isSelectableFilterOption) {\n      selectedElement.blur();\n      subMenuFirstEntry.focus();\n    }\n  }\n\n  /**\n   * Exit sub menu from event entry and return to main menu.\n   * @param {InputEvent} event\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function returnToMainMenu(event) {\n    var subMenuEntryToExit = getEventTarget(event);\n    var subMenuEntryToExitProperties = extractListElementIdProperties(subMenuEntryToExit.id);\n    var mainMenuEntryToSelect = document.getElementById(subMenuEntryToExitProperties.mainMenuId);\n    subMenuEntryToExit.blur();\n    mainMenuEntryToSelect.focus();\n    hideViewOf(subMenuEntryToExit);\n  }\n\n  function closeAssociatedSubMenus(event, config) {\n    hideSubMenus(config);\n  }\n\n  /**\n   * Prevents the given event inside an event handler to get handled anywhere else.\n   * Pressing the arrow key up can lead to scrolling up the view. This is not useful,\n   * if the arrow key navigates the focus inside a sub menu, that is fully contained inside the current view.\n   * @param {InputEvent} inputevent\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function preventDefaultEventHandling(inputevent) {\n    if (typeof inputevent.preventDefault !== \"undefined\") {\n      inputevent.preventDefault();\n    } else {\n      inputevent.returnValue = false;\n    }\n  }\n\n  //TODO could be extracted as ponyfill\n  /**\n   * Browser compatible Y position of the given element.\n   * @returns {number} y position in pixel\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n   function getYPositionOfElement(element) {\n    var selectedElementPosition = element.getBoundingClientRect();\n    if (typeof selectedElementPosition.y !== \"undefined\") {\n      return selectedElementPosition.y;\n    }\n    return selectedElementPosition.top;\n  }\n\n  //TODO could be extracted as ponyfill\n  /**\n   * Browser compatible version of the standard \"window.scrollY\".\n   * @returns {number} y scroll position in pixel\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getScrollY() {\n    var supportPageOffset = typeof window.pageYOffset !== \"undefined\";\n    if (supportPageOffset) {\n      return window.pageYOffset;\n    }\n    var isCSS1Compatible = (document.compatMode || \"\") === \"CSS1Compat\";\n    if (isCSS1Compatible) {\n      return document.documentElement.scrollTop;\n    }\n    return document.body.scrollTop;\n  }\n\n  function clearAllEntriesOfElementWithId(elementId) {\n    var node = document.getElementById(elementId);\n\n    // Fastest way to delete child nodes in Chrome and FireFox according to\n    // https://stackoverflow.com/questions/3955229/remove-all-child-elements-of-a-dom-node-in-javascript\n    if (typeof node.cloneNode === \"function\" && typeof node.replaceChild === \"function\") {\n      var cNode = node.cloneNode(false);\n      node.parentNode.replaceChild(cNode, node);\n    } else {\n      node.innerHTML = \"\";\n    }\n  }\n\n  /**\n   * Toggles a filter to inactive and vice versa.\n   * @param {InputEvent} event\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function toggleFilterEntry(event) {\n    preventDefaultEventHandling(event);\n    var filterElement = getEventTarget(event);\n    toggleClass(\"inactive\", filterElement);\n  }\n\n  function removeFilterElement(event, config) {\n    preventDefaultEventHandling(event);\n    focusPreviousSearchResult(event, config);\n    removeChildElement(event);\n  }\n\n  /**\n   * Removes the event target element from its parent.\n   * @param {InputEvent} event\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function removeChildElement(event) {\n    var element = getEventTarget(event);\n    var parentElement = element.parentElement;\n    var indexOfRemovedElement = extractListElementIdProperties(element.id).mainMenuIndex;\n    parentElement.removeChild(element);\n    forEachChildRecursively(parentElement, 0, 5, function (entry) {\n      if (entry.id) {\n        entry.id = extractListElementIdProperties(entry.id).getNewIndexAfterRemovedMainMenuIndex(indexOfRemovedElement);\n      }\n    });\n  }\n\n  function forEachChildRecursively(element, depth, maxDepth, callback) {\n    if (depth > maxDepth || !element.childNodes) {\n      return;\n    }\n    forEachEntryIn(element.childNodes, function (entry) {\n      callback(entry);\n      forEachChildRecursively(entry, depth + 1, maxDepth, callback);\n    });\n  }\n\n  /**\n   * This function will be called for every found element\n   * @callback module:searchmenu.ElementFoundListener\n   * @param {Element} foundElement\n   * @param {boolean} isParent true, if it is the created parent. false, if it is a child within the created parent.\n   */\n\n  /**\n   * The given callback will be called for the given parent and all its direct child nodes, that contain an id property.\n   * @param {Element} element parent to be inspected\n   * @param {module:searchmenu.ElementFoundListener} callback will be called for every found child and the given parent itself\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function forEachIdElementIncludingChildren(element, callback) {\n    if (element.id) {\n      callback(element, true);\n    }\n    forEachEntryIn(element.childNodes, function (element) {\n      if (element.id) {\n        callback(element, false);\n      }\n    });\n  }\n\n  function forEachEntryIn(array, callback) {\n    var index = 0;\n    for (index = 0; index < array.length; index += 1) {\n      callback(array[index], index + 1); //index parameter starts with 1 (1 instead of 0 based)\n    }\n  }\n\n  /**\n   * @param {String} list element type name e.g. \"li\".\n   * @return {number} list element count of the given type\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getListElementCountOfType(listelementtype) {\n    var firstListEntry = document.getElementById(listelementtype + \"--1\");\n    if (firstListEntry === null) {\n      return 0;\n    }\n    return firstListEntry.parentElement.childNodes.length;\n  }\n\n  /**\n   * Updates an already existing list entry element to be used for search results, filter options, details and filters.\n   *\n   * @param {Node} already existing element\n   * @param {String} text updated element text\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function updateListEntryElement(existingElement, text) {\n    existingElement.innerHTML = text;\n    return existingElement;\n  }\n\n  /**\n   * Creates a new list entry element to be used for search results, filter options, details and filters.\n   *\n   * @param {DescribedEntry} entry entry data\n   * @param {module:searchmenu.SearchViewDescription} view description\n   * @param {number} id id of the list element\n   * @param {String} text text of the list element\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function createListEntryElement(entry, view, id, text) {\n    var listElement = createListElement(text, id, view.listEntryElementTag);\n    var parentElement = document.getElementById(view.listParentElementId);\n    parentElement.appendChild(listElement);\n    return listElement;\n  }\n\n  /**\n   * Creates the inner HTML Text for a list entry to be used for search results, filter options, details and filters.\n   *\n   * @param {DescribedEntry} entry entry data\n   * @param {module:searchmenu.SearchViewDescription} view description\n   * @param {number} id id of the list element\n   * @param {module:searchmenu.TemplateResolver} resolveTemplate function that resolves variables inside a template with contents of a source object\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function createListEntryInnerHtmlText(entry, view, id, resolveTemplate) {\n    //TODO could support template inside html e.g. referenced by id (with convention over code)\n    //TODO should limit length of resolved variables\n    var text = resolveTemplate(view.listEntryTextTemplate, entry);\n    if (typeof entry.summaries !== \"undefined\") {\n      text = resolveTemplate(view.listEntrySummaryTemplate, entry);\n    }\n    var json = JSON.stringify(entry); //needs to be without spaces\n    text += '<p id=\"' + id + '--fields\" style=\"display: none\">' + json + \"</p>\";\n    return text;\n  }\n\n  function resolveStyleClasses(entry, view, resolveTemplate) {\n    var resolvedClasses = resolveTemplate(view.listEntryStyleClassTemplate, entry);\n    resolvedClasses = resolveTemplate(resolvedClasses, { view: view });\n    return resolvedClasses;\n  }\n\n  /**\n   * Creates a new list element to be used for search results.\n   *\n   * @param {string} text inside the list element\n   * @param {number} id id of the list element\n   * @param {string} elementTag tag (e.g. \"li\") for the element\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function createListElement(text, id, elementTag) {\n    var element = document.createElement(elementTag);\n    element.id = id;\n    element.tabIndex = \"0\";\n    element.innerHTML = text;\n    return element;\n  }\n\n  function hideMenu(config) {\n    hide(config.resultsView.viewElementId);\n    hide(config.detailView.viewElementId);\n    hide(config.filterOptionsView.viewElementId);\n  }\n\n  function hideSubMenus(config) {\n    hide(config.detailView.viewElementId);\n    hide(config.filterOptionsView.viewElementId);\n  }\n\n  /**\n   * Shows the element given by its id.\n   * @param {Element}  elementId ID of the element that should be shown\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function show(elementId) {\n    showElement(document.getElementById(elementId));\n  }\n\n  /**\n   * Shows the given element.\n   * @param {Element} element element that should be shown\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function showElement(element) {\n    addClass(\"show\", element);\n  }\n\n  /**\n   * Hides the element given by its id.\n   * @param elementId ID of the element that should be hidden\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function hide(elementId) {\n    hideElement(document.getElementById(elementId));\n  }\n\n  /**\n   * Hides the view (by removing the class \"show\"), that contains the given element.\n   * The view is identified by the existing style class \"show\".\n   * @param {Element} element\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function hideViewOf(element) {\n    var parentWithShowClass = parentThatMatches(element, function (parent) {\n      return hasClass(\"show\", parent);\n    });\n    if (parentWithShowClass != null) {\n      hideElement(parentWithShowClass);\n      return;\n    }\n  }\n\n  /**\n   * @callback module:searchmenu.ElementPredicate\n   * @param {Element} element\n   * @returns {boolean} true, when the predicate matches the given element, false otherwise.\n   */\n\n  /**\n   * Returns the parent of the element (or the element itself), that matches the given predicate.\n   * Returns null, if no element had been found.\n   *\n   * @param {Element} element\n   * @param {module:searchmenu.ElementPredicate} predicate\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function parentThatMatches(element, predicate) {\n    var parentNode = element;\n    while (parentNode != null) {\n      if (predicate(parentNode)) {\n        return parentNode;\n      }\n      parentNode = parentNode.parentNode;\n    }\n    return null;\n  }\n\n  /**\n   * Hides the given element.\n   * @param element element that should be hidden\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function hideElement(element) {\n    removeClass(\"show\", element);\n  }\n\n  function toggleClass(classToToggle, element) {\n    if (hasClass(classToToggle, element)) {\n      removeClass(classToToggle, element);\n    } else {\n      addClass(classToToggle, element);\n    }\n  }\n\n  function addClass(classToAdd, element) {\n    removeClass(classToAdd, element);\n    var separator = element.className.length > 0 ? \" \" : \"\";\n    element.className += separator + classToAdd;\n  }\n\n  function removeClass(classToRemove, element) {\n    var regex = new RegExp(\"\\\\s?\\\\b\" + classToRemove + \"\\\\b\", \"gi\");\n    element.className = element.className.replace(regex, \"\");\n  }\n\n  function hasClass(classToLookFor, element) {\n    return element.className != null && element.className.indexOf(classToLookFor) >= 0;\n  }\n\n  function onMouseOverDelayed(element, delayTime, eventHandler) {\n    addEvent(\"mouseover\", element, function (event) {\n      this.originalEvent = cloneObject(event);\n      this.delayedHandlerTimer = window.setTimeout(function () {\n        eventHandler(typeof this.originalEvent !== \"undefined\" ? this.originalEvent : event);\n      }, delayTime);\n      this.preventEventHandling = function () {\n        if (this.delayedHandlerTimer !== null) {\n          clearTimeout(this.delayedHandlerTimer);\n        }\n      };\n      addEvent(\"mouseout\", element, this.preventEventHandling);\n      addEvent(\"mousedown\", element, this.preventEventHandling);\n      addEvent(\"keydown\", element, this.preventEventHandling);\n    });\n  }\n\n  function cloneObject(source) {\n    var result = {};\n    var propertyNames = Object.keys(source);\n    for (var propertyIndex = 0; propertyIndex < propertyNames.length; propertyIndex++) {\n      var propertyName = propertyNames[propertyIndex];\n      var propertyValue = source[propertyName];\n      result[propertyName] = propertyValue;\n    }\n    return result;\n  }\n\n  function onEscapeKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Escape\" || event.key == \"Esc\" || keyCodeOf(event) == 27) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onEnterKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Enter\" || keyCodeOf(event) == 13) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onSpaceKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \" \" || event.key == \"Spacebar\" || keyCodeOf(event) == 32) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onDeleteKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Del\" || event.key == \"Delete\" || keyCodeOf(event) == 46) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onBackspaceKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Backspace\" || keyCodeOf(event) == 8) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onArrowUpKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowUp\" || event.key == \"Up\" || keyCodeOf(event) == 38) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onArrowDownKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowDown\" || event.key == \"Down\" || keyCodeOf(event) == 40) {\n        eventHandler(event);\n      }\n    });\n  }\n  function onArrowRightKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowRight\" || event.key == \"Right\" || keyCodeOf(event) == 39) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onArrowLeftKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowLeft\" || event.key == \"Left\" || keyCodeOf(event) == 37) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function addEvent(eventName, element, eventHandler) {\n    eventlistener.addEventListener(eventName, element, eventHandler);\n  }\n\n  /**\n   * @returns {Element} target of the event\n   */\n  function getEventTarget(event) {\n    return eventtarget.getEventTarget(event);\n  }\n\n  /**\n   * Returns the key code of the event or -1 if it is no available.\n   * @param {KeyboardEvent} event\n   * @return key code or -1 if not available\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function keyCodeOf(event) {\n    return typeof event.keyCode === \"undefined\" ? -1 : event.keyCode;\n  }\n\n  return instance;\n})();","// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\nparcelRequire = (function (modules, cache, entry, globalName) {\n  // Save the require from previous bundle to this closure if any\n  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;\n  var nodeRequire = typeof require === 'function' && require;\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error('Cannot find module \\'' + name + '\\'');\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = cache[name] = new newRequire.Module(name);\n\n      modules[name][0].call(module.exports, localRequire, module, module.exports, this);\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x){\n      return newRequire(localRequire.resolve(x));\n    }\n\n    function resolve(x){\n      return modules[name][1][x] || x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [function (require, module) {\n      module.exports = exports;\n    }, {}];\n  };\n\n  var error;\n  for (var i = 0; i < entry.length; i++) {\n    try {\n      newRequire(entry[i]);\n    } catch (e) {\n      // Save first error but execute all entries\n      if (!error) {\n        error = e;\n      }\n    }\n  }\n\n  if (entry.length) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(entry[entry.length - 1]);\n\n    // CommonJS\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n      module.exports = mainExports;\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n     define(function () {\n       return mainExports;\n     });\n\n    // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n\n  // Override the current require with this new one\n  parcelRequire = newRequire;\n\n  if (error) {\n    // throw error from earlier, _after updating parcelRequire_\n    throw error;\n  }\n\n  return newRequire;\n})({\"kBit\":[function(require,module,exports) {\n\"use strict\";\n/**\n * @fileOverview Modded (compatibility, recursion depth) version of: https://stackoverflow.com/questions/19098797/fastest-way-to-flatten-un-flatten-nested-json-objectss\n * @version ${project.version}\n * @see {@link https://stackoverflow.com/questions/19098797/fastest-way-to-flatten-un-flatten-nested-json-objectss|stackoverflow flatten nested json objects}\n */\n\nvar module = module || {}; // Fallback for vanilla js without modules\n\n/**\n * internal_object_tools. Not meant to be used outside this repository.\n * @default {}\n */\n\nvar internal_object_tools = module.exports = {}; // Export module for npm...\n\n/**\n * @typedef {Object} NameValuePair\n * @property {string} name - point separated names of the flattened main and sub properties, e.g. \"responses[2].hits.hits[4]._source.name\".\n * @property {string} value - value of the property\n */\n\n/**\n * @param {object} data hierarchical object that may consist fo fields, subfields and arrays.\n * @param {number} maxRecursionDepth\n * @returns {NameValuePair[]} array of property name and value pairs\n */\n\ninternal_object_tools.flattenToArray = function (data, maxRecursionDepth) {\n  var result = [];\n\n  if (typeof maxRecursionDepth !== \"number\" || maxRecursionDepth < 1) {\n    maxRecursionDepth = 20;\n  }\n\n  function recurse(cur, prop, depth) {\n    if (depth > maxRecursionDepth || typeof cur === \"function\") {\n      return;\n    }\n\n    if (Object(cur) !== cur) {\n      result.push({\n        name: prop,\n        value: cur\n      });\n    } else if (Array.isArray(cur)) {\n      var i;\n      var l = cur.length;\n\n      for (i = 0; i < l; i += 1) {\n        recurse(cur[i], prop + \"[\" + i + \"]\", depth + 1);\n      }\n\n      if (l === 0) {\n        result[prop] = [];\n        result.push({\n          name: prop,\n          value: \"\"\n        });\n      }\n    } else {\n      var isEmpty = true;\n      var p;\n\n      for (p in cur) {\n        isEmpty = false;\n        recurse(cur[p], prop ? prop + \".\" + p : p, depth + 1);\n      }\n\n      if (isEmpty && prop) {\n        result.push({\n          name: prop,\n          value: \"\"\n        });\n      }\n    }\n  }\n\n  recurse(data, \"\", 0);\n  return result;\n};\n},{}],\"gEHB\":[function(require,module,exports) {\n/**\n * @file Provides a simple template resolver, that replaces variables in double curly brackets with the values of a given object.\n * @version {@link https://github.com/JohT/data-restructor-js/releases/latest latest version}\n * @author JohT\n * @version ${project.version}\n */\n\"use strict\";\n\nvar module = templateResolverInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction templateResolverInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n/**\n * Provides a simple template resolver, that replaces variables in double curly brackets with the values of a given object.\n * @module template_resolver\n */\n\n\nvar template_resolver = module.exports = {}; // Export module for npm...\n\ntemplate_resolver.internalCreateIfNotExists = templateResolverInternalCreateIfNotExists;\n\nvar internal_object_tools = internal_object_tools || require(\"../../lib/js/flattenToArray\"); // supports vanilla js & npm\n\n\ntemplate_resolver.Resolver = function () {\n  var removeArrayBracketsRegEx = new RegExp(\"\\\\[\\\\d+\\\\]\", \"gi\");\n  /**\n   * Resolver. Is used inside this repository. It could also be used outside.\n   * @param {*} sourceDataObject The properties of this object will be used to replace the placeholders in the template.\n   * @constructs Resolver\n   * @alias module:template_resolver.Resolver\n   */\n\n  function Resolver(sourceDataObject) {\n    /**\n     * The properties of this source data object will be used to replace the placeholders in the template.\n     */\n    this.sourceDataObject = sourceDataObject;\n    /**\n     * Resolves the given template.\n     *\n     * The template may contain variables in double curly brackets.\n     * Supported variables are all properties of this object, e.g. \"{{fieldName}}\", \"{{displayName}}\", \"{{value}}\".\n     * Since this object may also contains (described) groups of sub objects, they can also be used, e.g. \"{{summaries[0].value}}\"\n     * Parts of the index can be inserted by using e.g. \"{{index[1]}}\".\n     *\n     * @param {string} template\n     * @returns {string} resolved template\n     */\n\n    this.resolveTemplate = function (template) {\n      return this.replaceResolvableFields(template, addFieldsPerGroup(this.resolvableFieldsOfAll(this.sourceDataObject)));\n    };\n    /**\n     * Returns a map like object, that contains all resolvable fields and their values as properties.\n     * This function takes a variable count of input parameters,\n     * each containing an object that contains resolvable fields to extract from.\n     *\n     * The recursion depth is limited to 3, so that an object,\n     * that contains an object can contain another object (but not further).\n     *\n     * Properties beginning with an underscore in their name will be filtered out, since they are considered as internal fields.\n     *\n     * @param {...object} varArgs variable count of parameters. Each parameter contains an object that fields should be resolvable for variables.\n     * @returns {object} object with resolvable field names and their values.\n     * @public\n     */\n\n\n    this.resolvableFieldsOfAll = function () {\n      var map = {};\n\n      var ignoreInternalFields = function (propertyName) {\n        return propertyName.indexOf(\"_\") !== 0 && propertyName.indexOf(\"._\") < 0;\n      };\n\n      var index;\n\n      for (index = 0; index < arguments.length; index += 1) {\n        addToFilteredMapObject(internal_object_tools.flattenToArray(arguments[index], 3), map, ignoreInternalFields);\n      }\n\n      return map;\n    };\n    /**\n     * Replaces all variables in double curly brackets, e.g. {{property}},\n     * with the value of that property from the resolvableProperties.\n     *\n     * Supported property types: string, number, boolean\n     * @param {string} stringContainingVariables\n     * @param {object[]} resolvableFields (name=value)\n     */\n\n\n    this.replaceResolvableFields = function (stringContainingVariables, resolvableFields) {\n      var replaced = stringContainingVariables;\n      var propertyNames = Object.keys(resolvableFields);\n      var propertyIndex = 0;\n      var propertyName = \"\";\n      var propertyValue = \"\";\n\n      for (propertyIndex = 0; propertyIndex < propertyNames.length; propertyIndex += 1) {\n        propertyName = propertyNames[propertyIndex];\n        propertyValue = resolvableFields[propertyName];\n        replaced = replaced.replace(\"{{\" + propertyName + \"}}\", propertyValue);\n      }\n\n      return replaced;\n    };\n  }\n  /**\n   * Adds the value of the \"fieldName\" property (including its group prefix) and its associated \"value\" property content.\n   * For example: detail[2].fieldName=\"name\", detail[2].value=\"Smith\" lead to the additional property detail.name=\"Smith\".\n   * @param {object} object with resolvable field names and their values.\n   * @returns {object} object with resolvable field names and their values.\n   * @protected\n   * @memberof module:template_resolver.Resolver\n   */\n\n\n  function addFieldsPerGroup(map) {\n    var propertyNames = Object.keys(map);\n    var i, fullPropertyName, propertyInfo, propertyValue;\n\n    for (i = 0; i < propertyNames.length; i += 1) {\n      fullPropertyName = propertyNames[i];\n      propertyValue = map[fullPropertyName];\n      propertyInfo = getPropertyNameInfos(fullPropertyName); // Supports fields that are defined by a property named \"fieldName\" (containing the name)\n      // and a property named \"value\" inside the same sub object (containing its value).\n      // Ignore custom fields that are named \"fieldName\"(propertyValue), since this would lead to an unpredictable behavior.\n      // TODO could make \"fieldName\" and \"value\" configurable\n\n      if (propertyInfo.name === \"fieldName\" && propertyValue !== \"fieldName\") {\n        map[propertyInfo.groupWithoutArrayIndices + propertyValue] = map[propertyInfo.group + \"value\"];\n      }\n    }\n\n    return map;\n  }\n  /**\n   * Infos about the full property name including the name of the group (followed by the separator) and the name of the property itself.\n   * @param {String} fullPropertyName\n   * @returns {Object} Contains \"group\" (empty or group name including trailing separator \".\"), \"groupWithoutArrayIndices\" and \"name\" (property name).\n   * @protected\n   * @memberof module:template_resolver.Resolver\n   */\n\n\n  function getPropertyNameInfos(fullPropertyName) {\n    var positionOfRightMostSeparator = fullPropertyName.lastIndexOf(\".\");\n    var propertyName = fullPropertyName;\n\n    if (positionOfRightMostSeparator > 0) {\n      propertyName = fullPropertyName.substr(positionOfRightMostSeparator + 1);\n    }\n\n    var propertyGroup = \"\";\n\n    if (positionOfRightMostSeparator > 0) {\n      propertyGroup = fullPropertyName.substr(0, positionOfRightMostSeparator + 1); //includes the trailing \".\".\n    }\n\n    var propertyGroupWithoutArrayIndices = propertyGroup.replace(removeArrayBracketsRegEx, \"\");\n    return {\n      group: propertyGroup,\n      groupWithoutArrayIndices: propertyGroupWithoutArrayIndices,\n      name: propertyName\n    };\n  }\n  /**\n   * Collects all flattened name-value-pairs into one object using the property names as keys and their values as values (map-like).\n   * Example: `{name: \"accountNumber\", value: \"12345\"}` becomes `mapObject[\"accountNumber\"]=\"12345\"`.\n   *\n   * @param {NameValuePair[]} elements flattened array of name-value-pairs\n   * @param {object} mapObject container to collect the results. Needs to be created before e.g. using `{}`.\n   * @param {function} filterMatchesFunction takes the property name as string argument and returns true (include) or false (exclude).\n   * @protected\n   * @memberof module:template_resolver.Resolver\n   */\n\n\n  function addToFilteredMapObject(elements, mapObject, filterMatchesFunction) {\n    var index, element;\n\n    for (index = 0; index < elements.length; index += 1) {\n      element = elements[index];\n\n      if (typeof filterMatchesFunction === \"function\" && filterMatchesFunction(element.name)) {\n        mapObject[element.name] = element.value;\n      }\n    }\n\n    return mapObject;\n  }\n\n  return Resolver;\n}();\n},{\"../../lib/js/flattenToArray\":\"kBit\"}]},{},[\"gEHB\"], \"data_restructor_js\")","// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\nparcelRequire = (function (modules, cache, entry, globalName) {\n  // Save the require from previous bundle to this closure if any\n  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;\n  var nodeRequire = typeof require === 'function' && require;\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error('Cannot find module \\'' + name + '\\'');\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = cache[name] = new newRequire.Module(name);\n\n      modules[name][0].call(module.exports, localRequire, module, module.exports, this);\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x){\n      return newRequire(localRequire.resolve(x));\n    }\n\n    function resolve(x){\n      return modules[name][1][x] || x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [function (require, module) {\n      module.exports = exports;\n    }, {}];\n  };\n\n  var error;\n  for (var i = 0; i < entry.length; i++) {\n    try {\n      newRequire(entry[i]);\n    } catch (e) {\n      // Save first error but execute all entries\n      if (!error) {\n        error = e;\n      }\n    }\n  }\n\n  if (entry.length) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(entry[entry.length - 1]);\n\n    // CommonJS\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n      module.exports = mainExports;\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n     define(function () {\n       return mainExports;\n     });\n\n    // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n\n  // Override the current require with this new one\n  parcelRequire = newRequire;\n\n  if (error) {\n    // throw error from earlier, _after updating parcelRequire_\n    throw error;\n  }\n\n  return newRequire;\n})({\"kBit\":[function(require,module,exports) {\n\"use strict\";\n/**\n * @fileOverview Modded (compatibility, recursion depth) version of: https://stackoverflow.com/questions/19098797/fastest-way-to-flatten-un-flatten-nested-json-objectss\n * @version ${project.version}\n * @see {@link https://stackoverflow.com/questions/19098797/fastest-way-to-flatten-un-flatten-nested-json-objectss|stackoverflow flatten nested json objects}\n */\n\nvar module = module || {}; // Fallback for vanilla js without modules\n\n/**\n * internal_object_tools. Not meant to be used outside this repository.\n * @default {}\n */\n\nvar internal_object_tools = module.exports = {}; // Export module for npm...\n\n/**\n * @typedef {Object} NameValuePair\n * @property {string} name - point separated names of the flattened main and sub properties, e.g. \"responses[2].hits.hits[4]._source.name\".\n * @property {string} value - value of the property\n */\n\n/**\n * @param {object} data hierarchical object that may consist fo fields, subfields and arrays.\n * @param {number} maxRecursionDepth\n * @returns {NameValuePair[]} array of property name and value pairs\n */\n\ninternal_object_tools.flattenToArray = function (data, maxRecursionDepth) {\n  var result = [];\n\n  if (typeof maxRecursionDepth !== \"number\" || maxRecursionDepth < 1) {\n    maxRecursionDepth = 20;\n  }\n\n  function recurse(cur, prop, depth) {\n    if (depth > maxRecursionDepth || typeof cur === \"function\") {\n      return;\n    }\n\n    if (Object(cur) !== cur) {\n      result.push({\n        name: prop,\n        value: cur\n      });\n    } else if (Array.isArray(cur)) {\n      var i;\n      var l = cur.length;\n\n      for (i = 0; i < l; i += 1) {\n        recurse(cur[i], prop + \"[\" + i + \"]\", depth + 1);\n      }\n\n      if (l === 0) {\n        result[prop] = [];\n        result.push({\n          name: prop,\n          value: \"\"\n        });\n      }\n    } else {\n      var isEmpty = true;\n      var p;\n\n      for (p in cur) {\n        isEmpty = false;\n        recurse(cur[p], prop ? prop + \".\" + p : p, depth + 1);\n      }\n\n      if (isEmpty && prop) {\n        result.push({\n          name: prop,\n          value: \"\"\n        });\n      }\n    }\n  }\n\n  recurse(data, \"\", 0);\n  return result;\n};\n},{}],\"gEHB\":[function(require,module,exports) {\n/**\n * @file Provides a simple template resolver, that replaces variables in double curly brackets with the values of a given object.\n * @version {@link https://github.com/JohT/data-restructor-js/releases/latest latest version}\n * @author JohT\n * @version ${project.version}\n */\n\"use strict\";\n\nvar module = templateResolverInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction templateResolverInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n/**\n * Provides a simple template resolver, that replaces variables in double curly brackets with the values of a given object.\n * @module template_resolver\n */\n\n\nvar template_resolver = module.exports = {}; // Export module for npm...\n\ntemplate_resolver.internalCreateIfNotExists = templateResolverInternalCreateIfNotExists;\n\nvar internal_object_tools = internal_object_tools || require(\"../../lib/js/flattenToArray\"); // supports vanilla js & npm\n\n\ntemplate_resolver.Resolver = function () {\n  var removeArrayBracketsRegEx = new RegExp(\"\\\\[\\\\d+\\\\]\", \"gi\");\n  /**\n   * Resolver. Is used inside this repository. It could also be used outside.\n   * @param {*} sourceDataObject The properties of this object will be used to replace the placeholders in the template.\n   * @constructs Resolver\n   * @alias module:template_resolver.Resolver\n   */\n\n  function Resolver(sourceDataObject) {\n    /**\n     * The properties of this source data object will be used to replace the placeholders in the template.\n     */\n    this.sourceDataObject = sourceDataObject;\n    /**\n     * Resolves the given template.\n     *\n     * The template may contain variables in double curly brackets.\n     * Supported variables are all properties of this object, e.g. \"{{fieldName}}\", \"{{displayName}}\", \"{{value}}\".\n     * Since this object may also contains (described) groups of sub objects, they can also be used, e.g. \"{{summaries[0].value}}\"\n     * Parts of the index can be inserted by using e.g. \"{{index[1]}}\".\n     *\n     * @param {string} template\n     * @returns {string} resolved template\n     */\n\n    this.resolveTemplate = function (template) {\n      return this.replaceResolvableFields(template, addFieldsPerGroup(this.resolvableFieldsOfAll(this.sourceDataObject)));\n    };\n    /**\n     * Returns a map like object, that contains all resolvable fields and their values as properties.\n     * This function takes a variable count of input parameters,\n     * each containing an object that contains resolvable fields to extract from.\n     *\n     * The recursion depth is limited to 3, so that an object,\n     * that contains an object can contain another object (but not further).\n     *\n     * Properties beginning with an underscore in their name will be filtered out, since they are considered as internal fields.\n     *\n     * @param {...object} varArgs variable count of parameters. Each parameter contains an object that fields should be resolvable for variables.\n     * @returns {object} object with resolvable field names and their values.\n     * @public\n     */\n\n\n    this.resolvableFieldsOfAll = function () {\n      var map = {};\n\n      var ignoreInternalFields = function (propertyName) {\n        return propertyName.indexOf(\"_\") !== 0 && propertyName.indexOf(\"._\") < 0;\n      };\n\n      var index;\n\n      for (index = 0; index < arguments.length; index += 1) {\n        addToFilteredMapObject(internal_object_tools.flattenToArray(arguments[index], 3), map, ignoreInternalFields);\n      }\n\n      return map;\n    };\n    /**\n     * Replaces all variables in double curly brackets, e.g. {{property}},\n     * with the value of that property from the resolvableProperties.\n     *\n     * Supported property types: string, number, boolean\n     * @param {string} stringContainingVariables\n     * @param {object[]} resolvableFields (name=value)\n     */\n\n\n    this.replaceResolvableFields = function (stringContainingVariables, resolvableFields) {\n      var replaced = stringContainingVariables;\n      var propertyNames = Object.keys(resolvableFields);\n      var propertyIndex = 0;\n      var propertyName = \"\";\n      var propertyValue = \"\";\n\n      for (propertyIndex = 0; propertyIndex < propertyNames.length; propertyIndex += 1) {\n        propertyName = propertyNames[propertyIndex];\n        propertyValue = resolvableFields[propertyName];\n        replaced = replaced.replace(\"{{\" + propertyName + \"}}\", propertyValue);\n      }\n\n      return replaced;\n    };\n  }\n  /**\n   * Adds the value of the \"fieldName\" property (including its group prefix) and its associated \"value\" property content.\n   * For example: detail[2].fieldName=\"name\", detail[2].value=\"Smith\" lead to the additional property detail.name=\"Smith\".\n   * @param {object} object with resolvable field names and their values.\n   * @returns {object} object with resolvable field names and their values.\n   * @protected\n   * @memberof module:template_resolver.Resolver\n   */\n\n\n  function addFieldsPerGroup(map) {\n    var propertyNames = Object.keys(map);\n    var i, fullPropertyName, propertyInfo, propertyValue;\n\n    for (i = 0; i < propertyNames.length; i += 1) {\n      fullPropertyName = propertyNames[i];\n      propertyValue = map[fullPropertyName];\n      propertyInfo = getPropertyNameInfos(fullPropertyName); // Supports fields that are defined by a property named \"fieldName\" (containing the name)\n      // and a property named \"value\" inside the same sub object (containing its value).\n      // Ignore custom fields that are named \"fieldName\"(propertyValue), since this would lead to an unpredictable behavior.\n      // TODO could make \"fieldName\" and \"value\" configurable\n\n      if (propertyInfo.name === \"fieldName\" && propertyValue !== \"fieldName\") {\n        map[propertyInfo.groupWithoutArrayIndices + propertyValue] = map[propertyInfo.group + \"value\"];\n      }\n    }\n\n    return map;\n  }\n  /**\n   * Infos about the full property name including the name of the group (followed by the separator) and the name of the property itself.\n   * @param {String} fullPropertyName\n   * @returns {Object} Contains \"group\" (empty or group name including trailing separator \".\"), \"groupWithoutArrayIndices\" and \"name\" (property name).\n   * @protected\n   * @memberof module:template_resolver.Resolver\n   */\n\n\n  function getPropertyNameInfos(fullPropertyName) {\n    var positionOfRightMostSeparator = fullPropertyName.lastIndexOf(\".\");\n    var propertyName = fullPropertyName;\n\n    if (positionOfRightMostSeparator > 0) {\n      propertyName = fullPropertyName.substr(positionOfRightMostSeparator + 1);\n    }\n\n    var propertyGroup = \"\";\n\n    if (positionOfRightMostSeparator > 0) {\n      propertyGroup = fullPropertyName.substr(0, positionOfRightMostSeparator + 1); //includes the trailing \".\".\n    }\n\n    var propertyGroupWithoutArrayIndices = propertyGroup.replace(removeArrayBracketsRegEx, \"\");\n    return {\n      group: propertyGroup,\n      groupWithoutArrayIndices: propertyGroupWithoutArrayIndices,\n      name: propertyName\n    };\n  }\n  /**\n   * Collects all flattened name-value-pairs into one object using the property names as keys and their values as values (map-like).\n   * Example: `{name: \"accountNumber\", value: \"12345\"}` becomes `mapObject[\"accountNumber\"]=\"12345\"`.\n   *\n   * @param {NameValuePair[]} elements flattened array of name-value-pairs\n   * @param {object} mapObject container to collect the results. Needs to be created before e.g. using `{}`.\n   * @param {function} filterMatchesFunction takes the property name as string argument and returns true (include) or false (exclude).\n   * @protected\n   * @memberof module:template_resolver.Resolver\n   */\n\n\n  function addToFilteredMapObject(elements, mapObject, filterMatchesFunction) {\n    var index, element;\n\n    for (index = 0; index < elements.length; index += 1) {\n      element = elements[index];\n\n      if (typeof filterMatchesFunction === \"function\" && filterMatchesFunction(element.name)) {\n        mapObject[element.name] = element.value;\n      }\n    }\n\n    return mapObject;\n  }\n\n  return Resolver;\n}();\n},{\"../../lib/js/flattenToArray\":\"kBit\"}],\"NvOR\":[function(require,module,exports) {\n/**\n * @file Describes a data field of the restructured data.\n * @version {@link https://github.com/JohT/data-restructor-js/releases/latest latest version}\n * @author JohT\n * @version ${project.version}\n */\n\"use strict\";\n\nvar module = describedFieldInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction describedFieldInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n/**\n * Describes a data field of the restructured data.\n * @module described_field\n */\n\n\nvar described_field = module.exports = {}; // Export module for npm...\n\ndescribed_field.internalCreateIfNotExists = describedFieldInternalCreateIfNotExists;\n/**\n * Describes a field of the restructured data.\n * Dynamically added properties represent custom named groups containing DescribedDataField-Arrays.\n *\n * @typedef {Object} module:described_field.DescribedDataField\n * @property {string} [category=\"\"] - name of the category. Could contain a short domain name like \"product\" or \"vendor\".\n * @property {string} [type=\"\"] - type of the data element. Examples: \"summary\" for e.g. a list overview. \"detail\" e.g. when a summary is selected. \"filter\" e.g. for field/value pair results that can be selected as data filters.\n * @property {string} [abbreviation=\"\"] - one optional character, a symbol character or a short abbreviation of the category\n * @property {string} [image=\"\"] - one optional path to an image resource\n * @property {string} index - array of numbers containing the splitted index. Example: \"responses[2].hits.hits[4]._source.name\" will have an index of [2,4]\n * @property {string[]} groupNames - array of names of all dynamically added properties representing groups\n * @property {string} displayName - display name of the field\n * @property {string} fieldName - field name\n * @property {{*}} value - content of the field\n * @property {module:described_field.DescribedDataField[]} [couldBeAnyCustomGroupName] any number of groups attached to the field each containing multiple fields\n */\n\ndescribed_field.DescribedDataFieldBuilder = function () {\n  /**\n   * Builds a {@link module:described_field.DescribedDataField}.\n   * DescribedDataField is the main element of the restructured data and therefore considered \"public\".\n   * @constructs DescribedDataFieldBuilder\n   * @alias module:described_field.DescribedDataFieldBuilder\n   */\n  function DescribedDataFieldBuilder() {\n    /**\n     * @type {module:described_field.DescribedDataField}\n     */\n    this.describedField = {\n      category: \"\",\n      type: \"\",\n      abbreviation: \"\",\n      image: \"\",\n      index: [],\n      groupNames: [],\n      displayName: \"\",\n      fieldName: \"\",\n      value: \"\"\n    };\n    /**\n     * Takes over all values of the template {@link module:described_field.DescribedDataField}.\n     * @function\n     * @param {module:described_field.DescribedDataField} template\n     * @returns {DescribedDataFieldBuilder}\n     * @example fromDescribedDataField(sourceField)\n     */\n\n    this.fromDescribedDataField = function (template) {\n      this.category(template.category);\n      this.type(template.type);\n      this.abbreviation(template.abbreviation);\n      this.image(template.image);\n      this.index(template.index);\n      this.groupNames(template.groupNames);\n      this.displayName(template.displayName);\n      this.fieldName(template.fieldName);\n      this.value(template.value);\n      return this;\n    };\n    /**\n     * Sets the category.\n     *\n     * Contains a short domain nam, for example:\n     * - \"product\" for products\n     * - \"vendor\" for vendors\n     *\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {DescribedDataFieldBuilder}\n     * @example category(\"Product\")\n     */\n\n\n    this.category = function (value) {\n      this.describedField.category = withDefaultString(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the type.\n     *\n     * Contains the type of the entry, for example:\n     * - \"summary\" for e.g. a list overview.\n     * - \"detail\" e.g. when a summary is selected.\n     * - \"filter\" e.g. for field/value pair results that can be selected as search parameters.\n     *\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {DescribedDataFieldBuilder}\n     * @example type(\"summary\")\n     */\n\n\n    this.type = function (value) {\n      this.describedField.type = withDefaultString(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the optional abbreviation.\n     *\n     * Contains a symbol character or a very short abbreviation of the category.\n     * - \"P\" for products\n     * - \"V\" for vendors\n     *\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {DescribedDataFieldBuilder}\n     * @example abbreviation(\"P\")\n     */\n\n\n    this.abbreviation = function (value) {\n      this.describedField.abbreviation = withDefaultString(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the optional path to an image resource.\n     *\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {DescribedDataFieldBuilder}\n     * @example image(\"img/product.png\")\n     */\n\n\n    this.image = function (value) {\n      this.describedField.image = withDefaultString(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the index as an array of numbers containing the splitted array indexes of the source field.\n     * Example: \"responses[2].hits.hits[4]._source.name\" will have an index of [2,4].\n     *\n     * @function\n     * @param {number[]} [value=[]]\n     * @returns {DescribedDataFieldBuilder}\n     * @example index([2,4])\n     */\n\n\n    this.index = function (value) {\n      this.describedField.index = withDefaultArray(value, []);\n      return this;\n    };\n    /**\n     * Sets the group names as an array of strings containing the names of the dynamically added properties,\n     * that contain an array of {@link module:described_field.DescribedDataField}-Objects.\n     *\n     * @function\n     * @param {string[]} [value=[]]\n     * @returns {DescribedDataFieldBuilder}\n     * @example groupNames([\"summaries\",\"details\",\"options\"])\n     */\n\n\n    this.groupNames = function (value) {\n      this.describedField.groupNames = withDefaultArray(value, []);\n      return this;\n    };\n    /**\n     * Sets the display name.\n     *\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {DescribedDataFieldBuilder}\n     * @example displayName(\"Color\")\n     */\n\n\n    this.displayName = function (value) {\n      this.describedField.displayName = withDefaultString(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the (technical) field name.\n     *\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {DescribedDataFieldBuilder}\n     * @example fieldName(\"color\")\n     */\n\n\n    this.fieldName = function (value) {\n      this.describedField.fieldName = withDefaultString(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the value/content of the field.\n     *\n     * @function\n     * @param {*} value\n     * @returns {DescribedDataFieldBuilder}\n     * @example value(\"darkblue\")\n     */\n\n\n    this.value = function (value) {\n      this.describedField.value = value;\n      return this;\n    };\n    /**\n     * Finalizes the settings and builds the {@link module:described_field.DescribedDataField}.\n     * @function\n     * @returns {module:described_field.DescribedDataField}\n     */\n\n\n    this.build = function () {\n      return this.describedField;\n    };\n  }\n\n  function isSpecifiedString(value) {\n    return typeof value === \"string\" && value !== null && value !== \"\";\n  }\n\n  function withDefaultString(value, defaultValue) {\n    return isSpecifiedString(value) ? value : defaultValue;\n  }\n\n  function withDefaultArray(value, defaultValue) {\n    return value === undefined || value === null ? defaultValue : value;\n  }\n\n  return DescribedDataFieldBuilder;\n}();\n/**\n * Creates a new described data field with all properties of the original one except for dynamically added groups.\n * @param {module:described_field.DescribedDataField} describedDataField\n * @returns {module:described_field.DescribedDataField}\n * @memberof module:described_field\n */\n\n\ndescribed_field.copyWithoutGroups = function (describedDataField) {\n  return new described_field.DescribedDataFieldBuilder().fromDescribedDataField(describedDataField).groupNames([]).build();\n};\n\ndescribed_field.DescribedDataFieldGroup = function () {\n  /**\n   * Adds groups to {@link module:described_field.DescribedDataField}s. These groups are dynamically added properties\n   * that contain an array of sub fields of the same type {@link module:described_field.DescribedDataField}s.\n   *\n   * @param {module:described_field.DescribedDataField} dataField\n   * @constructs DescribedDataFieldGroup\n   * @alias module:described_field.DescribedDataFieldGroup\n   * @example new described_field.DescribedDataFieldGroup(field).addGroupEntry(\"details\", detailField);\n   */\n  function DescribedDataFieldGroup(dataField) {\n    this.dataField = dataField;\n    /**\n     * Adds an entry to the given group. If the group does not exist, it will be created.\n     * @function\n     * @param {String} groupName name of the group to which the entry will be added\n     * @param {module:described_field.DescribedDataField} describedField sub field that is added to the group\n     * @returns {DescribedDataFieldGroup}\n     */\n\n    this.addGroupEntry = function (groupName, describedField) {\n      this.addGroupEntries(groupName, [describedField]);\n      return this;\n    };\n    /**\n     * Adds entries to the given group. If the group does not exist, it will be created.\n     * @function\n     * @param {String} groupName name of the group to which the entries will be added\n     * @param {module:described_field.DescribedDataField[]} describedFields sub fields that are added to the group\n     * @returns {DescribedDataFieldGroup}\n     */\n\n\n    this.addGroupEntries = function (groupName, describedFields) {\n      if (!groupName || groupName.length === 0) {\n        return this;\n      }\n\n      if (!describedFields || describedFields.length === 0) {\n        return this;\n      }\n\n      if (this.dataField[groupName] === undefined) {\n        this.dataField.groupNames.push(groupName);\n        this.dataField[groupName] = [];\n      }\n\n      var index;\n      var describedField;\n\n      for (index = 0; index < describedFields.length; index += 1) {\n        describedField = describedFields[index];\n        this.dataField[groupName].push(describedField);\n      }\n\n      return this;\n    };\n  }\n\n  return DescribedDataFieldGroup;\n}();\n},{}],\"hflC\":[function(require,module,exports) {\n/**\n * @file datarestructor transforms parsed JSON objects into a uniform data structure\n * @version {@link https://github.com/JohT/data-restructor-js/releases/latest latest version}\n * @author JohT\n */\n\"use strict\";\n\nvar module = datarestructorInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction datarestructorInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n/**\n * datarestructor namespace and module declaration.\n * It contains all functions to convert an object (e.g. parsed JSON) into uniform enumerated list of described field entries.\n * \n * <b>Transformation steps:</b>\n * - JSON\n * - flatten\n * - mark and identify\n * - add array fields\n * - deduplicate \n * - group\n * - flatten again\n * @module datarestructor\n */\n\n\nvar datarestructor = module.exports = {}; // Export module for npm...\n\ndatarestructor.internalCreateIfNotExists = datarestructorInternalCreateIfNotExists;\n\nvar internal_object_tools = internal_object_tools || require(\"../../lib/js/flattenToArray\"); // supports vanilla js & npm\n\n\nvar template_resolver = template_resolver || require(\"../../src/js/templateResolver\"); // supports vanilla js & npm\n\n\nvar described_field = described_field || require(\"../../src/js/describedfield\"); // supports vanilla js & npm\n\n/**\n * Takes the full qualified original property name and extracts a simple name out of it.\n * \n * @callback module:datarestructor.propertyNameFunction\n * @param {string} propertyName full qualified, point separated property name \n * @return {String} extracted, simple name\n */\n\n/**\n * Describes a selected part of the incoming data structure and defines, \n * how the data should be transformed.\n * \n * @typedef {Object} module:datarestructor.PropertyStructureDescription\n * @property {string} type - \"\"(default). Some examples: \"summary\" for e.g. a list overview. \"detail\" e.g. when a summary is selected. \"filter\" e.g. for field/value pair results that can be selected as search parameters.\n * @property {string} category - name of the category. Default = \"\". Could contain a short domain name like \"product\" or \"vendor\".\n * @property {string} [abbreviation=\"\"] - one optional character, a symbol character or a short abbreviation of the category\n * @property {string} [image=\"\"] - one optional path to an image resource\n * @property {boolean} propertyPatternTemplateMode - \"false\"(default): property name needs to be equal to the pattern. \"true\" allows variables like \"{{fieldName}}\" inside the pattern.\n * @property {string} propertyPattern - property name pattern (without array indices) to match\n * @property {string} indexStartsWith - \"\"(default) matches all ids. String that needs to match the beginning of the id. E.g. \"1.\" will match id=\"1.3.4\" but not \"0.1.2\".\n * @property {module:datarestructor.propertyNameFunction} getDisplayNameForPropertyName - display name for the property. \"\"(default) last property name element with upper case first letter.\n * @property {module:datarestructor.propertyNameFunction} getFieldNameForPropertyName - field name for the property. \"\" (default) last property name element.\n * @property {string} groupName - name of the property, that contains grouped entries. Default=\"group\".\n * @property {string} groupPattern - Pattern that describes how to group entries. \"groupName\" defines the name of this group. A pattern may contain variables in double curly brackets {{variable}}.\n * @property {string} groupDestinationPattern - Pattern that describes where the group should be moved to. Default=\"\"=Group will not be moved. A pattern may contain variables in double curly brackets {{variable}}.\n * @property {string} groupDestinationName - (default=groupName) Name of the group when it had been moved to the destination.\n * @property {string} deduplicationPattern - Pattern to use to remove duplicate entries. A pattern may contain variables in double curly brackets {{variable}}.\n */\n\n\ndatarestructor.PropertyStructureDescriptionBuilder = function () {\n  \"use strict\";\n  /**\n   * Builder for a {@link PropertyStructureDescription}.\n   * @constructs PropertyStructureDescriptionBuilder\n   * @alias module:datarestructor.PropertyStructureDescriptionBuilder\n   */\n\n  function PropertyStructureDescription() {\n    /**\n     * @type {module:datarestructor.PropertyStructureDescription}\n     */\n    this.description = {\n      type: \"\",\n      category: \"\",\n      abbreviation: \"\",\n      image: \"\",\n      propertyPatternTemplateMode: false,\n      propertyPattern: \"\",\n      indexStartsWith: \"\",\n      groupName: \"group\",\n      groupPattern: \"\",\n      groupDestinationPattern: \"\",\n      groupDestinationName: null,\n      deduplicationPattern: \"\",\n      getDisplayNameForPropertyName: null,\n      getFieldNameForPropertyName: null,\n      matchesPropertyName: null\n    };\n    /**\n     * Sets the type.\n     * \n     * Contains the type of the entry, for example: \n     * - \"summary\" for e.g. a list overview. \n     * - \"detail\" e.g. when a summary is selected. \n     * - \"filter\" e.g. for field/value pair results that can be selected as search parameters.\n     * \n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example type(\"summary\")\n     */\n\n    this.type = function (value) {\n      this.description.type = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the category.\n     * \n     * Contains a short domain nam, for example: \n     * - \"product\" for products\n     * - \"vendor\" for vendors\n     * \n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example category(\"Product\")\n     */\n\n\n    this.category = function (value) {\n      this.description.category = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the optional abbreviation.\n     * \n     * Contains a symbol character or a very short abbreviation of the category.\n     * - \"P\" for products\n     * - \"V\" for vendors\n     * \n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example abbreviation(\"P\")\n     */\n\n\n    this.abbreviation = function (value) {\n      this.description.abbreviation = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the optional path to an image resource.\n     * \n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example image(\"img/product.png\")\n     */\n\n\n    this.image = function (value) {\n      this.description.image = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets \"equal mode\" for the property pattern.\n     * \n     * \"propertyPattern\" need to match exactly if this mode is activated.\n     *  It clears propertyPatternTemplateMode which means \"equal\" mode.\n     * @function\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     */\n\n\n    this.propertyPatternEqualMode = function () {\n      this.description.propertyPatternTemplateMode = false;\n      return this;\n    };\n    /**\n     * Sets \"template mode\" for the property pattern.\n     * \n     * \"propertyPattern\" can contain variables like {{fieldName}} and\n     * doesn't need to match the property name exactly. If the \"propertyPattern\"\n     * is shorter than the property name, it also matches when the property name\n     * starts with the \"propertyPattern\".\n     * \n     * @function\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     */\n\n\n    this.propertyPatternTemplateMode = function () {\n      this.description.propertyPatternTemplateMode = true;\n      return this;\n    };\n    /**\n     * Sets the property name pattern. \n     * \n     * Contains single property names with sub types separated by \".\" without array indices.\n     * May contain variables in double curly brackets.\n     * \n     * Example: \n     * - responses.hits.hits._source.{{fieldName}}\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example propertyPattern(\"responses.hits.hits._source.{{fieldName}}\")\n     */\n\n\n    this.propertyPattern = function (value) {\n      this.description.propertyPattern = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the optional beginning of the id that needs to match.\n     * Matches all indices if set to \"\" (or not called).\n     * \n     * For example:\n     * - \"1.\" will match id=\"1.3.4\" but not \"0.1.2\".\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example indexStartsWith(\"1.\")\n     */\n\n\n    this.indexStartsWith = function (value) {\n      this.description.indexStartsWith = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Overrides the display name of the property.\n     * \n     * If it is not set or set to \"\" then it will be derived from the\n     * last part of original property name starting with an upper case character.\n     *  \n     * For example:\n     * - \"Product\"\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example displayPropertyName(\"Product\")\n     */\n\n\n    this.displayPropertyName = function (value) {\n      this.description.getDisplayNameForPropertyName = createNameExtractFunction(value, this.description);\n\n      if (isSpecifiedString(value)) {\n        return this;\n      }\n\n      this.description.getDisplayNameForPropertyName = removeArrayValuePropertyPostfixFunction(this.description.getDisplayNameForPropertyName);\n      this.description.getDisplayNameForPropertyName = upperCaseFirstLetterForFunction(this.description.getDisplayNameForPropertyName);\n      return this;\n    };\n    /**\n     * Overrides the (technical) field name of the property.\n     * \n     * If it is not set or set to \"\" then it will be derived from the\n     * last part of original property name.\n     *  \n     * For example:\n     * - \"product\"\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example fieldName(\"product\")\n     */\n\n\n    this.fieldName = function (value) {\n      this.description.getFieldNameForPropertyName = createNameExtractFunction(value, this.description);\n      return this;\n    };\n    /**\n     * Sets the name of the property, that contains grouped entries. \n     * \n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example groupName(\"details\")\n     */\n\n\n    this.groupName = function (value) {\n      this.description.groupName = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the pattern that describes how to group entries. \n     * \n     * \"groupName\" defines the name of this group.\n     * A pattern may contain variables in double curly brackets {{variable}}.\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example groupPattern(\"{{type}}-{{category}}\")\n     */\n\n\n    this.groupPattern = function (value) {\n      this.description.groupPattern = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the pattern that describes where the group should be moved to. \n     * \n     * Default=\"\"=Group will not be moved.\n     * A pattern may contain variables in double curly brackets {{variable}}.\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example groupDestinationPattern(\"main-{{category}}\")\n     */\n\n\n    this.groupDestinationPattern = function (value) {\n      this.description.groupDestinationPattern = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Sets the name of the group when it had been moved to the destination.\n     * \n     * The default value is the groupName, which will be used when the value is not valid (null or empty)\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example groupDestinationPattern(\"options\")\n     */\n\n\n    this.groupDestinationName = function (value) {\n      this.description.groupDestinationName = withDefault(value, this.description.groupName);\n      return this;\n    };\n    /**\n     * Sets the pattern to be used to remove duplicate entries. \n     * \n     * A pattern may contain variables in double curly brackets {{variable}}.\n     * A pattern may contain variables in double curly brackets {{variable}}.\n     * @function\n     * @param {String} [value=\"\"]\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     * @example deduplicationPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}--{{fieldName}}\")\n     */\n\n\n    this.deduplicationPattern = function (value) {\n      this.description.deduplicationPattern = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Finalizes the settings and builds the  PropertyStructureDescription.\n     * @function\n     * @returns {module:datarestructor.PropertyStructureDescription}\n     */\n\n\n    this.build = function () {\n      this.description.matchesPropertyName = createFunctionMatchesPropertyName(this.description);\n\n      if (this.description.getDisplayNameForPropertyName == null) {\n        this.displayPropertyName(\"\");\n      }\n\n      if (this.description.getFieldNameForPropertyName == null) {\n        this.fieldName(\"\");\n      }\n\n      if (this.description.groupDestinationName == null) {\n        this.groupDestinationName(\"\");\n      }\n\n      return this.description;\n    };\n  }\n\n  function createNameExtractFunction(value, description) {\n    if (isSpecifiedString(value)) {\n      return function () {\n        return value;\n      };\n    }\n\n    if (description.propertyPatternTemplateMode) {\n      var patternToMatch = description.propertyPattern; // closure (closed over) parameter\n\n      return extractNameUsingTemplatePattern(patternToMatch);\n    }\n\n    return extractNameUsingRightMostPropertyNameElement();\n  }\n\n  function createFunctionMatchesPropertyName(description) {\n    var propertyPatternToMatch = description.propertyPattern; // closure (closed over) parameter\n\n    if (!isSpecifiedString(propertyPatternToMatch)) {\n      return function () {\n        return false; // Without a propertyPattern, no property will match (deactivated mark/identify).\n      };\n    }\n\n    if (description.propertyPatternTemplateMode) {\n      return function (propertyNameWithoutArrayIndices) {\n        return templateModePatternRegexForPattern(propertyPatternToMatch).exec(propertyNameWithoutArrayIndices) != null;\n      };\n    }\n\n    return function (propertyNameWithoutArrayIndices) {\n      return propertyNameWithoutArrayIndices === propertyPatternToMatch;\n    };\n  }\n\n  function rightMostPropertyNameElement(propertyName) {\n    var regularExpression = new RegExp(\"(\\\\w+)$\", \"gi\");\n    var match = propertyName.match(regularExpression);\n\n    if (match != null) {\n      return match[0];\n    }\n\n    return propertyName;\n  }\n\n  function upperCaseFirstLetter(value) {\n    if (value.length > 1) {\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n\n    return value;\n  }\n\n  function upperCaseFirstLetterForFunction(nameExtractFunction) {\n    return function (propertyName) {\n      return upperCaseFirstLetter(nameExtractFunction(propertyName));\n    };\n  }\n\n  function removeArrayValuePropertyPostfixFunction(nameExtractFunction) {\n    return function (propertyName) {\n      var name = nameExtractFunction(propertyName);\n      name = name != null ? name : \"\";\n      return name.replace(\"_comma_separated_values\", \"\");\n    };\n  }\n\n  function extractNameUsingTemplatePattern(propertyPattern) {\n    return function (propertyName) {\n      var regex = templateModePatternRegexForPatternAndVariable(propertyPattern, \"{{fieldName}}\");\n      var match = regex.exec(propertyName);\n\n      if (match && match[1] != \"\") {\n        return match[1];\n      }\n\n      return rightMostPropertyNameElement(propertyName);\n    };\n  }\n\n  function extractNameUsingRightMostPropertyNameElement() {\n    return function (propertyName) {\n      return rightMostPropertyNameElement(propertyName);\n    };\n  }\n\n  function templateModePatternRegexForPattern(propertyPatternToUse) {\n    var placeholderInDoubleCurlyBracketsRegEx = new RegExp(\"\\\\\\\\\\\\{\\\\\\\\\\\\{[-\\\\w]+\\\\\\\\\\\\}\\\\\\\\\\\\}\", \"gi\");\n    return templateModePatternRegexForPatternAndVariable(propertyPatternToUse, placeholderInDoubleCurlyBracketsRegEx);\n  }\n\n  function templateModePatternRegexForPatternAndVariable(propertyPatternToUse, variablePattern) {\n    var pattern = escapeCharsForRegEx(propertyPatternToUse);\n\n    if (typeof variablePattern === \"string\") {\n      variablePattern = escapeCharsForRegEx(variablePattern);\n    }\n\n    pattern = pattern.replace(variablePattern, \"([-\\\\w]+)\");\n    pattern = \"^\" + pattern;\n    return new RegExp(pattern, \"i\");\n  }\n\n  function escapeCharsForRegEx(characters) {\n    var nonWordCharactersRegEx = new RegExp(\"([^-\\\\w])\", \"gi\");\n    return characters.replace(nonWordCharactersRegEx, \"\\\\$1\");\n  }\n\n  function withDefault(value, defaultValue) {\n    return isSpecifiedString(value) ? value : defaultValue;\n  }\n\n  function isSpecifiedString(value) {\n    return typeof value === \"string\" && value != null && value != \"\";\n  }\n\n  return PropertyStructureDescription;\n}();\n/**\n * Adds a group item/entry to the {@link module:datarestructor.DescribedEntry}.\n * \n * @callback module:datarestructor.addGroupEntryFunction\n * @param {String} groupName name of the group that should be added\n * @param {module:datarestructor.DescribedEntry} describedEntry entry that should be added to the group\n */\n\n/**\n * Adds some group items/entries to the {@link module:datarestructor.DescribedEntry}.\n * \n * @callback module:datarestructor.addGroupEntriesFunction\n * @param {String} groupName name of the group that should be added\n * @param {module:datarestructor.DescribedEntry[]} describedEntry entries that should be added to the group\n */\n\n/**\n * @typedef {Object} module:datarestructor.DescribedEntry\n * @property {string} category - category of the result from the PropertyStructureDescription using a short name or e.g. a symbol character\n * @property {string} type - type of the result from PropertyStructureDescription\n * @property {string} [abbreviation=\"\"] - one optional character, a symbol character or a short abbreviation of the category\n * @property {string} [image=\"\"] - one optional path to an image resource\n * @property {string} index - array of numbers containing the split index. Example: \"responses[2].hits.hits[4]._source.name\" leads to an array with the two elements: [2,4]\n * @property {string} displayName - display name extracted from the point separated hierarchical property name, e.g. \"Name\"\n * @property {string} fieldName - field name extracted from the point separated hierarchical property name, e.g. \"name\"\n * @property {string} value - content of the field\n * @property {string[]} groupNames - array of names of all dynamically added properties representing groups\n * @property {module:datarestructor.addGroupEntryFunction} addGroupEntry - function, that adds an entry to the given group. If the group does not exist, it will be created.\n * @property {module:datarestructor.addGroupEntriesFunction} addGroupEntries - function, that adds entries to the given group. If the group does not exist, it will be created.\n * @property {boolean} _isMatchingIndex - true, when _identifier.index matches the described \"indexStartsWith\"\n * @property {Object} _identifier - internal structure for identifier. Avoid using it outside since it may change.\n * @property {string} _identifier.index - array indices in hierarchical order separated by points, e.g. \"0.0\"\n * @property {string} _identifier.value - the (single) value of the \"flattened\" property, e.g. \"Smith\"\n * @property {string} _identifier.propertyNameWithArrayIndices - the \"original\" flattened property name in hierarchical order separated by points, e.g. \"responses[0].hits.hits[0]._source.name\"\n * @property {string} _identifier.propertyNameWithoutArrayIndices - same as propertyNamesWithArrayIndices but without array indices, e.g. \"responses.hits.hits._source.name\"\n * @property {string} _identifier.groupId - Contains the resolved groupPattern from the PropertyStructureDescription. Entries with the same id will be grouped into the \"groupName\" of the PropertyStructureDescription.\n * @property {string} _identifier.groupDestinationId - Contains the resolved groupDestinationPattern from the PropertyStructureDescription. Entries with this id will be moved to the given destination group.\n * @property {string} _identifier.deduplicationId - Contains the resolved deduplicationPattern from the PropertyStructureDescription. Entries with the same id will be considered to be a duplicate and hence removed.\n * @property {Object} _description - PropertyStructureDescription for internal use. Avoid using it outside since it may change.\n */\n\n/**\n * Returns a field value of the given {@link module:datarestructor.DescribedEntry}.\n * \n * @callback module:datarestructor.stringFieldOfDescribedEntryFunction\n * @param {module:datarestructor.DescribedEntry} entry described entry that contains the field that should be returned\n * @returns {String} field value \n */\n\n\ndatarestructor.DescribedEntryCreator = function () {\n  \"use strict\";\n\n  var removeArrayBracketsRegEx = new RegExp(\"\\\\[\\\\d+\\\\]\", \"gi\");\n  /**\n   * Creates a {@link module:datarestructor.DescribedEntry}.\n   * @constructs DescribedEntryCreator\n   * @alias module:datarestructor.DescribedEntryCreator\n   */\n\n  function DescribedEntry(entry, description) {\n    var indices = indicesOf(entry.name);\n    var propertyNameWithoutArrayIndices = entry.name.replace(removeArrayBracketsRegEx, \"\");\n    var templateResolver = new template_resolver.Resolver(this);\n    this.category = description.category;\n    this.type = description.type;\n    this.abbreviation = description.abbreviation;\n    this.image = description.image;\n    /**\n     * Array of numbers containing the split index.\n     * Example: \"responses[2].hits.hits[4]._source.name\" leads to an array with two elements: [2,4]\n     * This is the public version of the internal variable _identifier.index, which contains in contrast all index elements in one point separated string (e.g. \"2.4\").\n     * @type {number[]}\n     */\n\n    this.index = indices.numberArray;\n    this.displayName = description.getDisplayNameForPropertyName(propertyNameWithoutArrayIndices);\n    this.fieldName = description.getFieldNameForPropertyName(propertyNameWithoutArrayIndices);\n    this.value = entry.value;\n    this.groupNames = [];\n    this._isMatchingIndex = indices.pointDelimited.indexOf(description.indexStartsWith) == 0;\n    this._description = description;\n    this._identifier = {\n      index: indices.pointDelimited,\n      propertyNameWithArrayIndices: entry.name,\n      propertyNameWithoutArrayIndices: propertyNameWithoutArrayIndices,\n      groupId: \"\",\n      groupDestinationId: \"\",\n      deduplicationId: \"\"\n    };\n    this._identifier.groupId = templateResolver.replaceResolvableFields(description.groupPattern, templateResolver.resolvableFieldsOfAll(this, this._description, this._identifier));\n    this._identifier.groupDestinationId = templateResolver.replaceResolvableFields(description.groupDestinationPattern, templateResolver.resolvableFieldsOfAll(this, this._description, this._identifier));\n    this._identifier.deduplicationId = templateResolver.replaceResolvableFields(description.deduplicationPattern, templateResolver.resolvableFieldsOfAll(this, this._description, this._identifier));\n    /**\n     * Adds an entry to the given group. If the group does not exist, it will be created.\n     * @param {String} groupName name of the group that should be added\n     * @param {module:datarestructor.DescribedEntry} describedEntry entry that should be added to the group\n     */\n\n    this.addGroupEntry = function (groupName, describedEntry) {\n      this.addGroupEntries(groupName, [describedEntry]);\n    };\n    /**\n     * Adds entries to the given group. If the group does not exist, it will be created.\n     * @param {String} groupName\n     * @param {module:datarestructor.DescribedEntry[]} describedEntries\n     */\n\n\n    this.addGroupEntries = function (groupName, describedEntries) {\n      if (!this[groupName]) {\n        this.groupNames.push(groupName);\n        this[groupName] = [];\n      }\n\n      var index;\n      var describedEntry;\n\n      for (index = 0; index < describedEntries.length; index += 1) {\n        describedEntry = describedEntries[index];\n        this[groupName].push(describedEntry);\n      }\n    };\n  }\n  /**\n   * @typedef {Object} module:datarestructor.ExtractedIndices\n   * @property {string} pointDelimited - bracket indices separated by points\n   * @property {number[]} numberArray as array of numbers\n   */\n\n  /**\n   * Returns \"1.12.123\" and [1,12,123] for \"results[1].hits.hits[12].aggregates[123]\".\n   *\n   * @param {String} fullPropertyName\n   * @return {module:datarestructor.ExtractedIndices} extracted indices in different representations\n   * @protected\n   * @memberof module:datarestructor.DescribedEntryCreator\n   */\n\n\n  function indicesOf(fullPropertyName) {\n    var arrayBracketsRegEx = new RegExp(\"\\\\[(\\\\d+)\\\\]\", \"gi\");\n    return indicesOfWithRegex(fullPropertyName, arrayBracketsRegEx);\n  }\n  /**\n   * Returns \"1.12.123\" and [1,12,123] for \"results[1].hits.hits[12].aggregates[123]\".\n   *\n   * @param {string} fullPropertyName\n   * @param {RegExp} regexWithOneNumberGroup\n   * @return {module:datarestructor.ExtractedIndices} extracted indices in different representations\n   * @protected\n   * @memberof module:datarestructor.DescribedEntryCreator\n   */\n\n\n  function indicesOfWithRegex(fullPropertyName, regexWithOneNumberGroup) {\n    var pointDelimited = \"\";\n    var numberArray = [];\n    var match;\n\n    do {\n      match = regexWithOneNumberGroup.exec(fullPropertyName);\n\n      if (match) {\n        if (pointDelimited.length > 0) {\n          pointDelimited += \".\";\n        }\n\n        pointDelimited += match[1];\n        numberArray.push(parseInt(match[1]));\n      }\n    } while (match);\n\n    return {\n      pointDelimited: pointDelimited,\n      numberArray: numberArray\n    };\n  }\n\n  return DescribedEntry;\n}();\n/**\n * @typedef {Object} module:datarestructor.TransformConfig\n * @property {boolean} debugMode enables/disables detailed logging\n * @property {number} [maxRecursionDepth=8] Maximum recursion depth\n * @property {number} [removeDuplicationAboveRecursionDepth=1]  Duplications will be removed above the given recursion depth value and remain unchanged below it.\n */\n\n\ndatarestructor.Transform = function () {\n  \"use strict\";\n  /**\n   * Main class for the data transformation.\n   * @param {module:datarestructor.PropertyStructureDescription[]} descriptions\n   * @constructs Transform\n   * @alias module:datarestructor.Transform\n   */\n\n  function Transform(descriptions) {\n    /**\n     * Descriptions of the input data that define the behaviour of the transformation.\n     * @type {module:datarestructor.DescribedEntry[]}\n     */\n    this.descriptions = descriptions;\n    /**\n     * Configuration for the transformation.\n     * @protected\n     * @type {module:datarestructor.TransformConfig}\n     */\n\n    this.config = {\n      /**\n       * Debug mode switch, that enables/disables detailed logging.\n       * @protected\n       * @type {boolean}\n       */\n      debugMode: false,\n\n      /**\n       * Maximum recursion depth. Defaults to 8.\n       * @protected\n       * @type {number}\n       */\n      maxRecursionDepth: 8,\n\n      /**\n       * Duplications will be removed above the given recursion depth and remain below it.\n       * Defaults to 1.\n       *\n       * Since fields can contain groups of fields that can contain groups of fields..., cyclic\n       * data structures are possible by nature and will lead to duplications. Some of them\n       * might be intended e.g. to take one (sub-)field with all (duplicated) groups.\n       * To restrict duplications and improve performance it is beneficial to define a\n       * recursion depth, above which further duplication won't be used and should be removed/avoided.\n       *\n       * @protected\n       * @type {number}\n       */\n      removeDuplicationAboveRecursionDepth: 1\n    };\n    /**\n     * Enables debug mode. Logs additional information.\n     * @returns {module:datarestructor.Transform}\n     */\n\n    this.enableDebugMode = function () {\n      this.config.debugMode = true;\n      return this;\n    };\n    /**\n     * Sets the maximum recursion depth. Defaults to 8 if not set.\n     * @param {number} value non negative number.\n     * @returns {module:datarestructor.Transform}\n     */\n\n\n    this.setMaxRecursionDepth = function (value) {\n      if (typeof value !== \"number\" || value < 0) {\n        throw \"Invalid max recursion depth value: \" + value;\n      }\n\n      this.config.maxRecursionDepth = value;\n      return this;\n    };\n    /**\n     * Sets the recursion depth above which duplication will be removed. Duplications below it remain unchanged.\n     * Defaults to 1.\n     *\n     * Since fields can contain groups of fields that can contain groups of fields..., cyclic\n     * data structures are possible by nature and will lead to duplications. Some of them\n     * might be intended e.g. to take one (sub-)field with all (duplicated) groups.\n     * To restrict duplications and improve performance it is beneficial to define a\n     * recursion depth, above which further duplication won't be used and should be removed/avoided.\n     *\n     * @param {number} value non negative number.\n     * @returns {module:datarestructor.Transform}\n     */\n\n\n    this.setRemoveDuplicationAboveRecursionDepth = function (value) {\n      if (typeof value !== \"number\" || value < 0) {\n        throw \"Invalid remove duplications above recursion depth value: \" + value;\n      }\n\n      this.config.removeDuplicationAboveRecursionDepth = value;\n      return this;\n    };\n    /**\n     * \"Assembly line\", that takes the (pared JSON) data and processes it using all given descriptions in their given order.\n     * @param {object} data - parsed JSON data or any other data object\n     * @returns {module:datarestructor.DescribedEntry[]}\n     * @example\n     * var allDescriptions = [];\n     * allDescriptions.push(summariesDescription());\n     * allDescriptions.push(detailsDescription());\n     * var result = new datarestructor.Transform(allDescriptions).processJson(jsonData);\n     */\n\n\n    this.processJson = function (data) {\n      return processJsonUsingDescriptions(data, this.descriptions, this.config);\n    };\n  }\n  /**\n   * \"Assembly line\", that takes the jsonData and processes it using all given descriptions in their given order.\n   * @param {object} jsonData parsed JSON data or any other data object\n   * @param {module:datarestructor.PropertyStructureDescription[]} descriptions - already grouped entries\n   * @param {module:datarestructor.TransformConfig} config configuration for the data transformation\n   * @returns {module:datarestructor.DescribedEntry[]}\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function processJsonUsingDescriptions(jsonData, descriptions, config) {\n    // \"Flatten\" the hierarchical input json to an array of property names (point separated \"folders\") and values.\n    var processedData = internal_object_tools.flattenToArray(jsonData); // Fill in properties ending with the name \"_comma_separated_values\" for array values to make it easier to display them.\n\n    processedData = fillInArrayValues(processedData);\n\n    if (config.debugMode) {\n      console.log(\"flattened data with array values:\");\n      console.log(processedData);\n    } // Mark, identify and harmonize the flattened data by applying one description after another in their given order.\n\n\n    var describedData = [];\n    var descriptionIndex, description, dataWithDescription;\n\n    for (descriptionIndex = 0; descriptionIndex < descriptions.length; descriptionIndex += 1) {\n      description = descriptions[descriptionIndex]; // Filter all entries that match the current description and enrich them with it\n\n      dataWithDescription = extractEntriesByDescription(processedData, description); // Remove duplicate entries where a deduplicationPattern is described\n\n      describedData = deduplicateFlattenedData(describedData, dataWithDescription);\n    }\n\n    processedData = describedData;\n\n    if (config.debugMode) {\n      console.log(\"describedData data:\");\n      console.log(processedData);\n    } // Group entries where a groupPattern is described\n\n\n    processedData = groupFlattenedData(processedData);\n\n    if (config.debugMode) {\n      console.log(\"grouped describedData data:\");\n      console.log(processedData);\n    } // Move group entries where a groupDestinationPattern is described\n\n\n    processedData = applyGroupDestinationPattern(processedData);\n\n    if (config.debugMode) {\n      console.log(\"moved grouped describedData data:\");\n      console.log(processedData);\n    } // Turns the grouped object back into an array of DescribedEntry-Objects\n\n\n    processedData = propertiesAsArray(processedData); // Converts the internal described entries  into described fields\n\n    processedData = toDescribedFields(processedData, config);\n\n    if (config.debugMode) {\n      console.log(\"transformed result:\");\n      console.log(processedData);\n    }\n\n    return processedData;\n  }\n  /**\n   * Takes two arrays of objects, e.g. [{id: B, value: 2},{id: C, value: 3}]\n   * and [{id: A, value: 1},{id: B, value: 4}] and merges them into one:\n   * [{id: C, value: 3},{id: A, value: 1},{id: B, value: 4}]\n   *\n   * Entries with the same id (\"duplicates\") will be overwritten.\n   * Only the last element with the same id remains. The order is\n   * determined by the order of the array elements, whereas the first\n   * array comes before the second one. This means, that entries with the\n   * same id in the second array overwrite entries in the first array,\n   * and entries that occur later in the array overwrite earlier ones,\n   * if they have the same id.\n   *\n   * The id is extracted from every element using the given function.\n   *\n   * @param {module:datarestructor.DescribedEntry[]} entries\n   * @param {module:datarestructor.DescribedEntry[]} entriesToMerge\n   * @param {module:datarestructor.stringFieldOfDescribedEntryFunction} idOfElementFunction returns the id of an DescribedEntry\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function mergeFlattenedData(entries, entriesToMerge, idOfElementFunction) {\n    var entriesToMergeById = asIdBasedObject(entriesToMerge, idOfElementFunction);\n    var merged = [];\n    var index, entry, id;\n\n    for (index = 0; index < entries.length; index += 1) {\n      entry = entries[index];\n      id = idOfElementFunction(entry);\n\n      if (id == null || id === \"\" || entriesToMergeById[id] == null) {\n        merged.push(entry);\n      }\n    }\n\n    for (index = 0; index < entriesToMerge.length; index += 1) {\n      entry = entriesToMerge[index];\n      merged.push(entry);\n    }\n\n    return merged;\n  }\n  /**\n   * Takes two arrays of objects, e.g. [{id: B, value: 2},{id: C, value: 3}]\n   * and [{id: A, value: 1},{id: B, value: 4}] and merges them into one:\n   * [{id: C, value: 3},{id: A, value: 1},{id: B, value: 4}]\n   *\n   * Entries with the same id (\"duplicates\") will be overwritten.\n   * Only the last element with the same id remains. The order is\n   * determined by the order of the array elements, whereas the first\n   * array comes before the second one. This means, that entries with the\n   * same id in the second array overwrite entries in the first array,\n   * and entries occurring later in the array overwrite earlier ones,\n   * if they have the same id.\n   *\n   * \"entriesToMerge\" will be returned directly, if \"entries\" is null or empty.\n   *\n   * The id is extracted from every element using their deduplication pattern (if available).\n   *\n   * @param {module:datarestructor.DescribedEntry[]} entries\n   * @param {module:datarestructor.DescribedEntry[]} entriesToMerge\n   * @param {module:datarestructor.stringFieldOfDescribedEntryFunction} idOfElementFunction returns the id of an DescribedEntry\n   * @see mergeFlattenedData\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function deduplicateFlattenedData(entries, entriesToMerge) {\n    if (entries == null || entries.length == 0) {\n      return entriesToMerge;\n    }\n\n    var idOfElementFunction = function (entry) {\n      return entry._identifier.deduplicationId;\n    };\n\n    return mergeFlattenedData(entries, entriesToMerge, idOfElementFunction);\n  }\n  /**\n   * Converts the given elements to an object, that provides these\n   * entries by their id. For example, [{id: A, value: 1}] becomes\n   * result['A'] = 1.\n   * @param {module:datarestructor.DescribedEntry[]} elements of DescribedEntry elements\n   * @param {module:datarestructor.stringFieldOfDescribedEntryFunction} idOfElementFunction returns the id of an DescribedEntry\n   * @return {module:datarestructor.DescribedEntry[] entries indexed by id\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function asIdBasedObject(elements, idOfElementFunction) {\n    var idIndexedObject = new Object();\n\n    for (var index = 0; index < elements.length; index++) {\n      var element = elements[index];\n      idIndexedObject[idOfElementFunction(element)] = element;\n    }\n\n    return idIndexedObject;\n  }\n  /**\n   * Converts the given elements into an object, that provides these\n   * entries by their id (determined by the entry's groupPattern).\n   * For example, [{id: A, value: 1}] becomes result['A'] = 1.\n   *\n   * Furthermore, this function creates a group property (determined by the entry's groupName)\n   * and collects all related elements (specified by their group pattern) in it.\n   *\n   * @param {module:datarestructor.DescribedEntry[]} elements of DescribedEntry elements\n   * @return {module:datarestructor.DescribedEntry[] entries indexed by id\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function groupFlattenedData(flattenedData) {\n    return groupById(flattenedData, function (entry) {\n      return entry._identifier.groupId;\n    }, function (entry) {\n      return entry._description.groupName;\n    });\n  }\n  /**\n   * Converts the given elements into an object, that provides these\n   * entries by their id. For example, [{id: A, value: 1}] becomes\n   * result['A'] = 1. Furthermore, this function creates a group property (with the name )\n   * and collects all related elements (specified by their group pattern) in it.\n   *\n   * @param {module:datarestructor.DescribedEntry[]} elements of DescribedEntry elements\n   * @param {module:datarestructor.stringFieldOfDescribedEntryFunction} groupNameOfElementFunction function, that returns the name of the group property that will be created inside the \"main\" element.\n   * @param {module:datarestructor.stringFieldOfDescribedEntryFunction} groupIdOfElementFunction returns the group id of an DescribedEntry\n   * @return {module:datarestructor.DescribedEntry[] entries indexed by id\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function groupById(elements, groupIdOfElementFunction, groupNameOfElementFunction) {\n    var groupedResult = new Object();\n\n    for (var index = 0; index < elements.length; index++) {\n      var element = elements[index];\n      var groupId = groupIdOfElementFunction(element);\n\n      if (groupId === \"\") {\n        continue;\n      }\n\n      var groupName = groupNameOfElementFunction(element);\n\n      if (groupName == null || groupName === \"\") {\n        continue;\n      }\n\n      if (!groupedResult[groupId]) {\n        groupedResult[groupId] = element;\n      }\n\n      groupedResult[groupId].addGroupEntry(groupName, element);\n    }\n\n    return groupedResult;\n  }\n  /**\n   * Extracts entries out of \"flattened\" JSON data and provides an array of objects.\n   * @param {Object[]} flattenedData - flattened json from search query result\n   * @param {string} flattenedData[].name - name of the property in hierarchical order separated by points\n   * @param {string} flattenedData[].value - value of the property as string\n   * @param {module:datarestructor.PropertyStructureDescription} - description of structure of the entries that should be extracted\n   * @return {module:datarestructor.DescribedEntry[]}\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function extractEntriesByDescription(flattenedData, description) {\n    var removeArrayBracketsRegEx = new RegExp(\"\\\\[\\\\d+\\\\]\", \"gi\");\n    var filtered = [];\n    flattenedData.filter(function (entry) {\n      var propertyNameWithoutArrayIndices = entry.name.replace(removeArrayBracketsRegEx, \"\");\n\n      if (description.matchesPropertyName(propertyNameWithoutArrayIndices)) {\n        var describedEntry = new datarestructor.DescribedEntryCreator(entry, description);\n\n        if (describedEntry._isMatchingIndex) {\n          filtered.push(describedEntry);\n        }\n      }\n    });\n    return filtered;\n  }\n  /**\n   * Takes already grouped {@link module:datarestructor.DescribedEntry} objects and\n   * uses their \"_identifier.groupDestinationId\" (if exists)\n   * to move groups to the given destination.\n   *\n   * This is useful, if separately described groups like \"summary\" and \"detail\" should be put together,\n   * so that every summery contains a group with the regarding details.\n   *\n   * @param {module:datarestructor.DescribedEntry[]} groupedObject - already grouped entries\n   * @return {module:datarestructor.DescribedEntry[]}\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function applyGroupDestinationPattern(groupedObject) {\n    var keys = Object.keys(groupedObject);\n    var keysToDelete = [];\n\n    for (var index = 0; index < keys.length; index++) {\n      var key = keys[index];\n      var entry = groupedObject[key];\n\n      if (entry._description.groupDestinationPattern != \"\") {\n        var destinationKey = entry._identifier.groupDestinationId;\n\n        if (groupedObject[destinationKey] != null) {\n          var newGroup = entry[entry._description.groupName];\n          groupedObject[destinationKey].addGroupEntries(entry._description.groupDestinationName, newGroup);\n          keysToDelete.push(key);\n        }\n      }\n    } // delete all moved entries that had been collected by their key\n\n\n    for (index = 0; index < keysToDelete.length; index += 1) {\n      var keyToDelete = keysToDelete[index];\n      delete groupedObject[keyToDelete];\n    }\n\n    return groupedObject;\n  }\n  /**\n   * Fills in extra \"_comma_separated_values\" properties into the flattened data\n   * for properties that end with an array. E.g. response.hits.hits.tags[0]=\"active\" and response.hits.hits.tags[0]=\"ready\"\n   * will lead to the extra element \"response.hits.hits.tags_comma_separated_values=\"active, ready\".\n   *\n   * @return flattened data with filled in \"_comma_separated_values\" properties\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function fillInArrayValues(flattenedData) {\n    var trailingArrayIndexRegEx = new RegExp(\"\\\\[\\\\d+\\\\]$\", \"gi\");\n    var result = [];\n    var lastArrayProperty = \"\";\n    var lastArrayPropertyValue = \"\";\n    flattenedData.filter(function (entry) {\n      if (!entry.name.match(trailingArrayIndexRegEx)) {\n        if (lastArrayProperty !== \"\") {\n          result.push({\n            name: lastArrayProperty + \"_comma_separated_values\",\n            value: lastArrayPropertyValue\n          });\n          lastArrayProperty = \"\";\n        }\n\n        result.push(entry);\n        return;\n      }\n\n      var propertyNameWithoutTrailingArrayIndex = entry.name.replace(trailingArrayIndexRegEx, \"\");\n\n      if (lastArrayProperty === propertyNameWithoutTrailingArrayIndex) {\n        lastArrayPropertyValue += \", \" + entry.value;\n      } else {\n        if (lastArrayProperty !== \"\") {\n          result.push({\n            name: lastArrayProperty + \"_comma_separated_values\",\n            value: lastArrayPropertyValue\n          });\n          lastArrayProperty = \"\";\n        }\n\n        lastArrayProperty = propertyNameWithoutTrailingArrayIndex;\n        lastArrayPropertyValue = entry.value;\n      }\n\n      result.push(entry);\n    });\n    return result;\n  }\n\n  function propertiesAsArray(groupedData) {\n    var result = [];\n    var propertyNames = Object.keys(groupedData);\n\n    for (var propertyIndex = 0; propertyIndex < propertyNames.length; propertyIndex++) {\n      var propertyName = propertyNames[propertyIndex];\n      var propertyValue = groupedData[propertyName];\n      result.push(propertyValue);\n    }\n\n    return result;\n  }\n  /**\n   * Converts described entries (internal data structure) to described fields (external data structure).\n   * Since the structure of a described field is hierarchical, every field needs to be converted\n   * in a recursive manner. The maximum recursion depth is taken as the second parameter.\n   * @param {module:datarestructor.DescribedEntry[]} describedEntries\n   * @param {module:datarestructor.TransformConfig} config configuration for the data transformation\n   * @returns {module:described_field.DescribedDataField[]}\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function toDescribedFields(describedEntries, config) {\n    var result = [];\n    var index;\n    var describedEntity;\n\n    for (index = 0; index < describedEntries.length; index += 1) {\n      describedEntity = describedEntries[index];\n      result.push(toDescribedField(describedEntity, 0, config));\n    }\n\n    return result;\n  }\n  /**\n   * Converts a internal described entry to a newly created public described field.\n   * Since the structure of a described field is hierarchical, this function is called recursively.\n   * Because the internal described entries may very likely contain cyclic references, the depth of recursion\n   * needs to be limited. Therefore, the current recursion depth is taken as second parameter\n   * and the maximum recursion depth is taken as third parameter.\n   * @param {module:datarestructor.DescribedEntry} entry the internal entry that will be converted\n   * @param {number} recursionDepth current hierarchy recursion depth\n   * @param {module:datarestructor.TransformConfig} config configuration for the data transformation\n   * @returns {module:described_field.DescribedDataField}\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function toDescribedField(entry, recursionDepth, config) {\n    var field = new described_field.DescribedDataFieldBuilder().category(entry.category).type(entry.type).abbreviation(entry.abbreviation).image(entry.image).index(entry.index).displayName(entry.displayName).fieldName(entry.fieldName).value(entry.value).build();\n\n    if (recursionDepth > config.maxRecursionDepth) {\n      return field;\n    }\n\n    var fieldGroups = new described_field.DescribedDataFieldGroup(field);\n    forEachGroupEntry(entry, function (groupName, groupEntry) {\n      if (groupEntry != entry || recursionDepth <= config.removeDuplicationAboveRecursionDepth) {\n        fieldGroups.addGroupEntry(groupName, toDescribedField(groupEntry, recursionDepth + 1, config));\n      } else {\n        if (config.debugMode) {\n          console.log(\"Removed duplicate field \" + groupEntry.fieldName + \" with value \" + groupEntry.value + \" of group \" + groupName + \" at recursion depth \" + recursionDepth);\n        }\n      }\n    });\n    return field;\n  }\n  /**\n   * Takes the full qualified original property name and extracts a simple name out of it.\n   *\n   * @callback module:datarestructor.onEntryFoundFunction\n   * @param {string} groupName name of the group where the entry had been found.\n   * @param {module:datarestructor.DescribedEntry} foundEntry the found entry itself.\n   */\n\n  /**\n   * Traverses through all groups and their entries and calls the given function on every found entry\n   * with the group name and the entry itself as parameters.\n   * @param {module:datarestructor.DescribedEntry} rootEntry\n   * @param {module:datarestructor.onEntryFoundFunction} onFoundEntry\n   * @protected\n   * @memberof module:datarestructor.Transform\n   */\n\n\n  function forEachGroupEntry(rootEntry, onFoundEntry) {\n    var groupIndex, entryIndex;\n    var groupName, entry;\n\n    for (groupIndex = 0; groupIndex < rootEntry.groupNames.length; groupIndex += 1) {\n      groupName = rootEntry.groupNames[groupIndex];\n\n      for (entryIndex = 0; entryIndex < rootEntry[groupName].length; entryIndex += 1) {\n        entry = rootEntry[groupName][entryIndex];\n        onFoundEntry(groupName, entry);\n      }\n    }\n  }\n\n  return Transform;\n}();\n/**\n * Main fassade for the data restructor as static function(s).\n * \n * @example \n * var allDescriptions = [];\n * allDescriptions.push(summariesDescription());\n * allDescriptions.push(detailsDescription());\n * var result = datarestructor.Restructor.processJsonUsingDescriptions(jsonData, allDescriptions);\n * @namespace module:datarestructor.Restructor\n */\n\n\ndatarestructor.Restructor = {};\n/**\n * Static fassade function for the \"Assembly line\", that takes the jsonData and processes it using all given descriptions in their given order.\n * @param {object} jsonData - parsed JSON data or any other data object\n * @param {module:datarestructor.PropertyStructureDescription[]} descriptions - already grouped entries\n * @param {boolean} debugMode - false=default=off, true=write additional logs for detailed debugging\n * @returns {module:datarestructor.DescribedEntry[]}\n * @memberof module:datarestructor.Restructor\n * @deprecated since v3.1.0, please use \"new datarestructor.Transform(descriptions).processJson(jsonData)\".\n */\n\ndatarestructor.Restructor.processJsonUsingDescriptions = function (jsonData, descriptions, debugMode) {\n  var restructor = new datarestructor.Transform(descriptions);\n\n  if (debugMode) {\n    restructor.enableDebugMode();\n  }\n\n  return restructor.processJson(jsonData);\n};\n},{\"../../lib/js/flattenToArray\":\"kBit\",\"../../src/js/templateResolver\":\"gEHB\",\"../../src/js/describedfield\":\"NvOR\"}]},{},[\"hflC\"], \"data_restructor_js\")","/**\n * @file restruct-data-client adapts the search result JSON from the server to the data structure needed by the search UI.\n * @version {@link https://github.com/JohT/search-menu-ui/releases/latest latest version}\n * @author JohT\n */\n\n \"use strict\";\n\nvar module = datarestructorInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction datarestructorInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n\n/**\n * Adapts the search result JSON from the server to the data structure needed by the search UI.\n * @module restruct\n */\n var restruct = module.exports={}; // Export module for npm...\n restruct.internalCreateIfNotExists = datarestructorInternalCreateIfNotExists;\n \nvar datarestructor = datarestructor || require(\"data-restructor/devdist/datarestructor\"); // supports vanilla js & npm\n\nrestruct.DataConverter = (function () {\n  /**\n   * Provides the data converter for the search. \n   * It uses \"datarestructor\" and acts as a delegating client in between.\n   * @constructs DataConverter\n   */\n  function DataConverter() {\n\n    /**\n     * Creates the data converter function with or without debugMode.\n     * @function\n     * @param {boolean} debugMode \n     * @returns data converter function\n     * @memberof DataConverter#\n     */\n    this.createDataConverter = function(debugMode) {\n      return function(jsonData) {\n        return restructJson(jsonData, debugMode);\n      };\n    };\n\n    /**\n     * @function\n     * @returns {PropertyStructureDescription}\n     * @memberof DataConverter#\n     */\n    this.getDescriptions = function() {\n      return getDescriptions();\n    };\n  }\n\n  function restructJson(jsonData, debugMode) {\n    if (debugMode) {\n      console.log(\"data before it gets restructured:\");\n      console.log(jsonData);\n    }\n    var transform = new datarestructor.Transform(getDescriptions()).setRemoveDuplicationAboveRecursionDepth(0).setMaxRecursionDepth(2);\n    if (debugMode) {\n      transform.enableDebugMode();\n    }\n    var restructured = transform.processJson(jsonData);\n    if (debugMode) {\n      console.log(\"restructured data:\");\n      console.log(JSON.stringify(restructured, null, 2));\n    }\n    return restructured;\n  }\n\n  function getDescriptions() {\n    var descriptions = [];\n    descriptions.push(summarizedAccountNumberDescription());\n    descriptions.push(summarizedAccountNameDescription());\n    descriptions.push(summarizedAccountTypeDescription());\n    \n    descriptions.push(detailsDescription());\n    descriptions.push(filtersDescription());\n\n    descriptions.push(sitesMainDescription());\n    descriptions.push(sitesOptionDefaultUrlPatternDescription());\n    descriptions.push(sitesOptionsSummaryDescription());\n    //descriptions.push(sitesOptionDetailsDescription()); //TODO could add details to filter options\n    descriptions.push(sitesOptionUrlPatternDescription());\n    return descriptions;\n  }\n\n  function summarizedAccountNumberDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"summary\")\n      .category(\"account\") \n      .abbreviation(\"&#x1F4B6;\") //banknote with euro sign\n      .indexStartsWith(\"0.\")\n      .propertyPatternEqualMode()\n      .propertyPattern(\"responses.hits.hits._source.accountnumber\")\n      .groupName(\"summaries\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .deduplicationPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}--{{fieldName}}\")\n      .build();\n  }\n\n  function summarizedAccountNameDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"summary\")\n      .category(\"account\") \n      .indexStartsWith(\"0.\")\n      .propertyPatternEqualMode()\n      .propertyPattern(\"responses.hits.hits._source.disposer\")\n      .groupName(\"summaries\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .groupDestinationPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .deduplicationPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}--{{fieldName}}\")\n      .build();\n  }\n\n  function summarizedAccountTypeDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"summary\")\n      .category(\"account\") \n      .indexStartsWith(\"0.\")\n      .propertyPatternEqualMode()\n      .propertyPattern(\"responses.hits.hits._source.businesstype\")\n      .groupName(\"summaries\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .groupDestinationPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .deduplicationPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}--{{fieldName}}\")\n      .build();\n  }\n\n  function detailsDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"detail\")\n      .category(\"account\")\n      .indexStartsWith(\"0.\")\n      .propertyPatternTemplateMode()\n      .propertyPattern(\"responses.hits.hits._source.{{fieldName}}\")\n      .groupName(\"details\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .groupDestinationPattern(\"{{category}}--summary--{{index[0]}}--{{index[1]}}\")\n      .build();\n  }\n\n  function filtersDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"filter\")\n      .category(\"account\")\n      .abbreviation(\"&#128206;\") //Paperclip symbol\n      .indexStartsWith(\"1.\")\n      .propertyPatternTemplateMode()\n      .propertyPattern(\"responses.aggregations.{{fieldName}}.buckets.key\")\n      .groupName(\"options\")\n      .groupPattern(\"{{index[0]}}--{{type}}--{{category}}--{{fieldName}}\")\n      .build();\n  }\n\n  function sitesMainDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"main\")\n      .category(\"account\") \n      .abbreviation(\"&#x261c;\") //finger left navigation symbol\n      .indexStartsWith(\"2.\")\n      .propertyPatternEqualMode()\n      .propertyPattern(\"responses.hits.hits._source.name\")\n      .displayPropertyName(\"Target\")\n      .groupName(\"default\")\n      .groupPattern(\"{{category}}--{{type}}\")\n      .build();\n  }\n\n  function sitesOptionDefaultUrlPatternDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"url\")\n      .category(\"account\")\n      .indexStartsWith(\"2.\")\n      .propertyPatternEqualMode()\n      .propertyPattern(\"responses.hits.hits._source.urltemplate\")\n      .groupName(\"urltemplate\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .groupDestinationPattern(\"{{category}}--main\")\n      .build();\n  }\n\n  function sitesOptionsSummaryDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"summary\")\n      .category(\"account\")\n      .indexStartsWith(\"3.\")\n      .propertyPatternEqualMode()\n      .propertyPattern(\"responses.hits.hits._source.name\")\n      .displayPropertyName(\"Target\")\n      .groupName(\"summaries\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .groupDestinationPattern(\"{{category}}--main\")\n      .groupDestinationName(\"options\")\n      .build();\n  }\n\n  // TODO could add details to filter/navigation options\n  // function sitesOptionDetailsDescription() {\n  //   return new datarestructor.PropertyStructureDescriptionBuilder()\n  //     .type(\"details\")\n  //     .category(\"account\")\n  //     .indexStartsWith(\"3.\")\n  //     .propertyPatternTemplateMode()\n  //     .propertyPattern(\"responses.hits.hits._source.{{fieldName}}\")\n  //     .groupName(\"details\")\n  //     .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n  //     .groupDestinationPattern(\"{{category}}--summary--{{index[0]}}--{{index[1]}}\")\n  //     .build();\n  // }\n\n  function sitesOptionUrlPatternDescription() {\n    return new datarestructor.PropertyStructureDescriptionBuilder()\n      .type(\"url\")\n      .category(\"account\")\n      .indexStartsWith(\"3.\")\n      .propertyPatternTemplateMode()\n      .propertyPattern(\"responses.hits.hits._source.urltemplate\")\n      .groupName(\"urltemplate\")\n      .groupPattern(\"{{category}}--{{type}}--{{index[0]}}--{{index[1]}}\")\n      .groupDestinationPattern(\"{{category}}--summary--{{index[0]}}--{{index[1]}}\")\n      .build();\n  }\n\n  return DataConverter;\n}());\n"],"names":["$e24d7b60828abdbaee8b1b607b83c7e3$var$httpSearchClient","$aff7e289376add1e06142f35db75bdd3$var$module","$aff7e289376add1e06142f35db75bdd3$var$xmlHttpRequest","exports","getXMLHttpRequest","XMLHttpRequest","request","status","e","console","log","ActiveXObject","Error","$a4642e25ca07425f9349bdd0d4f27f81$var$module","$a4642e25ca07425f9349bdd0d4f27f81$var$searchMenuServiceClient","$a4642e25ca07425f9349bdd0d4f27f81$var$xmlHttpRequest","$a4642e25ca07425f9349bdd0d4f27f81$var$datarestructorInternalCreateIfNotExists","objectToCheck","internalCreateIfNotExists","HttpSearchConfig","resolveTemplate","template","parameterSourceObject","debugMode","resolvedString","jsonSearchParameters","JSON","stringify","resolvedBody","resolveVariableInTemplate","object","fieldNameAndValueConsumer","index","fieldName","fieldNames","Object","keys","length","forEachFieldsIn","fieldValue","templateString","characters","nonWordCharactersRegEx","variableReplaceRegExp","RegExp","replace","this","config","searchUrlTemplate","searchMethod","searchContentType","searchBodyTemplate","resolveSearchUrl","searchParameters","resolveSearchBody","httpRequest","value","build","HttpClient","search","onJsonResultReceived","onSuccess","onFailure","resultText","httpStatus","error","searchUrl","searchBody","url","method","contentType","body","jsonResult","onreadystatechange","readyState","parse","responseText","open","setRequestHeader","send","httpRequestJson","createSearchFunction","$b4d6cccc664d531c9f82cd1bef91ded8$var$module","$e24d7b60828abdbaee8b1b607b83c7e3$var$searchMenuServiceClient","$b4d6cccc664d531c9f82cd1bef91ded8$var$eventtarget","getEventTarget","event","currentTarget","srcElement","$9df0344f4c911aa81503a89a9ae63f3e$var$module","$9df0344f4c911aa81503a89a9ae63f3e$var$selectionrange","moveCursorToEndOf","element","setSelectionRange","selectionStart","selectionEnd","createTextRange","range","collapse","moveEnd","moveStart","select","$5cc854876970482b06f94832c6e64904$var$module","$5cc854876970482b06f94832c6e64904$var$eventlistener","addEventListener","eventName","eventHandler","attachEvent","$bec6d6f54a95fd095f20409f868bb0b0$var$module","$bec6d6f54a95fd095f20409f868bb0b0$var$searchmenu","$bec6d6f54a95fd095f20409f868bb0b0$var$eventtarget","$bec6d6f54a95fd095f20409f868bb0b0$var$selectionrange","$bec6d6f54a95fd095f20409f868bb0b0$var$eventlistener","$bec6d6f54a95fd095f20409f868bb0b0$var$datarestructorInternalCreateIfNotExists","SearchViewDescriptionBuilder","withDefault","defaultValue","isSpecifiedString","defaultTemplate","defaultSummaryTemplate","defaultStyleClassTemplate","description","viewElementId","listParentElementId","listEntryElementIdPrefix","listEntryElementTag","listEntryTextTemplate","listEntrySummaryTemplate","listEntryStyleClassTemplate","isSelectableFilterOption","SearchMenuAPI","addEvent","removeClass","classToRemove","regex","className","triggerSearch","convertData","sourceData","addPredefinedParametersTo","onCreatedElement","navigateTo","destinationUrl","window","location","href","createdElementListeners","searchAreaElementId","inputElementId","searchTextParameterName","resultsView","detailView","filterOptionsView","filtersView","waitBeforeClose","waitBeforeSearch","waitBeforeMouseOver","searchService","service","dataConverter","converter","templateResolver","resolver","adder","setElementCreatedHandler","listener","addElementCreatedHandler","push","addFocusStyleClassOnEveryCreatedElement","focusStyleClassName","isParent","classToAdd","separator","addClass","id","view","ms","start","SearchMenuUI","addResult","entry","i","delayTime","listElementId","resultElementText","createListEntryInnerHtmlText","resultElement","createListEntryElement","resolveStyleClasses","forEachIdElementIncludingChildren","details","isMenuEntryWithFurtherDetails","onMenuEntrySelected","handleEventWithEntriesAndConfig","selectSearchResultToDisplayDetails","originalEvent","source","result","propertyNames","propertyIndex","propertyName","propertyValue","cloneObject","delayedHandlerTimer","setTimeout","preventEventHandling","clearTimeout","onMenuEntryChosen","category","selectedUrlTemplate","getPropertyValueWithUndefinedDefault","forEachListEntryElement","listElementHiddenFields","extractListElementIdProperties","hiddenFields","urlTemplate","elementCategory","hasClass","targetURL","options","isMenuEntryWithOptions","isMenuEntryWithDefault","entries","entryToAdd","equalMatcher","alreadyContainsEntryToAdd","insertAtBeginningIfMissing","equalProperties","filterElement","onSpaceKey","selectSearchResultToDisplayFilterOptions","addDefaultFilterOptionModificationHandler","createFilterOption","addMainMenuNavigationHandlers","existingObject","newObject","onArrowDownKey","handleEventWithConfig","focusNextSearchResult","onArrowUpKey","focusPreviousSearchResult","onEscapeKey","focusSearchInput","onArrowLeftKey","closeAssociatedSubMenus","onArrowRightKey","onEnterKey","onSubMenuEntrySelected","onFilterMenuEntryRemoved","key","keyCodeOf","onDeleteKey","onBackspaceKey","splittedId","split","extractedMainMenuType","extractedMainMenuIndex","parseInt","extractedType","extractedIndex","idWithoutIndex","substring","lastIndexOf","type","previousId","nextId","firstId","lastId","document","getElementById","parentElement","childNodes","mainMenuId","mainMenuIndex","hiddenFieldsId","isFirstElement","isSubMenu","subMenuId","typeName","replaceMainMenuIndex","newIndex","getNewIndexAfterRemovedMainMenuIndex","removedIndex","hiddenFieldsElement","hiddenFieldsJson","innerText","resultEntry","inputElement","blur","focus","preventDefaultEventHandling","hideSubMenus","focusFirstResult","selectedElement","firstResult","focusNextMenuEntry","menuEntryIdProperties","next","focusPreviousMenuEntry","previous","resultElementsCount","getListElementCountOfType","onMissingNext","menuEntry","onMissingPrevious","selectFilterOption","toggleFilterEntry","removeFilterElement","addFilterOptionModificationHandler","equalsMatcher","entryIndex","currentlySelected","selectedEntryHiddenFields","findSelectedEntry","returnToMainMenu","selectedEntryData","globalCategoryResult","existingElement","text","filterElements","filterElementId","filterCategory","isAlreadyExistingFilter","updatedText","innerHTML","listEntryElementFunction","listParentElement","selectSearchResultToDisplaySubMenu","subMenuView","elementId","node","cloneNode","replaceChild","cNode","parentNode","clearAllEntriesOfElementWithId","subMenuEntry","subMenuElement","subMenuIndex","subMenuEntryId","subMenuFirstEntry","divParentOfSelectedElement","parentThatMatches","tagName","subMenuViewElement","alignedSubMenuXPosition","offsetWidth","alignedSubMenuYPosition","selectedElementPosition","getBoundingClientRect","y","top","getYPositionOfElement","pageYOffset","compatMode","documentElement","scrollTop","getScrollY","style","left","showElement","subMenuEntryToExit","subMenuEntryToExitProperties","mainMenuEntryToSelect","parentWithShowClass","parent","hideElement","hideViewOf","inputevent","preventDefault","returnValue","classToToggle","indexOfRemovedElement","removeChild","forEachChildRecursively","removeChildElement","depth","maxDepth","callback","forEachEntryIn","array","listelementtype","firstListEntry","listElement","elementTag","createElement","tabIndex","createListElement","appendChild","summaries","resolvedClasses","hideMenu","hide","show","predicate","classToLookFor","indexOf","keyCode","currentSearchText","focusOutTimer","waitBeforeSearchTimer","newSearchText","searchText","jsonResults","displayResults","getSearchResults","updateSearch","searchareaElement","$e24d7b60828abdbaee8b1b607b83c7e3$var$searchmenu","parcelRequire","modules","cache","globalName","previousRequire","nodeRequire","require","newRequire","name","jumped","currentRequire","err","code","localRequire","resolve","x","module","Module","call","isParcelRequire","moduleName","bundle","register","mainExports","kBit","flattenToArray","data","maxRecursionDepth","recurse","cur","prop","Array","isArray","l","p","isEmpty","gEHB","templateResolverInternalCreateIfNotExists","template_resolver","internal_object_tools","Resolver","removeArrayBracketsRegEx","getPropertyNameInfos","fullPropertyName","positionOfRightMostSeparator","substr","propertyGroup","propertyGroupWithoutArrayIndices","group","groupWithoutArrayIndices","addToFilteredMapObject","elements","mapObject","filterMatchesFunction","sourceDataObject","replaceResolvableFields","map","propertyInfo","addFieldsPerGroup","resolvableFieldsOfAll","ignoreInternalFields","arguments","stringContainingVariables","resolvableFields","replaced","../../lib/js/flattenToArray","$e24d7b60828abdbaee8b1b607b83c7e3$var$template_resolver","NvOR","describedFieldInternalCreateIfNotExists","described_field","DescribedDataFieldBuilder","withDefaultString","withDefaultArray","describedField","abbreviation","image","groupNames","displayName","fromDescribedDataField","copyWithoutGroups","describedDataField","DescribedDataFieldGroup","dataField","addGroupEntry","groupName","addGroupEntries","describedFields","undefined","hflC","datarestructorInternalCreateIfNotExists","datarestructor","PropertyStructureDescriptionBuilder","createNameExtractFunction","propertyPatternTemplateMode","patternToMatch","propertyPattern","match","templateModePatternRegexForPatternAndVariable","exec","rightMostPropertyNameElement","regularExpression","propertyPatternToUse","variablePattern","pattern","escapeCharsForRegEx","indexStartsWith","groupPattern","groupDestinationPattern","groupDestinationName","deduplicationPattern","getDisplayNameForPropertyName","getFieldNameForPropertyName","matchesPropertyName","propertyPatternEqualMode","displayPropertyName","nameExtractFunction","charAt","toUpperCase","slice","upperCaseFirstLetter","upperCaseFirstLetterForFunction","propertyPatternToMatch","propertyNameWithoutArrayIndices","placeholderInDoubleCurlyBracketsRegEx","createFunctionMatchesPropertyName","DescribedEntryCreator","arrayBracketsRegEx","indices","regexWithOneNumberGroup","pointDelimited","numberArray","indicesOfWithRegex","_isMatchingIndex","_description","_identifier","propertyNameWithArrayIndices","groupId","groupDestinationId","deduplicationId","describedEntry","describedEntries","Transform","mergeFlattenedData","entriesToMerge","idOfElementFunction","entriesToMergeById","idIndexedObject","asIdBasedObject","merged","deduplicateFlattenedData","extractEntriesByDescription","flattenedData","filtered","filter","toDescribedField","recursionDepth","field","fieldGroups","rootEntry","onFoundEntry","groupIndex","forEachGroupEntry","groupEntry","removeDuplicationAboveRecursionDepth","descriptions","enableDebugMode","setMaxRecursionDepth","setRemoveDuplicationAboveRecursionDepth","processJson","jsonData","processedData","trailingArrayIndexRegEx","lastArrayProperty","lastArrayPropertyValue","propertyNameWithoutTrailingArrayIndex","fillInArrayValues","descriptionIndex","describedData","groupIdOfElementFunction","groupNameOfElementFunction","groupedResult","groupById","groupFlattenedData","groupedObject","keysToDelete","destinationKey","newGroup","applyGroupDestinationPattern","describedEntity","toDescribedFields","groupedData","propertiesAsArray","processJsonUsingDescriptions","Restructor","restructor","../../src/js/templateResolver","../../src/js/describedfield","$0d6a4c43af361229567048135f77b56e$var$module","$0d6a4c43af361229567048135f77b56e$var$restruct","$0d6a4c43af361229567048135f77b56e$var$datarestructor","$0d6a4c43af361229567048135f77b56e$var$datarestructorInternalCreateIfNotExists","DataConverter","getDescriptions","createDataConverter","transform","restructured","restructJson","$e24d7b60828abdbaee8b1b607b83c7e3$var$restruct","sourceObject","tenantnumber"],"version":3,"file":"search-binding.js.map"}
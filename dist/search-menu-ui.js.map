{"mappings":"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","sources":["src/js/ponyfills/eventCurrentTargetPonyfill.js","src/js/ponyfills/selectionRangePonyfill.js","src/js/ponyfills/addEventListenerPonyfill.js","src/js/search-menu-ui.js"],"sourcesContent":["\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @@namespace eventtarget\n */\nvar eventtarget = (module.exports = {}); // Fallback for vanilla js without modules\n\n/**\n * @returns {Element} target of the event\n * @memberof eventtarget\n */\neventtarget.getEventTarget = function (event) {\n  if (typeof event.currentTarget !== \"undefined\" && event.currentTarget != null) {\n    return event.currentTarget;\n  }\n  if (typeof event.srcElement !== \"undefined\" && event.srcElement != null) {\n    return event.srcElement;\n  } else {\n    throw new Error(\"Event doesn't contain bounded element: \" + event);\n  }\n};","\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @namespace selectionrange\n */\nvar selectionrange = (module.exports = {}); // Fallback for vanilla js without modules\n\nselectionrange.moveCursorToEndOf = function (element) {\n  if (typeof element.setSelectionRange === \"function\") {\n    element.setSelectionRange(element.value.length, element.value.length);\n  } else if (typeof element.selectionStart === \"number\" && typeof element.selectionEnd === \"number\") {\n    element.selectionStart = element.selectionEnd = element.value.length;\n  } else if (typeof element.createTextRange === \"function\") {\n    var range = element.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", element.value.length);\n    range.moveStart(\"character\", element.value.length);\n    range.select();\n  }\n};","\"use strict\";\n\nvar module = module || {}; // Fallback for vanilla js without modules\n/**\n * @@namespace eventlistener\n */\nvar eventlistener = (module.exports = {}); // Fallback for vanilla js without modules\n\n/**\n * Adds an event listener/hander using \"addEventListener\" or whatever method the browser supports.\n * @param {String} eventName\n * @param {Element} element\n * @param {*} eventHandler\n * @memberof addeventlistener\n */\n eventlistener.addEventListener = function (eventName, element, eventHandler) {\n  if (element.addEventListener) {\n    element.addEventListener(eventName, eventHandler, false);\n  } else if (element.attachEvent) {\n    element.attachEvent(\"on\" + eventName, eventHandler);\n  } else {\n    element[\"on\" + eventName] = eventHandler;\n  }\n};\n","/**\n * @file Search UI written in vanilla JavaScript. Menu structure for results. Filters are integrated as search results.\n * @version {@link https://github.com/JohT/search-menu-ui/releases/latest latest version}\n * @author JohT\n */\n\nvar module = datarestructorInternalCreateIfNotExists(module); // Fallback for vanilla js without modules\n\nfunction datarestructorInternalCreateIfNotExists(objectToCheck) {\n  return objectToCheck || {};\n}\n\n/**\n * Contains the main ui component of the search menu ui.\n * @module searchmenu\n */\n var searchmenu = module.exports={}; // Export module for npm...\n searchmenu.internalCreateIfNotExists = datarestructorInternalCreateIfNotExists;\n\nvar eventtarget = eventtarget || require(\"./ponyfills/eventCurrentTargetPonyfill\"); // supports vanilla js & npm\nvar selectionrange = selectionrange || require(\"./ponyfills/selectionRangePonyfill\"); // supports vanilla js & npm\nvar eventlistener = eventlistener || require(\"./ponyfills/addEventListenerPonyfill\"); // supports vanilla js & npm\n\n/**\n * @typedef {Object} module:searchmenu.SearchViewDescription Describes a part of the search view (e.g. search result details).\n * @property {string} viewElementId id of the element (e.g. \"div\"), that contains the view with all list elements and their parent.\n * @property {string} listParentElementId id of the element (e.g. \"ul\"), that contains all list entries and is located inside the view.\n * @property {string} listEntryElementIdPrefix id prefix (followed by \"--\" and the index number) for every list entry\n * @property {string} [listEntryElementTag=\"li\"] element tag for list entries. defaults to \"li\".\n * @property {string} [listEntryTextTemplate=\"{{displayName}}: {{value}}\"] template for the text of each list entry\n * @property {string} [listEntrySummaryTemplate=\"{{summaries[0].displayName}}: {{summaries[0].value}}\"] template for the text of each list entry, if the data group \"summary\" exists.\n * @property {string} [listEntryStyleClassTemplate=\"{{view.listEntryElementIdPrefix}} {{category}}\"] template for the style class of each list entry.\n * @property {boolean} [isSelectableFilterOption=false] Specifies, if the list entry can be selected as filter option\n */\n\nsearchmenu.SearchViewDescriptionBuilder = (function () {\n  \"use strict\";\n\n  /**\n   * Builds a {@link module:searchmenu.SearchViewDescription}, which describes a part of the search menu called \"view\".  \n   * Examples for views are: results, details, filters, filter options. There might be more in future.\n   * \n   * The description contains the id's of the html elements, that will be used as \"binding\", to\n   * add elements like results. The \"viewElementId\" is the main parent (may be a \"div\" tag) of all view elements,\n   * that contains the \"listParentElementId\", which is the parent of the list entries (may be a \"ul\" tag).\n   * \n   * The text content of each entry is described by the text templates. \n   * \n   * Furthermore, the css style class can be given as a template, \n   * so search result field values can be used as a part of the style class.\n   * \n   * @param {module:searchmenu.SearchViewDescription} template optional parameter that contains a template to clone\n   * @constructs SearchViewDescriptionBuilder\n   * @alias module:searchmenu.SearchViewDescriptionBuilder\n   */\n  function SearchViewDescription(template) {\n    var defaultTemplate = \"{{displayName}}: {{value}}\";\n    var defaultSummaryTemplate = \"{{summaries[0].displayName}}: {{summaries[0].value}}\";\n    var defaultStyleClassTemplate = \"{{view.listEntryElementIdPrefix}} {{category}}\";\n    var defaultTag = \"li\";\n    /**\n     * @type {module:searchmenu.SearchViewDescription}\n     * @protected\n     */\n    this.description = {\n      viewElementId: template ? template.viewElementId : \"\",\n      listParentElementId: template ? template.listParentElementId : \"\",\n      listEntryElementIdPrefix: template ? template.listEntryElementIdPrefix : \"\",\n      listEntryElementTag: template ? template.listEntryElementTag : defaultTag,\n      listEntryTextTemplate: template ? template.listEntryTextTemplate : defaultTemplate,\n      listEntrySummaryTemplate: template ? template.listEntrySummaryTemplate : defaultSummaryTemplate,\n      listEntryStyleClassTemplate: template ? template.listEntryStyleClassTemplate : defaultStyleClassTemplate,\n      isSelectableFilterOption: template ? template.isSelectableFilterOption : false\n    };\n    /**\n     * ID of the element (e.g. \"div\"), that contains the view with all list elements and their parent.\n     *\n     * @param {string} value view element ID.\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.viewElementId = function (value) {\n      this.description.viewElementId = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * ID of the element (e.g. \"ul\"), that contains all list entries and is located inside the view.\n     * @param {string} value parent element ID\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listParentElementId = function (value) {\n      this.description.listParentElementId = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * ID prefix (followed by \"--\" and the index number) for every list entry.\n     * @param {string} value ID prefix for every list entry element\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntryElementIdPrefix = function (value) {\n      //TODO could be checked to not contain the index separation chars \"--\"\n      this.description.listEntryElementIdPrefix = withDefault(value, \"\");\n      return this;\n    };\n    /**\n     * Element tag for list entries.\n     * @param {string} [value=\"li\"] tag for every list entry element\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntryElementTag = function (value) {\n      this.description.listEntryElementTag = withDefault(value, defaultTag);\n      return this;\n    };\n    /**\n     * Template for the text of each list entry.\n     * May contain variables in double curly brackets.\n     *\n     * @param {string} [value=\"{{displayName}}: {{value}}\"] list entry text template when there is no summary data group\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntryTextTemplate = function (value) {\n      this.description.listEntryTextTemplate = withDefault(value, defaultTemplate);\n      return this;\n    };\n    /**\n     * Template for the text of each list entry, if the data group \"summary\" exists.\n     * May contain variables in double curly brackets.\n     *\n     * @param {string} [value=\"{{summaries[0].displayName}}: {{summaries[0].value}}\"] list entry text template when there is a summary data group\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.listEntrySummaryTemplate = function (value) {\n      this.description.listEntrySummaryTemplate = withDefault(value, defaultSummaryTemplate);\n      return this;\n    };\n    /**\n     * Template for the style classes of each list entry.\n     * May contain variables in double curly brackets.\n     * To use the property values of this view, prefix them with \"view\", e.g.: \"{{view.listEntryElementIdPrefix}}\".\n     *\n     * @param {string} [value=\"{{view.listEntryElementIdPrefix}} {{category}}\"] list entry style classes template\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n     this.listEntryStyleClassTemplate = function (value) {\n      this.description.listEntryStyleClassTemplate = withDefault(value, defaultStyleClassTemplate);\n      return this;\n    };\n    /**\n     * Specifies, if the list entry can be selected as filter option.\n     * @param {boolean} [value=false] if a list entry is selectable as filter option\n     * @returns {module:searchmenu.SearchViewDescriptionBuilder}\n     */\n    this.isSelectableFilterOption = function (value) {\n      this.description.isSelectableFilterOption = value === true;\n      return this;\n    };\n    /**\n     * Finishes the build of the description and returns its final (meant to be immutable) object.\n     * @returns {module:searchmenu.SearchViewDescription}\n     */\n    this.build = function () {\n      return this.description;\n    };\n  }\n\n  function withDefault(value, defaultValue) {\n    return isSpecifiedString(value) ? value : defaultValue;\n  }\n\n  function isSpecifiedString(value) {\n    return typeof value === \"string\" && value != null && value != \"\";\n  }\n\n  return SearchViewDescription;\n})();\n\n//TODO could provide the currently only described SearchUiData as own data structure in its own module.\n/**\n * @typedef {Object} module:searchmenu.SearchUiData \n * @property {String} [category=\"\"] name of the category. Default = \"\". Could contain a short domain name. (e.g. \"city\")\n * @property {String} fieldName field name that will be used e.g. as a search parameter name for filter options.\n * @property {String} [displayName=\"\"] readable display name for e.g. the list of results.\n * @property {String} [abbreviation=\"\"] one optional character, a symbol character or a short abbreviation of the category\n * @property {String} value value of the field\n * @property {module:searchmenu.SearchUiData[]} details if there are further details that will be displayed e.g. on mouse over\n * @property {module:searchmenu.SearchUiData[]} options contains filter options that can be selected as search parameters \n * @property {module:searchmenu.SearchUiData[]} default array with one element representing the default filter option (selected automatically)\n * @property {module:searchmenu.SearchUiData[]} summaries fields that are used to display the main search entry/result\n * @property {module:searchmenu.SearchUiData[]} urltemplate contains a single field with the value of the url template. Marks the entry as navigation target.\n */\n\n/**\n * @callback module:searchmenu.ResolveTemplateFunction replaces variables with object properties.\n * @param {String} template may contain variables in double curly brackets. T\n * Typically supported variables would be: {{category}} {{fieldName}}, {{displayName}}, {{abbreviation}}, {{value}}\n * @return {String} string with resolved/replaced variables\n */\n\n/**\n * @callback module:searchmenu.FieldsJson returns the fields as JSON\n * @return {String} JSON of all contained fields\n */\n\n/**\n * This function will be called, when search results are available.\n * @callback SearchServiceResultAvailable\n * @param {Object} searchResultData already parsed data object containing the result of the search\n */\n\n/**\n * This function will be called to trigger search (calling the search backend).\n * @callback module:searchmenu.SearchService\n * @param {Object} searchParameters object that contains all parameters as properties. It will be converted to JSON.\n * @param {module:searchmenu.SearchServiceResultAvailable} onSearchResultsAvailable will be called when search results are available.\n */\n\n/**\n * This function converts the data from search backend to the structure needed by the search UI.\n * @callback module:searchmenu.DataConverter\n * @param {Object} searchData\n * @returns {module:searchmenu.SearchUiData} converted and structured data for search UI\n */\n\n/**\n * This function replaces variables in double curly brackets with the property values of the given object.\n * @callback module:searchmenu.TemplateResolver\n * @param {String} templateToResolve may contain variables in double curly brackets e.g. like `\"{{searchtext}}\"`.\n * @param {Object} sourceObject the fields of this object are used to replace the variables in the template\n * @returns {module:searchmenu.SearchUiData} converted and structured data for search UI\n */\n\n/**\n * This function adds predefined search parameters before search is triggered, e.g. constants, environment parameters, ...\n * @callback module:searchmenu.SearchParameterAdder\n * @param {Object} searchParametersObject\n */\n\n/**\n * This function will be called when a new HTML is created.\n * @callback module:searchmenu.ElementCreatedListener\n * @param {Element} newlyCreatedElement\n * @param {boolean} isParent true, if it is the created parent. false, if it is a child within the created parent. \n */\n\n/**\n * This function will be called to navigate to a selected search result url.\n * @callback module:searchmenu.NavigateToFunction\n * @param {String} destinationUrl\n */\n\n/**\n * @typedef {Object} module:searchmenu.SearchMenuConfig\n * @property {module:searchmenu.SearchService} triggerSearch triggers search (backend)\n * @property {module:searchmenu.DataConverter} convertData converts search result data to search ui data. Lets data through unchanged by default.\n * @property {module:searchmenu.searchParameterAdder} addPredefinedParametersTo adds custom search parameters \n * @property {module:searchmenu.ElementCreatedListener} onCreatedElement this function will be called when a new HTML is created.\n * @property {module:searchmenu.NavigateToFunction} navigateTo this function will be called to navigate to a selected search result url.\n * @property {string} searchAreaElementId id of the whole search area (default=\"searcharea\")\n * @property {string} inputElementId id of the search input field (default=\"searchinputtext\")\n * @property {module:searchmenu.SearchViewDescription} resultsView describes the main view containing the search results\n * @property {module:searchmenu.SearchViewDescription} detailView describes the details view\n * @property {module:searchmenu.SearchViewDescription} filterOptionsView describes the filter options view\n * @property {module:searchmenu.SearchViewDescription} filtersView describes the filters view\n * @property {string} [waitBeforeClose=700] timeout in milliseconds when search is closed after blur (loss of focus) (default=700)\n * @property {string} [waitBeforeSearch=500] time in milliseconds to wait until typing is finished and search starts (default=500)\n * @property {string} [waitBeforeMouseOver=700] time in milliseconds to wait until mouse over opens details (default=700)\n */\n\nsearchmenu.SearchMenuAPI = (function () {\n  \"use strict\";\n  /**\n   * Search Menu UI API\n   * @constructs SearchMenuAPI\n   * @alias module:searchmenu.SearchMenuAPI\n   */\n  function SearchMenuApiBuilder() {\n    this.config = {\n      triggerSearch: function (/* searchParameters, onSearchResultsAvailable */) {\n        throw new Error(\"search service needs to be defined.\");\n      },\n      convertData: function (sourceData) {\n        return sourceData;\n      },\n      resolveTemplate: function (/* sourceData */) {\n        throw new Error(\"template resolver needs to be defined.\");\n      },\n      addPredefinedParametersTo: function (/* object */) {\n        //does nothing if not specified otherwise\n      },\n      onCreatedElement: function (/* element, isParent */) {\n        //does nothing if not specified otherwise\n      },\n      navigateTo: function (destinationUrl) {\n        window.location.href = destinationUrl;\n      },\n      createdElementListeners: [],\n      searchAreaElementId: \"searcharea\",\n      inputElementId: \"searchinputtext\",\n      searchTextParameterName: \"searchtext\",\n      resultsView: defaultResultsView(),\n      detailView: defaultDetailView(),\n      filterOptionsView: defaultFilterOptionsView(),\n      filtersView: defaultFiltersView(),\n      waitBeforeClose: 700,\n      waitBeforeSearch: 500,\n      waitBeforeMouseOver: 700\n    };\n    /**\n     * Defines the search service function, that will be called whenever search is triggered.\n     * @param {module:searchmenu.SearchService} service function that will be called to trigger search (backend).\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.searchService = function (service) {\n      this.config.triggerSearch = service;\n      return this;\n    };\n    /**\n     * Defines the converter, that converts search result data to search ui data.\n     * Without setting a data converter, data is taken directly from the backend service,\n     * that needs to provide the results in the search menu data structure.\n     * @param {module:searchmenu.DataConverter} converter function that will be called to create the search menu data structure\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.dataConverter = function (converter) {\n      this.config.convertData = converter;\n      return this;\n    };\n    /**\n     * Defines the template resolver, that replaces variables in double curly brackets with the property values of the given object.\n     * @param {module:searchmenu.TemplateResolver} resolver function that will be called to resolve strings with variables.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n     this.templateResolver = function (resolver) {\n      this.config.resolveTemplate = resolver;\n      return this;\n    };\n    /**\n     * Defines the function, that adds predefined (fixed, constant, environmental) search parameters\n     * to the first parameter object.\n     * @param {module:searchmenu.SearchParameterAdder} adder function that will be called to before search is triggered.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.addPredefinedParametersTo = function (adder) {\n      this.config.addPredefinedParametersTo = adder;\n      return this;\n    };\n    /**\n     * Sets the listener, that will be called, when a new HTML element was created.\n     * @param {module:searchmenu.ElementCreatedListener} listener\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.setElementCreatedHandler = function (listener) {\n      this.config.onCreatedElement = listener;\n      return this;\n    };\n    /**\n     * Adds another listener, that will be called, when a new HTML element was created.\n     * @param {module:searchmenu.ElementCreatedListener} listener\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.addElementCreatedHandler = function (listener) {\n      this.config.createdElementListeners.push(listener);\n      return this;\n    };\n\n    /**\n     * Adds the given style class when an element receives focus.\n     * This is done for every element that is created dynamically (e.g. search results and filters).\n     * It is only meant to be used for browsers like old IE5 ones that doesn't support focus pseudo style class.\n     *\n     * @param {String} [focusStyleClassName=\"focus\"]\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.addFocusStyleClassOnEveryCreatedElement = function (focusStyleClassName) {\n      var className = withDefault(focusStyleClassName, \"focus\");\n      this.addElementCreatedHandler(function (element, isParent) {\n        if (!isParent) {\n          return;\n        }\n        addEvent(\"focus\", element, function (event) {\n          addClass(className, getEventTarget(event));\n        });\n        addEvent(\"blur\", element, function (event) {\n          removeClass(className, getEventTarget(event));\n        });\n      });\n      return this;\n    };\n    /**\n     * Sets the element ID of the parent, that represents the whole search menu component.\n     * @param {String} [id=\"searcharea\"] id of the parent element, that represents the whole search menu component.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.searchAreaElementId = function (id) {\n      this.config.searchAreaElementId = withDefault(id, \"searcharea\");\n      return this;\n    };\n    /**\n     * Sets the input search text element ID,.\n     * @param {String} [id=\"searchinputtext\"] id of the input element, that contains the search text.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.inputElementId = function (id) {\n      this.config.inputElementId = withDefault(id, \"searchinputtext\");\n      return this;\n    };\n    /**\n     * Sets the name of the backend search service parameter, that contains the input search text.\n     * @param {String} [value=\"searchtext\"] name of the parameter, that contains the input search text and that can be used as a variable inside the url or body template for the backend service\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.searchTextParameterName = function (value) {\n      this.config.searchTextParameterName = withDefault(value, \"searchtext\");\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display all search results.  \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultResultsView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays all search results\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultResultsView}\n     */\n    this.resultsView = function (view) {\n      this.config.resultsView = view;\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display details of a selected search result.  \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultDetailView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays details of a selected search result\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultDetailView}\n     */\n    this.detailView = function (view) {\n      this.config.detailView = view;\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display currently selected filter options.   \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultFilterOptionsView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays currently selected filter options\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultFilterOptionsView}\n     */\n    this.filterOptionsView = function (view) {\n      this.config.filterOptionsView = view;\n      return this;\n    };\n    /**\n     * Sets the view, that is used to display search results, that represent filter options.   \n     * The default view settings can be found [here]{@link module:searchmenu.SearchMenuAPI.defaultFiltersView}.\n     *\n     * @param {module:searchmenu.SearchViewDescription} view connects the part of the search menu, that displays search results, that represent filter options\n     * @returns module:searchmenu.SearchMenuAPI\n     * @see {@link module:searchmenu.SearchMenuAPI.defaultFiltersView}\n     */\n    this.filtersView = function (view) {\n      this.config.filtersView = view;\n      return this;\n    };\n    /**\n     * Sets the time the search menu will remain open, when it has lost focus.\n     * Prevents the menu to disappear while using it.\n     * @param {number} [ms=700] time in milliseconds the search menu will remain open until it is closed after loosing focus.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.waitBeforeClose = function (ms) {\n      this.config.waitBeforeClose = ms;\n      return this;\n    };\n    /**\n     * Sets the time to wait before the search service is called.\n     * Prevents calls to the search backend while changing the search input.\n     * @param {number} [ms=500] time in milliseconds to wait before the search service is called\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.waitBeforeSearch = function (ms) {\n      this.config.waitBeforeSearch = ms;\n      return this;\n    };\n    /**\n     * Sets the time to  wait before search result details are opened on mouse over.\n     * Doesn't affect keyboard selection, which will immediately open the search details.\n     * Prevents details to open on search results, that are only touched by the mouse pointer for a short period of time.\n     * @param {number} [ms=700] time in milliseconds to wait before search result details are opened on mouse over.\n     * @returns module:searchmenu.SearchMenuAPI\n     */\n    this.waitBeforeMouseOver = function (ms) {\n      this.config.waitBeforeMouseOver = ms;\n      return this;\n    };\n    /**\n     * Finishes the configuration and creates the {@link module:searchmenu.SearchMenuUI}.\n     * @returns module:searchmenu.SearchMenuUI\n     */\n    this.start = function () {\n      var config = this.config;\n      if (config.createdElementListeners.length > 0) {\n        this.setElementCreatedHandler(function (element, isParent) {\n          var index = 0;\n          for (index = 0; index < config.createdElementListeners.length; index += 1) {\n            config.createdElementListeners[index](element, isParent);\n          }\n        });\n      }\n      return new searchmenu.SearchMenuUI(config);\n    };\n  }\n\n  /**\n   * Contains the default settings for the results view.\n   * - viewElementId = \"`searchresults`\"\n   * - listParentElementId = \"`searchmatches`\"\n   * - listEntryElementIdPrefix = \"`result`\"\n   * - listEntryTextTemplate = \"`{{abbreviation}} {{displayName}}`\"\n   * - listEntrySummaryTemplate = \"`{{summaries[0].abbreviation}} <b>{{summaries[1].value}}</b><br>{{summaries[2].value}}: {{summaries[0].value}}`\"\n   *\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the results view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultResultsView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchresults\")\n      .listParentElementId(\"searchmatches\")\n      .listEntryElementIdPrefix(\"result\")\n      .listEntryTextTemplate(\"{{abbreviation}} {{displayName}}\") \n      .listEntrySummaryTemplate(\n        \"{{summaries[0].abbreviation}} <b>{{summaries[1].value}}</b><br>{{summaries[2].value}}: {{summaries[0].value}}\"\n      )\n      .build();\n  }\n\n  /**\n   * Contains the default settings for the details view.\n   * - viewElementId = \"`searchdetails`\"\n   * - listParentElementId = \"`searchdetailentries`\"\n   * - listEntryElementIdPrefix = \"`detail`\"\n   * - listEntryTextTemplate = \"`<b>{{displayName}}:</b> {{value}}`\"\n   *\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the details view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultDetailView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchdetails\")\n      .listParentElementId(\"searchdetailentries\")\n      .listEntryElementIdPrefix(\"detail\")\n      .listEntryTextTemplate(\"<b>{{displayName}}:</b> {{value}}\")\n      .build();\n  }\n\n  /**\n   * Contains the default settings for the filter options view.\n   * - viewElementId = \"`searchfilteroptions`\"\n   * - listParentElementId = \"`searchfilteroptionentries`\"\n   * - listEntryElementIdPrefix = \"`filter`\"\n   * - listEntryTextTemplate = \"`{{value}}`\"\n   * - listEntrySummaryTemplate = \"`{{summaries[0].value}}`\"\n   * - isSelectableFilterOption = `true`\n   *\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the filter options view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultFilterOptionsView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchfilteroptions\")\n      .listParentElementId(\"searchfilteroptionentries\")\n      .listEntryElementIdPrefix(\"filter\")\n      .listEntryTextTemplate(\"{{value}}\")\n      .listEntrySummaryTemplate(\"{{summaries[0].value}}\")\n      .isSelectableFilterOption(true)\n      .build();\n  }\n\n  /**\n   * Contains the default settings for the filters view.\n   * - viewElementId = \"`searchresults`\"\n   * - listParentElementId = \"`searchfilters`\"\n   * - listEntryElementIdPrefix = \"`filter`\"\n   * - isSelectableFilterOption = `true`\n   * @returns {module:searchmenu.SearchViewDescription} default settings for the filters view\n   * @protected\n   * @memberof module:searchmenu.SearchMenuAPI\n   */\n  function defaultFiltersView() {\n    return new searchmenu.SearchViewDescriptionBuilder()\n      .viewElementId(\"searchresults\")\n      .listParentElementId(\"searchfilters\")\n      .listEntryElementIdPrefix(\"filter\")\n      .isSelectableFilterOption(true)\n      .build();\n  }\n\n  function addEvent(eventName, element, eventHandler) {\n    eventlistener.addEventListener(eventName, element, eventHandler);\n  }\n\n  function getEventTarget(event) {\n    return eventtarget.getEventTarget(event);\n  }\n\n  function addClass(classToAdd, element) {\n    removeClass(classToAdd, element);\n    var separator = element.className.length > 0 ? \" \" : \"\";\n    element.className += separator + classToAdd;\n  }\n\n  function removeClass(classToRemove, element) {\n    var regex = new RegExp(\"\\\\s?\\\\b\" + classToRemove + \"\\\\b\", \"gi\");\n    element.className = element.className.replace(regex, \"\");\n  }\n\n  function withDefault(value, defaultValue) {\n    return isSpecifiedString(value) ? value : defaultValue;\n  }\n\n  function isSpecifiedString(value) {\n    return typeof value === \"string\" && value != null && value != \"\";\n  }\n\n  return SearchMenuApiBuilder;\n}());\n\nsearchmenu.SearchMenuUI = (function () {\n  \"use strict\";\n\n  /**\n   * Search Menu UI.\n   *\n   * Contains the \"behavior\" of the search bar. It submits the search query,\n   * parses the results, displays matches and filters and responds to\n   * clicks and key presses.\n   * Further resources:\n   * - [API]{@link module:searchmenu.SearchMenuAPI}\n   * - [Configuration]{@link module:searchmenu.SearchMenuConfig}\n   * \n   * @constructs SearchMenuUI\n   * @alias module:searchmenu.SearchMenuUI\n   * @see {@link module:searchmenu.SearchMenuAPI}\n   * @see {@link module:searchmenu.SearchMenuConfig}\n   */\n  var instance = function (config) {\n    /**\n     * Configuration.\n     * @type {module:searchmenu.SearchMenuConfig}\n     * @protected \n     */\n    this.config = config;\n    /**\n     * Search text that correspondents to the currently shown results.\n     * @type {String}\n     * @protected \n     */\n    this.currentSearchText = \"\";\n    /**\n     * Timer that is used to wait before the menu is closed.\n     * @type {Timer}\n     * @protected \n     */\n    this.focusOutTimer = null;\n    /**\n     * Timer that is used to wait before the search service is called.\n     * @type {Timer}\n     * @protected \n     */\n    this.waitBeforeSearchTimer = null;\n\n    var search = document.getElementById(config.inputElementId);\n    onEscapeKey(search, function (event) {\n      getEventTarget(event).value = \"\";\n      hideMenu(config);\n    });\n    onArrowDownKey(search, handleEventWithConfig(config, focusFirstResult));\n    addEvent(\"keyup\", search, function (event) {\n      if (this.waitBeforeSearchTimer !== null) {\n        clearTimeout(this.waitBeforeSearchTimer);\n      }\n      var newSearchText = getEventTarget(event).value;\n      this.waitBeforeSearchTimer = window.setTimeout(function () {\n        if (newSearchText !== this.currentSearchText || this.currentSearchText === \"\") {\n          updateSearch(newSearchText, config);\n          this.currentSearchText = newSearchText;\n        }\n      }, config.waitBeforeSearch);\n    });\n\n    var searchareaElement = document.getElementById(config.searchAreaElementId);\n    addEvent(\"focusin\", searchareaElement, function () {\n      var searchInputElement = document.getElementById(config.inputElementId);\n      if (searchInputElement.value !== \"\") {\n        if (this.focusOutTimer != null) {\n          clearTimeout(this.focusOutTimer);\n        }\n        //TODO should only show results if there are some\n        //TODO could add a \"spinner\" when search is running\n        show(config.resultsView.viewElementId);\n      }\n    });\n    addEvent(\"focusout\", searchareaElement, function () {\n      this.focusOutTimer = window.setTimeout(function () {\n        hideMenu(config);\n      }, config.waitBeforeClose);\n    });\n  };\n\n  function updateSearch(searchText, config) {\n    var matchList = document.getElementById(config.resultsView.listParentElementId);\n    matchList.innerHTML = \"\";\n    if (searchText.length === 0) {\n      hideMenu(config);\n      return;\n    }\n    show(config.resultsView.viewElementId);\n    getSearchResults(searchText, config);\n  }\n\n  function getSearchResults(searchText, config) {\n    //TODO should \"retrigger\" search when new filter options are selected (after each?)\n    var searchParameters = getSelectedOptions(config.filtersView.listParentElementId);\n    searchParameters[config.searchTextParameterName] = searchText;\n    config.addPredefinedParametersTo(searchParameters);\n    //TODO could provide optional build in search text highlighting\n    config.triggerSearch(searchParameters, function (jsonResult) {\n      displayResults(config.convertData(jsonResult), config);\n    });\n    //TODO should provide some info if search fails (service temporary unavailable, ...)\n  }\n\n  function displayResults(jsonResults, config) {\n    var index = 0;\n    for (index = 0; index < jsonResults.length; index += 1) {\n      addResult(jsonResults[index], index + 1, config);\n    }\n  }\n\n  function addResult(entry, i, config) {\n    var listElementId = config.resultsView.listEntryElementIdPrefix + \"--\" + i;\n    var resultElementText = createListEntryInnerHtmlText(entry, config.resultsView, listElementId, config.resolveTemplate);\n    var resultElement = createListEntryElement(entry, config.resultsView, listElementId, resultElementText);\n    addClass(resolveStyleClasses(entry, config.resultsView, config.resolveTemplate), resultElement);\n    forEachIdElementIncludingChildren(resultElement, config.onCreatedElement);\n\n    if (isMenuEntryWithFurtherDetails(entry)) {\n      onMenuEntrySelected(resultElement, handleEventWithEntriesAndConfig(entry.details, config, selectSearchResultToDisplayDetails));\n      onMouseOverDelayed(\n        resultElement,\n        config.waitBeforeMouseOver,\n        handleEventWithEntriesAndConfig(entry.details, config, selectSearchResultToDisplayDetails)\n      );\n      onMenuEntryChosen(resultElement, function () {\n        var selectedUrlTemplate = getSelectedUrlTemplate(config.filtersView.listParentElementId, getPropertyValueWithUndefinedDefault(entry, \"category\", \"\"));\n        if (selectedUrlTemplate) {\n          //TODO should add domain, baseurl, ... as data sources for variables to use inside the template\n          var targetURL = config.resolveTemplate(selectedUrlTemplate, entry);\n          config.navigateTo(targetURL);\n        }\n      });\n    }\n    if (isMenuEntryWithOptions(entry)) {\n      var options = entry.options;\n      //TODO should support details for filter options.\n      //TODO could skip sub menu, if there is only one option (with/without being default).\n      //TODO could be used for constants (pre selected single filter options) like \"tenant-number\", \"current-account\"\n      //TODO could remove the original search result filter when the default option is pre selected (and its options are copied).\n      if (isMenuEntryWithDefault(entry)) {\n        options = insertAtBeginningIfMissing(entry.options, entry[\"default\"][0], equalProperties([\"value\"]));\n        var filterOptionsElement = createFilterOption(entry[\"default\"][0], options, config.filtersView, config);\n        addDefaultFilterOptionModificationHandler(filterOptionsElement, options, config);\n      }\n      onMenuEntrySelected(resultElement, handleEventWithEntriesAndConfig(entry.options, config, selectSearchResultToDisplayFilterOptions));\n      onMenuEntryChosen(resultElement, handleEventWithEntriesAndConfig(entry.options, config, selectSearchResultToDisplayFilterOptions));\n    }\n    addMainMenuNavigationHandlers(resultElement, config);\n  }\n\n  function equalProperties(propertyNames) {\n    return function (existingObject, newObject) {\n      var index;\n      for (index = 0; index < propertyNames.length; index += 1) {\n        if (existingObject[propertyNames[index]] != newObject[propertyNames[index]]) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * Adds the given entry at be beginning of the given array of entries if it's missing.\n   * The equalFunction determines, if the new value is missing (returns false) or not (returns true).\n   * If the entry to add is null, the entries are returned directly.\n   *\n   * @param {Object[]} entries\n   * @param {Object} entryToAdd\n   * @param {boolean} equalMatcher takes the existing and the new entry as parameters and returns true if they are considered \"equal\".\n   * @returns {Object[]}\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function insertAtBeginningIfMissing(entries, entryToAdd, equalMatcher) {\n    if (!entryToAdd) {\n      return entries;\n    }\n    var index;\n    var alreadyContainsEntryToAdd = false;\n    for (index = 0; index < entries.length; index += 1) {\n      if (equalMatcher(entries[index], entryToAdd)) {\n        alreadyContainsEntryToAdd = true;\n        break;\n      }\n    }\n    if (alreadyContainsEntryToAdd) {\n      return entries;\n    }\n    var result = [];\n    result.push(entryToAdd);\n    for (index = 0; index < entries.length; index += 1) {\n      result.push(entries[index]);\n    }\n    return result;\n  }\n\n  function isMenuEntryWithFurtherDetails(entry) {\n    return typeof entry.details !== \"undefined\";\n  }\n\n  function isMenuEntryWithOptions(entry) {\n    return typeof entry.options !== \"undefined\";\n  }\n\n  function isMenuEntryWithDefault(entry) {\n    return typeof entry[\"default\"] !== \"undefined\";\n  }\n\n  /**\n   * Reacts to input events (keys, ...) to navigate through main menu entries.\n   *\n   * @param {Element} element to add event handlers\n   * @param {SearchMenuConfig} config search configuration\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function addMainMenuNavigationHandlers(element, config) {\n    onArrowDownKey(element, handleEventWithConfig(config, focusNextSearchResult));\n    onArrowUpKey(element, handleEventWithConfig(config, focusPreviousSearchResult));\n    onEscapeKey(element, handleEventWithConfig(config, focusSearchInput));\n    onArrowLeftKey(element, handleEventWithConfig(config, closeAssociatedSubMenus));\n  }\n\n  /**\n   * Reacts to input events (keys, ...) to navigate through sub menu entries.\n   *\n   * @param {Element} element to add event handlers\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function addSubMenuNavigationHandlers(element) {\n    onArrowDownKey(element, focusNextMenuEntry);\n    onArrowUpKey(element, focusPreviousMenuEntry);\n    onArrowLeftKey(element, returnToMainMenu);\n    onEscapeKey(element, returnToMainMenu);\n  }\n\n  function onMenuEntrySelected(element, eventHandler) {\n    onSpaceKey(element, eventHandler);\n    onArrowRightKey(element, eventHandler);\n  }\n\n  function onMenuEntryChosen(element, eventHandler) {\n    addEvent(\"mousedown\", element, eventHandler);\n    onEnterKey(element, eventHandler);\n  }\n\n  function onSubMenuEntrySelected(element, eventHandler) {\n    addEvent(\"mousedown\", element, eventHandler);\n    onEnterKey(element, eventHandler);\n    onSpaceKey(element, eventHandler);\n  }\n\n  function onFilterMenuEntrySelected(element, eventHandler) {\n    addEvent(\"mousedown\", element, eventHandler);\n    onEnterKey(element, eventHandler);\n    onArrowRightKey(element, eventHandler);\n  }\n\n  function onFilterMenuEntryRemoved(element, eventHandler) {\n    onDeleteKey(element, eventHandler);\n    onBackspaceKey(element, eventHandler);\n    //TODO should also be possible with mouse (without using keys)\n  }\n\n  /**\n   * @param {SearchMenuConfig} config search configuration\n   * @param {EventListener} eventHandler event handler\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function handleEventWithConfig(config, eventHandler) {\n    return function (event) {\n      eventHandler(event, config);\n    };\n  }\n\n  /**\n   * @param {Object[]} entries raw data of the entry\n   * @param {module:searchmenu.SearchMenuConfig} config search configuration\n   * @param {EventListener} eventHandler event handler\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function handleEventWithEntriesAndConfig(entries, config, eventHandler) {\n    return function (event) {\n      eventHandler(event, entries, config);\n    };\n  }\n\n  /**\n   * This callback will be called, if there is not next or previous menu entry to navigate to.\n   * The implementation can decide, what to do using the given id properties.\n   *\n   * @callback module:searchmenu.MenuEntryNotFoundHandler\n   * @param {module:searchmenu.ListElementIdProperties} properties of the element id\n   */\n  /**\n   * This function returns the ID for the first sub menu entry using the given type name (= name of the sub menu).\n   *\n   * @callback module:searchmenu.SubMenuId\n   * @param {string} type name of the sub menu entries\n   */\n  /**\n   * @typedef {Object} module:searchmenu.ListElementIdProperties\n   * @property {id} id Original ID\n   * @property {string} type Type of the list element\n   * @property {number} index Index of the list element\n   * @property {string} previousId ID of the previous list element\n   * @property {string} nextId ID of the next list element\n   * @property {string} firstId ID of the first list element\n   * @property {string} lastId ID of the last list element\n   * @property {module:searchmenu.SubMenuId} subMenuId  Returns the ID of the first sub menu entry (with the given type name as parameter)\n   * @property {string} mainMenuId ID of the main menu entry e.g. to leave the sub menu. Equals to the id, if it already is a main menu entry\n   * @property {boolean} hiddenFieldsId ID of the embedded hidden field, that contains all public information of the described entry as JSON.\n   * @property {boolean} hiddenFields Parses the JSON inside the \"hiddenFieldsId\"-Element and returns the object with the described entry.\n   * @property {boolean} isFirstElement true, if it is the first element in the list\n   * @property {boolean} isSubMenu true, if it is the ID of an sub menu entry\n   */\n  /**\n   * Extracts properties like type and index\n   * from the given list element id string.\n   *\n   * @param {string} id\n   * @return {module:searchmenu.ListElementIdProperties} list element id properties\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function extractListElementIdProperties(id) {\n    var separator = \"--\";\n    var splittedId = id.split(separator);\n    if (splittedId.length < 2) {\n      console.log(\"expected at least one '\" + separator + \"' separator inside the id \" + id);\n    }\n    var extractedMainMenuType = splittedId[0];\n    var extractedMainMenuIndex = parseInt(splittedId[1]);\n    var extractedType = splittedId[splittedId.length - 2];\n    var extractedIndex = parseInt(splittedId[splittedId.length - 1]);\n    var idWithoutIndex = id.substring(0, id.lastIndexOf(extractedIndex) - separator.length);\n    return {\n      id: id,\n      type: extractedType,\n      index: extractedIndex,\n      previousId: idWithoutIndex + separator + (extractedIndex - 1),\n      nextId: idWithoutIndex + separator + (extractedIndex + 1),\n      firstId: idWithoutIndex + separator + \"1\",\n      lastId: idWithoutIndex + separator + document.getElementById(id).parentElement.childNodes.length,\n      mainMenuId: extractedMainMenuType + separator + extractedMainMenuIndex,\n      mainMenuIndex: extractedMainMenuIndex,\n      hiddenFieldsId: id + separator + \"fields\",\n      isFirstElement: extractedIndex <= 1,\n      isSubMenu: splittedId.length > 3,\n      subMenuId: function (typeName) {\n        return id + separator + typeName + separator + \"1\";\n      },\n      replaceMainMenuIndex: function (newIndex) {\n        var newMainMenuIndex = extractedMainMenuType + separator + newIndex;\n        return newMainMenuIndex + id.substring(this.mainMenuId.length);\n      },\n      getNewIndexAfterRemovedMainMenuIndex: function (removedIndex) {\n        if (extractedMainMenuIndex < removedIndex) {\n          return id;\n        }\n        if (extractedMainMenuIndex == removedIndex) {\n          throw new Error(\"index \" + removedIndex + \" should had been removed.\");\n        }\n        return this.replaceMainMenuIndex(extractedMainMenuIndex - 1);\n      },\n      hiddenFields: function () {\n        var hiddenFieldsElement = document.getElementById(id + separator + \"fields\");\n        var hiddenFieldsJson = getPropertyValueWithUndefinedDefault(hiddenFieldsElement, \"textContent\", hiddenFieldsElement.innerText);\n        return JSON.parse(hiddenFieldsJson);\n      }\n    };\n  }\n\n  function focusSearchInput(event, config) {\n    var resultEntry = getEventTarget(event);\n    var inputElement = document.getElementById(config.inputElementId);\n    resultEntry.blur();\n    inputElement.focus();\n    selectionrange.moveCursorToEndOf(inputElement);\n    preventDefaultEventHandling(event); //skips cursor position change on key up once\n    hideSubMenus(config);\n    return inputElement;\n  }\n\n  function focusFirstResult(event, config) {\n    var selectedElement = getEventTarget(event);\n    var firstResult = document.getElementById(config.resultsView.listEntryElementIdPrefix + \"--1\");\n    if (firstResult) {\n      selectedElement.blur();\n      firstResult.focus();\n    }\n  }\n\n  function focusNextSearchResult(event, config) {\n    focusNextMenuEntry(event, function (menuEntryIdProperties) {\n      var next = null;\n      if (menuEntryIdProperties.type === config.resultsView.listEntryElementIdPrefix) {\n        //select first filter entry after last result/match entry\n        //TODO could find a better way (without config?) to navigate from last search result to first options/filter entry\n        next = document.getElementById(config.filterOptionsView.listEntryElementIdPrefix + \"--1\");\n      }\n      if (next === null) {\n        //select first result/match entry after last filter entry (or whenever nothing is found)\n        next = document.getElementById(config.resultsView.listEntryElementIdPrefix + \"--1\");\n      }\n      return next;\n    });\n    hideSubMenus(config);\n  }\n\n  function focusPreviousSearchResult(event, config) {\n    focusPreviousMenuEntry(event, function (menuEntryIdProperties) {\n      var previous = null;\n      if (menuEntryIdProperties.type === config.filterOptionsView.listEntryElementIdPrefix) {\n        //select last result entry when arrow up is pressed on first filter entry\n        //TODO could find a better way (without config?) to navigate from first options/filter entry to last search result?\n        var resultElementsCount = getListElementCountOfType(config.resultsView.listEntryElementIdPrefix);\n        previous = document.getElementById(config.resultsView.listEntryElementIdPrefix + \"--\" + resultElementsCount);\n      }\n      if (previous === null) {\n        //select input, if there is no previous entry.\n        return focusSearchInput(event, config);\n      }\n      return previous;\n    });\n    hideSubMenus(config);\n  }\n\n  /**\n   * Selects and focusses the next menu entry.\n   *\n   * @param {Event} event\n   * @param {module:searchmenu.MenuEntryNotFoundHandler} onMissingNext is called, if no \"next\" entry could be found.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function focusNextMenuEntry(event, onMissingNext) {\n    var menuEntry = getEventTarget(event);\n    var menuEntryIdProperties = extractListElementIdProperties(menuEntry.id);\n    if (menuEntryIdProperties.isSubMenu) {\n      preventDefaultEventHandling(event); //skips e.g. scrolling whole screen down when focus is inside sub menu\n    }\n    var next = document.getElementById(menuEntryIdProperties.nextId);\n    if (next == null && typeof onMissingNext === \"function\") {\n      next = onMissingNext(menuEntryIdProperties);\n    }\n    if (next == null) {\n      next = document.getElementById(menuEntryIdProperties.firstId);\n    }\n    if (next != null) {\n      menuEntry.blur();\n      next.focus();\n    }\n  }\n\n  /**\n   * Selects and focusses the previous menu entry.\n   *\n   * @param {Event} event\n   * @param {module:searchmenu.MenuEntryNotFoundHandler} onMissingPrevious is called, if no \"previous\" entry could be found.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function focusPreviousMenuEntry(event, onMissingPrevious) {\n    var menuEntry = getEventTarget(event);\n    var menuEntryIdProperties = extractListElementIdProperties(menuEntry.id);\n    if (menuEntryIdProperties.isSubMenu) {\n      preventDefaultEventHandling(event); //skips e.g. scrolling whole screen up when focus is inside sub menu\n    }\n    var previous = document.getElementById(menuEntryIdProperties.previousId);\n    if (previous == null && typeof onMissingPrevious === \"function\") {\n      previous = onMissingPrevious(menuEntryIdProperties);\n    }\n    if (previous == null) {\n      previous = document.getElementById(menuEntryIdProperties.lastId);\n    }\n    if (previous != null) {\n      menuEntry.blur();\n      previous.focus();\n    }\n  }\n\n  /**\n   * Gets called when a filter option is selected and copies it into the filter view, where all selected filters are collected.\n   * @param {Event} event \n   * @param {DescribedEntry} entries \n   * @param {module:searchmenu.SearchMenuConfig} config \n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function selectFilterOption(event, entries, config) {\n    var selectedEntry = getEventTarget(event);\n    var selectedEntryData = findSelectedEntry(selectedEntry.id, entries, equalProperties([\"fieldName\", \"value\"]));\n    var filterOptionsElement = createFilterOption(selectedEntryData, entries, config.filtersView, config);\n    //TODO could detect default entry if necessary and call \"addDefaultFilterOptionModificationHandler\" instead\n    addFilterOptionModificationHandler(filterOptionsElement, entries, config);\n    preventDefaultEventHandling(event);\n    returnToMainMenu(event);\n  }\n\n  function createFilterOption(selectedEntryData, entries, view, config) {\n    var filterElements = getListElementCountOfType(view.listEntryElementIdPrefix);\n    var filterElementId = view.listEntryElementIdPrefix + \"--\" + (filterElements + 1);\n    var filterCategory = getPropertyValueWithUndefinedDefault(selectedEntryData, \"category\", \"\");\n    var filterElement = getListEntryByFieldName(filterCategory, selectedEntryData.fieldName, view.listParentElementId);\n    var isAlreadyExistingFilter = filterElement != null;\n    if (isAlreadyExistingFilter) {\n      var updatedText = createListEntryInnerHtmlText(selectedEntryData, view, filterElement.id, config.resolveTemplate);\n      filterElement = updateListEntryElement(filterElement, updatedText);\n      return filterElement;\n    }\n    var filterElementText = createListEntryInnerHtmlText(selectedEntryData, view, filterElementId, config.resolveTemplate);\n    filterElement = createListEntryElement(selectedEntryData, view, filterElementId, filterElementText);\n    addClass(resolveStyleClasses(selectedEntryData, view, config.resolveTemplate), filterElement);\n    forEachIdElementIncludingChildren(filterElement, config.onCreatedElement);\n\n    onFilterMenuEntrySelected(filterElement, handleEventWithEntriesAndConfig(entries, config, selectSearchResultToDisplayFilterOptions));\n    addMainMenuNavigationHandlers(filterElement, config);\n\n    return filterElement;\n  }\n\n  function addFilterOptionModificationHandler(filterElement, entries, config) {\n    onSpaceKey(filterElement, toggleFilterEntry);\n    onFilterMenuEntryRemoved(filterElement, handleEventWithConfig(config, removeFilterElement));\n  }\n\n  function addDefaultFilterOptionModificationHandler(filterElement, entries, config) {\n    onSpaceKey(filterElement, handleEventWithEntriesAndConfig(entries, config, selectSearchResultToDisplayFilterOptions));\n    //TODO could reset elements to their default value upon deletion.\n  }\n\n  /**\n   * Searches all child elements of the given parent element\n   * for an entry with the given fieldName contained in the hidden fields structure.\n   *\n   * @param {String} category of the element to search for\n   * @param {String} fieldName of the element to search for\n   * @param {String} listParentElementId id of the parent element that child nodes will be searched\n   * @returns {HTMLElement} returns the element that matches the given fieldName or null, if it hadn't been found.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getListEntryByFieldName(category, fieldName, listParentElementId) {\n    var globalCategoryResult = null;\n    var result = forEachListEntryElement(listParentElementId, function (element) {\n      var listElementHiddenFields = extractListElementIdProperties(element.id).hiddenFields();\n      if (listElementHiddenFields.fieldName === fieldName) {\n        var elementCategory = getPropertyValueWithUndefinedDefault(listElementHiddenFields, \"category\", \"\");\n        if (elementCategory === \"\") {\n          globalCategoryResult = element;\n        } else if (elementCategory === category) {\n          return element;\n        }\n      }\n    });\n    return (result != null)? result : globalCategoryResult;\n  }\n\n  /**\n   * Returns the property value of the object or - if undefined - the default value.\n   * @param {Object} object \n   * @param {String} propertyName \n   * @param {Object} defaultValue \n   * @returns the property value of the object or - if not set - the default value.\n   */\n  function getPropertyValueWithUndefinedDefault(object, propertyName, defaultValue) {\n    if (typeof object[propertyName] === \"undefined\") {\n      return defaultValue;\n    } \n    return object[propertyName];\n  }\n\n  /**\n   * Gets the currently selected url template for navigation.\n   *\n   * @param {String} listParentElementId id of the parent element that child nodes will be searched\n   * @param {String} category the url template needs to belong to the same category\n   * @returns {String} returns the url template or null, if nothing could be found\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getSelectedUrlTemplate(listParentElementId, category) {\n    return forEachListEntryElement(listParentElementId, function (element) {\n      var listElementHiddenFields = extractListElementIdProperties(element.id).hiddenFields();\n      var urlTemplate = getPropertyValueWithUndefinedDefault(listElementHiddenFields, \"urltemplate\", [\"\"])[0];\n      if (urlTemplate === \"\") {\n        return null; // entry has no url template\n      }\n      var elementCategory = getPropertyValueWithUndefinedDefault(listElementHiddenFields, category, \"\");\n      if ((elementCategory != category) && (elementCategory !== \"\")) {\n        return null; // entry belongs to another category\n      }\n      if (hasClass(\"inactive\", element)) {\n        return null; // entry is inactive\n      }\n      return urlTemplate.value;\n    });\n  }\n\n  function getSelectedOptions(listParentElementId) {\n    var result = {};\n    forEachListEntryElement(listParentElementId, function (element) {\n      var hiddenFields = extractListElementIdProperties(element.id).hiddenFields();\n      if (typeof hiddenFields.fieldName === \"undefined\" || typeof hiddenFields.value === \"undefined\") {\n        return null;\n      }\n      if (hasClass(\"inactive\", element)) {\n        return null; // entry is inactive\n      }\n      result[hiddenFields.fieldName] = hiddenFields.value;\n    });\n    return result;\n  }\n\n  /**\n   * This function is called for every html element of a given parent.\n   *\n   * @callback module:searchmenu.ListElementFunction\n   * @param {Element} listElement name of the sub menu entries\n   * @return {Object} optional result to exit the loop or null otherwise.\n   */\n\n  /**\n   * Iterates through all child nodes of the given parent and calls the given function.\n   * If the function returns a value, it will be returned directly.\n   * If the function returns nothing, the iteration continues.\n   * @param {String} listParentElementId \n   * @param {module:searchmenu.ListElementFunction} listEntryElementFunction \n   * @returns {Object} result of the first entry element function, that had returned one, or null.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function forEachListEntryElement(listParentElementId, listEntryElementFunction) {\n    var listParentElement = document.getElementById(listParentElementId);\n    var i, listElement, result;\n    for (i = 0; i < listParentElement.childNodes.length; i += 1) {\n      listElement = listParentElement.childNodes[i];\n      result = listEntryElementFunction(listElement);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Extracts the entry data that it referred by the element given by its ID out of the list of data entries.\n   * @param {string} element id\n   * @param {DescribedEntry[]} array of described entries\n   * @param {boolean} equalMatcher takes the existing and the new entry as parameters and returns true if they are considered \"equal\".\n   * @returns {DescribedEntry} described entry out of the given entries, that suits the element given by its id.\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function findSelectedEntry(id, entries, equalsMatcher) {\n    var selectedEntryIdProperties = extractListElementIdProperties(id);\n    var selectedEntryHiddenFields = selectedEntryIdProperties.hiddenFields();\n    var entryIndex;\n    var currentlySelected;\n    for (entryIndex = 0; entryIndex < entries.length; entryIndex += 1) {\n      currentlySelected = entries[entryIndex];\n      if (equalsMatcher(currentlySelected, selectedEntryHiddenFields)) {\n        return currentlySelected;\n      }\n    }\n    console.log(\"error: no selected entry found for id \" + id + \" in \" + entries);\n    return null;\n  }\n\n  function selectSearchResultToDisplayDetails(event, entries, config) {\n    hideSubMenus(config);\n    selectSearchResultToDisplaySubMenu(event, entries, config.detailView, config);\n    preventDefaultEventHandling(event);\n  }\n\n  function selectSearchResultToDisplayFilterOptions(event, entries, config) {\n    hideSubMenus(config);\n    selectSearchResultToDisplaySubMenu(event, entries, config.filterOptionsView, config);\n  }\n\n  function selectSearchResultToDisplaySubMenu(event, entries, subMenuView, config) {\n    clearAllEntriesOfElementWithId(subMenuView.listParentElementId);\n    var selectedElement = getEventTarget(event);\n\n    var subMenuEntry = null;\n    var subMenuElement = null;\n    var subMenuIndex = 0;\n    var subMenuEntryId = selectedElement.id + \"--\" + subMenuView.listEntryElementIdPrefix;\n    var subMenuFirstEntry = null;\n    var subMenuElementText;\n    for (subMenuIndex = 0; subMenuIndex < entries.length; subMenuIndex += 1) {\n      subMenuEntry = entries[subMenuIndex];\n      subMenuEntryId = selectedElement.id + \"--\" + subMenuView.listEntryElementIdPrefix + \"--\" + (subMenuIndex + 1);\n      subMenuElementText = createListEntryInnerHtmlText(subMenuEntry, subMenuView, subMenuEntryId, config.resolveTemplate);\n      subMenuElement = createListEntryElement(subMenuEntry, subMenuView, subMenuEntryId, subMenuElementText);\n      addClass(resolveStyleClasses(subMenuEntry, subMenuView, config.resolveTemplate), subMenuElement);\n      forEachIdElementIncludingChildren(subMenuElement, config.onCreatedElement);\n\n      if (subMenuView.isSelectableFilterOption) {\n        addSubMenuNavigationHandlers(subMenuElement);\n        onSubMenuEntrySelected(subMenuElement, handleEventWithEntriesAndConfig(entries, config, selectFilterOption));\n      }\n      if (subMenuIndex === 0) {\n        subMenuFirstEntry = subMenuElement;\n      }\n    }\n    var divParentOfSelectedElement = parentThatMatches(selectedElement, function (element) {\n      return element.tagName == \"DIV\";\n    });\n    var subMenuViewElement = document.getElementById(subMenuView.viewElementId);\n    var alignedSubMenuXPosition = divParentOfSelectedElement.offsetWidth + 15;\n    var alignedSubMenuYPosition = getYPositionOfElement(selectedElement) + getScrollY();\n    subMenuViewElement.style.left = alignedSubMenuXPosition + \"px\";\n    subMenuViewElement.style.top = alignedSubMenuYPosition + \"px\";\n\n    showElement(subMenuViewElement);\n\n    if (subMenuView.isSelectableFilterOption) {\n      selectedElement.blur();\n      subMenuFirstEntry.focus();\n    }\n  }\n\n  /**\n   * Exit sub menu from event entry and return to main menu.\n   * @param {InputEvent} event\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function returnToMainMenu(event) {\n    var subMenuEntryToExit = getEventTarget(event);\n    var subMenuEntryToExitProperties = extractListElementIdProperties(subMenuEntryToExit.id);\n    var mainMenuEntryToSelect = document.getElementById(subMenuEntryToExitProperties.mainMenuId);\n    subMenuEntryToExit.blur();\n    mainMenuEntryToSelect.focus();\n    hideViewOf(subMenuEntryToExit);\n  }\n\n  function closeAssociatedSubMenus(event, config) {\n    hideSubMenus(config);\n  }\n\n  /**\n   * Prevents the given event inside an event handler to get handled anywhere else.\n   * Pressing the arrow key up can lead to scrolling up the view. This is not useful,\n   * if the arrow key navigates the focus inside a sub menu, that is fully contained inside the current view.\n   * @param {InputEvent} inputevent\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function preventDefaultEventHandling(inputevent) {\n    if (typeof inputevent.preventDefault !== \"undefined\") {\n      inputevent.preventDefault();\n    } else {\n      inputevent.returnValue = false;\n    }\n  }\n\n  //TODO could be extracted as ponyfill\n  /**\n   * Browser compatible Y position of the given element.\n   * @returns {number} y position in pixel\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n   function getYPositionOfElement(element) {\n    var selectedElementPosition = element.getBoundingClientRect();\n    if (typeof selectedElementPosition.y !== \"undefined\") {\n      return selectedElementPosition.y;\n    }\n    return selectedElementPosition.top;\n  }\n\n  //TODO could be extracted as ponyfill\n  /**\n   * Browser compatible version of the standard \"window.scrollY\".\n   * @returns {number} y scroll position in pixel\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getScrollY() {\n    var supportPageOffset = typeof window.pageYOffset !== \"undefined\";\n    if (supportPageOffset) {\n      return window.pageYOffset;\n    }\n    var isCSS1Compatible = (document.compatMode || \"\") === \"CSS1Compat\";\n    if (isCSS1Compatible) {\n      return document.documentElement.scrollTop;\n    }\n    return document.body.scrollTop;\n  }\n\n  function clearAllEntriesOfElementWithId(elementId) {\n    var node = document.getElementById(elementId);\n\n    // Fastest way to delete child nodes in Chrome and FireFox according to\n    // https://stackoverflow.com/questions/3955229/remove-all-child-elements-of-a-dom-node-in-javascript\n    if (typeof node.cloneNode === \"function\" && typeof node.replaceChild === \"function\") {\n      var cNode = node.cloneNode(false);\n      node.parentNode.replaceChild(cNode, node);\n    } else {\n      node.innerHTML = \"\";\n    }\n  }\n\n  /**\n   * Toggles a filter to inactive and vice versa.\n   * @param {InputEvent} event\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function toggleFilterEntry(event) {\n    preventDefaultEventHandling(event);\n    var filterElement = getEventTarget(event);\n    toggleClass(\"inactive\", filterElement);\n  }\n\n  function removeFilterElement(event, config) {\n    preventDefaultEventHandling(event);\n    focusPreviousSearchResult(event, config);\n    removeChildElement(event);\n  }\n\n  /**\n   * Removes the event target element from its parent.\n   * @param {InputEvent} event\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function removeChildElement(event) {\n    var element = getEventTarget(event);\n    var parentElement = element.parentElement;\n    var indexOfRemovedElement = extractListElementIdProperties(element.id).mainMenuIndex;\n    parentElement.removeChild(element);\n    forEachChildRecursively(parentElement, 0, 5, function (entry) {\n      if (entry.id) {\n        entry.id = extractListElementIdProperties(entry.id).getNewIndexAfterRemovedMainMenuIndex(indexOfRemovedElement);\n      }\n    });\n  }\n\n  function forEachChildRecursively(element, depth, maxDepth, callback) {\n    if (depth > maxDepth || !element.childNodes) {\n      return;\n    }\n    forEachEntryIn(element.childNodes, function (entry) {\n      callback(entry);\n      forEachChildRecursively(entry, depth + 1, maxDepth, callback);\n    });\n  }\n\n  /**\n   * This function will be called for every found element\n   * @callback module:searchmenu.ElementFoundListener\n   * @param {Element} foundElement\n   * @param {boolean} isParent true, if it is the created parent. false, if it is a child within the created parent.\n   */\n\n  /**\n   * The given callback will be called for the given parent and all its direct child nodes, that contain an id property.\n   * @param {Element} element parent to be inspected\n   * @param {module:searchmenu.ElementFoundListener} callback will be called for every found child and the given parent itself\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function forEachIdElementIncludingChildren(element, callback) {\n    if (element.id) {\n      callback(element, true);\n    }\n    forEachEntryIn(element.childNodes, function (element) {\n      if (element.id) {\n        callback(element, false);\n      }\n    });\n  }\n\n  function forEachEntryIn(array, callback) {\n    var index = 0;\n    for (index = 0; index < array.length; index += 1) {\n      callback(array[index], index + 1); //index parameter starts with 1 (1 instead of 0 based)\n    }\n  }\n\n  /**\n   * @param {String} list element type name e.g. \"li\".\n   * @return {number} list element count of the given type\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function getListElementCountOfType(listelementtype) {\n    var firstListEntry = document.getElementById(listelementtype + \"--1\");\n    if (firstListEntry === null) {\n      return 0;\n    }\n    return firstListEntry.parentElement.childNodes.length;\n  }\n\n  /**\n   * Updates an already existing list entry element to be used for search results, filter options, details and filters.\n   *\n   * @param {Node} already existing element\n   * @param {String} text updated element text\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function updateListEntryElement(existingElement, text) {\n    existingElement.innerHTML = text;\n    return existingElement;\n  }\n\n  /**\n   * Creates a new list entry element to be used for search results, filter options, details and filters.\n   *\n   * @param {DescribedEntry} entry entry data\n   * @param {module:searchmenu.SearchViewDescription} view description\n   * @param {number} id id of the list element\n   * @param {String} text text of the list element\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function createListEntryElement(entry, view, id, text) {\n    var listElement = createListElement(text, id, view.listEntryElementTag);\n    var parentElement = document.getElementById(view.listParentElementId);\n    parentElement.appendChild(listElement);\n    return listElement;\n  }\n\n  /**\n   * Creates the inner HTML Text for a list entry to be used for search results, filter options, details and filters.\n   *\n   * @param {DescribedEntry} entry entry data\n   * @param {module:searchmenu.SearchViewDescription} view description\n   * @param {number} id id of the list element\n   * @param {module:searchmenu.TemplateResolver} resolveTemplate function that resolves variables inside a template with contents of a source object\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function createListEntryInnerHtmlText(entry, view, id, resolveTemplate) {\n    //TODO could support template inside html e.g. referenced by id (with convention over code)\n    //TODO should limit length of resolved variables\n    var text = resolveTemplate(view.listEntryTextTemplate, entry);\n    if (typeof entry.summaries !== \"undefined\") {\n      text = resolveTemplate(view.listEntrySummaryTemplate, entry);\n    }\n    var json = JSON.stringify(entry); //needs to be without spaces\n    text += '<p id=\"' + id + '--fields\" style=\"display: none\">' + json + \"</p>\";\n    return text;\n  }\n\n  function resolveStyleClasses(entry, view, resolveTemplate) {\n    var resolvedClasses = resolveTemplate(view.listEntryStyleClassTemplate, entry);\n    resolvedClasses = resolveTemplate(resolvedClasses, { view: view });\n    return resolvedClasses;\n  }\n\n  /**\n   * Creates a new list element to be used for search results.\n   *\n   * @param {string} text inside the list element\n   * @param {number} id id of the list element\n   * @param {string} elementTag tag (e.g. \"li\") for the element\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function createListElement(text, id, elementTag) {\n    var element = document.createElement(elementTag);\n    element.id = id;\n    element.tabIndex = \"0\";\n    element.innerHTML = text;\n    return element;\n  }\n\n  function hideMenu(config) {\n    hide(config.resultsView.viewElementId);\n    hide(config.detailView.viewElementId);\n    hide(config.filterOptionsView.viewElementId);\n  }\n\n  function hideSubMenus(config) {\n    hide(config.detailView.viewElementId);\n    hide(config.filterOptionsView.viewElementId);\n  }\n\n  /**\n   * Shows the element given by its id.\n   * @param {Element}  elementId ID of the element that should be shown\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function show(elementId) {\n    showElement(document.getElementById(elementId));\n  }\n\n  /**\n   * Shows the given element.\n   * @param {Element} element element that should be shown\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function showElement(element) {\n    addClass(\"show\", element);\n  }\n\n  /**\n   * Hides the element given by its id.\n   * @param elementId ID of the element that should be hidden\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function hide(elementId) {\n    hideElement(document.getElementById(elementId));\n  }\n\n  /**\n   * Hides the view (by removing the class \"show\"), that contains the given element.\n   * The view is identified by the existing style class \"show\".\n   * @param {Element} element\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function hideViewOf(element) {\n    var parentWithShowClass = parentThatMatches(element, function (parent) {\n      return hasClass(\"show\", parent);\n    });\n    if (parentWithShowClass != null) {\n      hideElement(parentWithShowClass);\n      return;\n    }\n  }\n\n  /**\n   * @callback module:searchmenu.ElementPredicate\n   * @param {Element} element\n   * @returns {boolean} true, when the predicate matches the given element, false otherwise.\n   */\n\n  /**\n   * Returns the parent of the element (or the element itself), that matches the given predicate.\n   * Returns null, if no element had been found.\n   *\n   * @param {Element} element\n   * @param {module:searchmenu.ElementPredicate} predicate\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function parentThatMatches(element, predicate) {\n    var parentNode = element;\n    while (parentNode != null) {\n      if (predicate(parentNode)) {\n        return parentNode;\n      }\n      parentNode = parentNode.parentNode;\n    }\n    return null;\n  }\n\n  /**\n   * Hides the given element.\n   * @param element element that should be hidden\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function hideElement(element) {\n    removeClass(\"show\", element);\n  }\n\n  function toggleClass(classToToggle, element) {\n    if (hasClass(classToToggle, element)) {\n      removeClass(classToToggle, element);\n    } else {\n      addClass(classToToggle, element);\n    }\n  }\n\n  function addClass(classToAdd, element) {\n    removeClass(classToAdd, element);\n    var separator = element.className.length > 0 ? \" \" : \"\";\n    element.className += separator + classToAdd;\n  }\n\n  function removeClass(classToRemove, element) {\n    var regex = new RegExp(\"\\\\s?\\\\b\" + classToRemove + \"\\\\b\", \"gi\");\n    element.className = element.className.replace(regex, \"\");\n  }\n\n  function hasClass(classToLookFor, element) {\n    return element.className != null && element.className.indexOf(classToLookFor) >= 0;\n  }\n\n  function onMouseOverDelayed(element, delayTime, eventHandler) {\n    addEvent(\"mouseover\", element, function (event) {\n      this.originalEvent = cloneObject(event);\n      this.delayedHandlerTimer = window.setTimeout(function () {\n        eventHandler(typeof this.originalEvent !== \"undefined\" ? this.originalEvent : event);\n      }, delayTime);\n      this.preventEventHandling = function () {\n        if (this.delayedHandlerTimer !== null) {\n          clearTimeout(this.delayedHandlerTimer);\n        }\n      };\n      addEvent(\"mouseout\", element, this.preventEventHandling);\n      addEvent(\"mousedown\", element, this.preventEventHandling);\n      addEvent(\"keydown\", element, this.preventEventHandling);\n    });\n  }\n\n  function cloneObject(source) {\n    var result = {};\n    var propertyNames = Object.keys(source);\n    for (var propertyIndex = 0; propertyIndex < propertyNames.length; propertyIndex++) {\n      var propertyName = propertyNames[propertyIndex];\n      var propertyValue = source[propertyName];\n      result[propertyName] = propertyValue;\n    }\n    return result;\n  }\n\n  function onEscapeKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Escape\" || event.key == \"Esc\" || keyCodeOf(event) == 27) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onEnterKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Enter\" || keyCodeOf(event) == 13) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onSpaceKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \" \" || event.key == \"Spacebar\" || keyCodeOf(event) == 32) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onDeleteKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Del\" || event.key == \"Delete\" || keyCodeOf(event) == 46) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onBackspaceKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"Backspace\" || keyCodeOf(event) == 8) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onArrowUpKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowUp\" || event.key == \"Up\" || keyCodeOf(event) == 38) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onArrowDownKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowDown\" || event.key == \"Down\" || keyCodeOf(event) == 40) {\n        eventHandler(event);\n      }\n    });\n  }\n  function onArrowRightKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowRight\" || event.key == \"Right\" || keyCodeOf(event) == 39) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function onArrowLeftKey(element, eventHandler) {\n    addEvent(\"keydown\", element, function (event) {\n      if (event.key == \"ArrowLeft\" || event.key == \"Left\" || keyCodeOf(event) == 37) {\n        eventHandler(event);\n      }\n    });\n  }\n\n  function addEvent(eventName, element, eventHandler) {\n    eventlistener.addEventListener(eventName, element, eventHandler);\n  }\n\n  /**\n   * @returns {Element} target of the event\n   */\n  function getEventTarget(event) {\n    return eventtarget.getEventTarget(event);\n  }\n\n  /**\n   * Returns the key code of the event or -1 if it is no available.\n   * @param {KeyboardEvent} event\n   * @return key code or -1 if not available\n   * @protected\n   * @memberof module:searchmenu.SearchMenuUI\n   */\n  function keyCodeOf(event) {\n    return typeof event.keyCode === \"undefined\" ? -1 : event.keyCode;\n  }\n\n  return instance;\n})();"],"names":["$b3dfe3dc9a407745$var$module","exports","getEventTarget","event","currentTarget","srcElement","Error","$e205cf173571b7be$var$module","moveCursorToEndOf","element","setSelectionRange","value","length","selectionStart","selectionEnd","createTextRange","range","collapse","moveEnd","moveStart","select","$18f37e6be747ca26$var$module","addEventListener","eventName","eventHandler","attachEvent","$01c1188281c74e5a$var$module","$01c1188281c74e5a$var$datarestructorInternalCreateIfNotExists","objectToCheck","$01c1188281c74e5a$var$searchmenu","internalCreateIfNotExists","$01c1188281c74e5a$var$eventtarget","parcelRequire","$01c1188281c74e5a$var$selectionrange","$01c1188281c74e5a$var$eventlistener","SearchViewDescriptionBuilder","withDefault","defaultValue","isSpecifiedString","template","defaultTemplate","defaultSummaryTemplate","defaultStyleClassTemplate","this","description","viewElementId","listParentElementId","listEntryElementIdPrefix","listEntryElementTag","listEntryTextTemplate","listEntrySummaryTemplate","listEntryStyleClassTemplate","isSelectableFilterOption","build","SearchMenuAPI","addEvent","removeClass","classToRemove","regex","RegExp","className","replace","config","triggerSearch","convertData","sourceData","resolveTemplate","addPredefinedParametersTo","onCreatedElement","navigateTo","destinationUrl","window","location","href","createdElementListeners","searchAreaElementId","inputElementId","searchTextParameterName","resultsView","detailView","filterOptionsView","filtersView","waitBeforeClose","waitBeforeSearch","waitBeforeMouseOver","searchService","service","dataConverter","converter","templateResolver","resolver","adder","setElementCreatedHandler","listener","addElementCreatedHandler","push","addFocusStyleClassOnEveryCreatedElement","focusStyleClassName","isParent","classToAdd","separator","addClass","id","view","ms","start","index","SearchMenuUI","addResult","entry","i","delayTime","listElementId","resultElementText","createListEntryInnerHtmlText","resultElement","createListEntryElement","resolveStyleClasses","forEachIdElementIncludingChildren","details","isMenuEntryWithFurtherDetails","onMenuEntrySelected","handleEventWithEntriesAndConfig","selectSearchResultToDisplayDetails","originalEvent","source","result","propertyNames","Object","keys","propertyIndex","propertyName","propertyValue","cloneObject","delayedHandlerTimer","setTimeout","preventEventHandling","clearTimeout","onMenuEntryChosen","category","selectedUrlTemplate","getPropertyValueWithUndefinedDefault","forEachListEntryElement","listElementHiddenFields","extractListElementIdProperties","hiddenFields","urlTemplate","elementCategory","hasClass","targetURL","options","isMenuEntryWithOptions","isMenuEntryWithDefault","entries","entryToAdd","equalMatcher","alreadyContainsEntryToAdd","insertAtBeginningIfMissing","equalProperties","filterElement","onSpaceKey","selectSearchResultToDisplayFilterOptions","addDefaultFilterOptionModificationHandler","createFilterOption","addMainMenuNavigationHandlers","existingObject","newObject","onArrowDownKey","handleEventWithConfig","focusNextSearchResult","onArrowUpKey","focusPreviousSearchResult","onEscapeKey","focusSearchInput","onArrowLeftKey","closeAssociatedSubMenus","onArrowRightKey","onEnterKey","onSubMenuEntrySelected","onFilterMenuEntryRemoved","key","keyCodeOf","onDeleteKey","onBackspaceKey","splittedId","split","console","log","extractedMainMenuType","extractedMainMenuIndex","parseInt","extractedType","extractedIndex","idWithoutIndex","substring","lastIndexOf","type","previousId","nextId","firstId","lastId","document","getElementById","parentElement","childNodes","mainMenuId","mainMenuIndex","hiddenFieldsId","isFirstElement","isSubMenu","subMenuId","typeName","replaceMainMenuIndex","newIndex","getNewIndexAfterRemovedMainMenuIndex","removedIndex","hiddenFieldsElement","hiddenFieldsJson","innerText","JSON","parse","resultEntry","inputElement","blur","focus","preventDefaultEventHandling","hideSubMenus","focusFirstResult","selectedElement","firstResult","focusNextMenuEntry","menuEntryIdProperties","next","focusPreviousMenuEntry","previous","resultElementsCount","getListElementCountOfType","onMissingNext","menuEntry","onMissingPrevious","selectFilterOption","selectedEntryData","equalsMatcher","entryIndex","currentlySelected","selectedEntryHiddenFields","findSelectedEntry","toggleFilterEntry","removeFilterElement","addFilterOptionModificationHandler","returnToMainMenu","fieldName","globalCategoryResult","existingElement","text","filterElements","filterElementId","filterCategory","updatedText","innerHTML","object","listEntryElementFunction","listParentElement","selectSearchResultToDisplaySubMenu","subMenuView","elementId","node","cloneNode","replaceChild","cNode","parentNode","clearAllEntriesOfElementWithId","subMenuEntry","subMenuElement","subMenuIndex","subMenuEntryId","subMenuFirstEntry","divParentOfSelectedElement","parentThatMatches","tagName","subMenuViewElement","alignedSubMenuXPosition","offsetWidth","alignedSubMenuYPosition","selectedElementPosition","getBoundingClientRect","y","top","getYPositionOfElement","pageYOffset","compatMode","documentElement","scrollTop","body","style","left","showElement","subMenuEntryToExit","subMenuEntryToExitProperties","mainMenuEntryToSelect","parentWithShowClass","parent","hideElement","hideViewOf","inputevent","preventDefault","returnValue","classToToggle","indexOfRemovedElement","removeChild","forEachChildRecursively","removeChildElement","depth","maxDepth","callback","forEachEntryIn","element1","array","listelementtype","firstListEntry","listElement","elementTag","createElement","tabIndex","createListElement","appendChild","summaries","stringify","resolvedClasses","hideMenu","hide","show","predicate","classToLookFor","indexOf","keyCode","currentSearchText","focusOutTimer","waitBeforeSearchTimer","search","newSearchText","searchText","searchParameters","jsonResult","jsonResults","displayResults","getSearchResults","updateSearch","searchareaElement"],"version":3,"file":"search-menu-ui.js.map","sourceRoot":"../"}